Acessibilidade na Educação a Distância: desenvolvimento
de um player de mídia acessível utilizando HTML5 e WAI-
ARIA e sua integração com o Moodle
Alan Ghelardi, Joice Lee Otsuka, Cristian Kawakami
Secretaria Geral de Educação a Distância (SEaD)   - Universidade Federal de São Carlos
CEP 13565-905 - São Carlos - SP - Brasil
alan.loa@sead.ufscar.br,  joice@ufscar.br,  chrys@sead.ufscar.br
Abstract. People with disabilities (primarily, visual and/or motor impairment)
have been deprived of interacting with audiovisual content in web pages, due
to the current media players lack of accessibility. This research investigates
the impacts of WAI-ARIA specification in the development of accessible rich
internet  applications  and  has  been  taken  through  the  development  of  an
accessible media player. We conclude that using HTML5 and the WAI-ARIA
recommendations,  it  is  possible  to  build  accessible  rich  and  interactive
applications.
Resumo.   Usuários   com   deficiência                                                      (sobretudo   visual   e/ou   motora)
frequentemente se deparam com certas dificuldades durante a interação com
aplicações  web  ricas.  Muitas  metodologias  de  design  empregadas  na
construção de tais aplicações não privilegiam a acessibilidade e acabam por
impossibilitar o pleno acesso desses usuários aos conteúdos disponibilizados
pela internet. O presente artigo investiga os impactos da especificação WAI-
ARIA na construção de aplicações web ricas, baseando-se no desenvolvimento
de um player de mídia acessível, integrado ao Moodle. Conclui-se que a partir
das recomendações do WAI-ARIA é possível construirmos aplicações ricas e
interativas acessíveis.
1. Introdução
No escopo da educação online, acessibilidade é definida pelo IMS Global Learning
Consortium  (2004) como  “a habilidade de ajustar o ambiente de aprendizagem às
necessidades de todos os estudantes”. Segundo esse consórcio a acessibilidade pode ser
determinada  pela  flexibilidade  do  ambiente  educacional  e  pela  disponibilidade  de
conteúdos e atividades alternativos (adaptados) equivalentes aos originais, ou seja, que
atendam aos objetivos pedagógicos pretendidos.
Os  cursos  a  distância  oferecem  características  bastante  favoráveis  para
estudantes com deficiências sensoriais e motoras, dentre as quais podemos destacar: (i)
grande parte dos cursos são oferecidos por meio de computador, o que favorece o uso de
tecnologias  assistivas,  tais  como  leitores  de  tela,  teclados  adaptados  etc.;       (ii)  os
materiais e atividades podem ser desenvolvidos utilizando diferentes mídias, de forma
complementar e também podem ser adaptados para atender diferentes necessidades; (iii)
além disso, os alunos possuem maior flexibilidade de tempo e espaço para estudar e
participar das atividades no ritmo e local mais apropriados às suas necessidades.
Anais do 23º Simpósio Brasileiro de Informática na Educação (SBIE 2012), ISSN 2176-4301
Rio de Janeiro, 26-30 de Novembro de 2012




23º Simpósio Brasileiro de Informática na Educação (SBIE 2012)
Segundo o Censo EAD.BR [ABED, 2010] as mídias   mais utilizadas nos cursos
a distância são: o material impresso (87,3% ), seguido pelo e-learning (71,5%) e pelo
vídeo (51,7%). Dessa forma, para tornar a EaD mais acessível para todos é premente a
busca por soluções para tornar essas mídias acessíveis. Nesse contexto, desde 2011, a
Secretaria  Geral  de  Educação  a  Distância  (SEaD)  da  UFSCar  vem  desenvolvendo
algumas  ações  para  ampliar  a  acessibilidade  dos  cursos  de  graduação  a  distância
oferecidos na modalidade a distância  por  esta  universidade:  (i) disponibilização de
material  impresso  em  formato  digital  acessível  (com  audiodescrição  de  ilustrações,
gráficos e tabelas; navegação por meio de teclado e compatibilidade com leitores de
tela); (ii) criação de audiolivros; (iii) inclusão de janela de libras e legendas em vídeos;
(iv)  desenvolvimento  de  um  player  de  mídia  acessível;  (v) adaptação  do  ambiente
virtual de aprendizagem Moodle para atender recomendações de acessibilidade com
base nas guidelines da W3C [W3C, 2008].
Neste artigo apresentaremos a solução de player de mídia acessível desenvolvida
pelo  grupo  da  SEaD/UFSCar.  Este  trabalho  teve  como  objetivos  principais:              (i)
desenvolvimento de uma solução de player de mídia com controles de reprodução
acessíveis e a integração dessa solução ao Moodle; (ii) estudo dos impactos do uso do
HTML5 [W3C, 2011b] e da especificação WAI-ARIA [W3C, 2011a] na construção de
aplicações web ricas e acessíveis.
O  artigo  está  estruturado  nas  seguintes  seções:  na  seção  2  é  apresentada  a
metodologia   empregada   no   trabalho;   na   seção                                          3   são   apresentadas   algumas
considerações sobre a linguagem HTML5 e a especificação WAI-ARIA. Na seção 4 é
apresentado um estudo comparativo sobre as principais soluções de player de mídia
acessível  disponíveis.  Na  seção                                                             5  é  apresentada  a  solução  de  player  acessível
desenvolvido, bem como considerações sobre a sua integração com o Moodle e os
resultados iniciais obtidos em testes com usuários. Por último, são apresentados os
principais resultados do trabalho e as considerações finais do artigo.
2. Metodologia
O trabalho foi desenvolvido em quatro etapas principais, apresentadas a seguir. As
etapas não seguiram uma ordem cronológica sequencial, considerando que várias das
atividades foram revistas continuamente, ao longo do processo.
A primeira etapa deste trabalho consistiu em  estudos detalhados  de guias e
especificações de acessibilidade recomendados pela W3C, bem como estudos sobre
acessibilidade em aplicações web ricas. Os principais resultados são apresentados na
seção 3.
A segunda etapa consistiu de levantamentos e testes de outras soluções de player
de mídia acessível, utilizando diferentes navegadores e leitores de tela. Os resultados
das análises são apresentados na seção 4.
Na terceira etapa foi realizado o desenvolvimento do player acessível utilizando
HTML5 e em conformidade com as recomendações da especificação WAI-ARIA. O
autor principal deste trabalho é deficiente visual e é aluno do curso Bacharelado em
Sistemas  de  Informação  oferecido  na  modalidade  a  distância  pela  UFSCar.  A
participação direta do aluno como idealizador e responsável pelo desenvolvimento do
player acessível, possibilitou um acurado levantamento dos requisitos de acessibilidade
e  o  design  participativo  da  aplicação.  O  trabalho  foi  apoiado  e  acompanhado  por
27




23º Simpósio Brasileiro de Informática na Educação (SBIE 2012)
desenvolvedores, técnicos e professores da UFSCar. Na sequência foram realizados
testes com usuários e a integração da solução desenvolvida com o AVA Moodle.   Os
principais resultados e considerações sobre essas etapas são apresentados na seção 5.
3. HTML5, acessibilidade em aplicações web ricas e o WAI-ARIA
Uma das inovações mais significativas propostas pelo HTML5 é a introdução das tags
<video> e <audio> que possibilitam a incorporação de recursos multimídia de forma
nativa às páginas web, o que até então só era possível por meio de tecnologias como o
Adobe Flash1, Microsoft Silverlight2 e JavaFX3.
A necessidade de se prover players para a manipulação de recursos multimídia
com  layouts  consistentes  em  diferentes  browsers  tem  levado  desenvolvedores  a
empregarem técnicas de criação de aplicações web ricas para o desenvolvimento de
soluções customizadas. Todavia, muitas dessas técnicas podem prejudicar a interação de
usuários com deficiência, caso a acessibilidade em tais aplicações não seja tratada de
forma adequada.
Um dos maiores problemas para a acessibilidade, introduzido no recente cenário
da web e que afeta principalmente usuários com deficiência visual, é o emprego de tags
do HTML com um papel semântico diferente daquele para o qual foram concebidas. Em
geral,  essa                                                                                “resignificação”  das  tags  tem  sido  empregada  por  desenvolvedores  de
aplicações web que combinam tecnologias como o HTML, o CSS e o JavaScript para a
construção de componentes visuais ricos (emulando a aparência e o funcionamento de
componentes similares presentes em sistemas desktop). Por exemplo, uma lista não
ordenada (tag ul) e estilizada com CSS pode ser utilizada para emular a aparência e o
comportamento  de  um  menu  de  contexto  idêntico  àqueles  com  os  quais  estamos
habituados em sistemas desktop. Entretanto, ainda que para um usuário vidente seja
óbvio que o componente em questão seja um menu de contexto, ferramentas assistivas
como leitores de tela continuarão a tratá-lo como uma simples lista não ordenada, o que
pode confundir o usuário com deficiência visual.
O WAI-ARIA se propõe a resolver os problemas mencionados por meio da
inserção de um conjunto de atributos no HTML  (notadamente roles,  states e
properties) que servem para fornecer a ferramentas assistivas maiores informações
acerca  do  real  papel  semântico  de  componentes  visualmente  ricos  presentes  no
documento. A partir desses atributos, ferramentas assistivas (sobretudo leitores de tela)
tornam-se capazes de interpretar e interagir com tais componentes de forma similar ao
que fazem com componentes análogos em sistemas desktop, provendo a usuários com
deficiência uma experiência mais acessível em aplicações web ricas.
Salienta-se  que  embora  nem  todos  os  recursos  previstos  pela  especificação
funcionem de forma consistente em todos os navegadores e ferramentas assistivas, os
resultados obtidos com o uso do WAI-ARIA mostram-se extremamente satisfatórios e
promissores,  sobretudo,  quando  os  autores  seguem  os  padrões  indicados  pela
especificação.  Esses  padrões  oferecem  certas  diretrizes  para  que  componentes  web
1
http://www.adobe.com/products/flash.html
2
http://www.microsoft.com/brasil/silverlight/
3
http://www.oracle.com/technetwork/java/javafx/overview/index.html
28




23º Simpósio Brasileiro de Informática na Educação (SBIE 2012)
customizados presentes em RIAs (como botões, sliders, menus, etc.) possam responder
a eventos do teclado de forma similar a componentes desktop, o que é obtido a partir do
tratamento programático  (via JavaScript). Por exemplo, um botão deve ter sua ação
executada sempre que o usuário pressionar as teclas “enter” ou barra de espaço sobre
ele, o controle em foco no interior de uma barra de ferramentas deve ser alterado sempre
que o usuário pressionar as setas direcionais do teclado etc.
Como uma prova de conceito das capacidades do WAI-ARIA em oferecer meios
coesos para a criação de aplicações ricas e acessíveis para a internet, adotamos esse
conjunto de atributos e boas práticas no projeto de desenvolvimento do player acessível
[W3C, 2010]. Descreveremos os métodos empregados e alguns dos resultados obtidos
mais adiante. Antes, porém, faremos uma breve análise acerca de trabalhos que vêm
sendo desenvolvidos com o intuito de prover acessibilidade em ambientes virtuais e
conteúdos multimídia.
4. Trabalhos Relacionados
Analisando os trabalhos na área de Informática na Educação dos últimos anos, podemos
identificar algumas iniciativas de pesquisa com foco na acessibilidade em ambientes
virtuais de aprendizagem e em recursos multimídia.
Ferlin et al. [2008] faz uma análise de avaliação da acessibilidade em ambientes
virtuais de aprendizagem, enfatizando aspectos relativos à interação de pessoas com
deficiência visual (cegueira, visão subnormal e daltonismo). Os autores apresentam um
instrumento para auxiliar na averiguação de critérios de acessibilidade visual presentes
em  AVAs,  com  base  nas  recomendações  do  W3C  WCAG  1.0.  O  instrumento  de
avaliação   proposto aponta 13 aspectos de acessibilidade visual que devem ser atendidos
pelos  AVAs  e,  para  cada  um  dos  aspectos  elencados,  são  propostas  questões  que
auxiliam na verificação de conformidade do AVA.
Santarosa et al.  [2009] apresenta um conjunto de estratégias empregadas no
desenvolvimento do software Eduquito, um ambiente virtual de aprendizagem projetado
pela  equipe  de  pesquisadores  do  NIEE/UFRGS  e  fundamentado  em  princípios  de
acessibilidade  e  desenho  universal  recomendados  pela  W3C/WAI,  dando  especial
atenção à interação de usuários com deficiência visual e auditiva. Podem-se destacar
neste trabalho as sessões “Validação com sujeitos com deficiência visual” e “Oficina
Multimídia:  qualificando  a  mediação  tecnológica”,  nas  quais  são  apresentadas,
respectivamente, considerações acerca das ações corretivas empregadas no ambiente a
fim  de  prover-se  maior  acessibilidade a  usuários  com  deficiência  visual  e  sobre o
desenvolvimento de uma ferramenta acessível destinada à produção multimídia.
O presente trabalho visa apresentar uma proposta de player de mídia acessível
que possa ser integrado a ambientes virtuais de aprendizagem  web. Para tanto, foi
realizada também uma análise das principais soluções de player de mídia disponíveis,
tendo como foco os aspectos relativos à acessibilidade, buscando traçar um comparativo
entre as estratégias empregadas para a construção das interfaces com o usuário. Foram
analisados os projetos: LeanBack Player4, JPlayer5, Video.js6   e Accorn Media Player7 .
4 http://leanbackplayer.com/
5   http://jplayer.org/
29




23º Simpósio Brasileiro de Informática na Educação (SBIE 2012)
A análise foi desenvolvida utilizando o sistema operacional Windows, o navegador
Microsoft  Internet  Explorer                                                                    9,  e  o  leitor  JAWS  for  Windows  13.0.527.  A  seguir
apresentamos  uma  síntese  das  impressões  coletadas  com  algumas  explicações  para
determinados problemas de acessibilidade detectados.
O LeanBack Player apresenta controles inacessíveis à interação por teclado e
que  não  são  reconhecidos  por  leitores  de  tela.  A  principal  razão  para  a  falta  de
acessibilidade é o emprego de elementos do HTML que, por padrão, não recebem foco
do teclado e não apresentam qualquer valor semântico para leitores de tela. O JPlayer
utiliza um conjunto de links devidamente estilizados para simularem a aparência dos
controles do vídeo/áudio. Embora tais controles sejam aptos a receberem o foco do
teclado e ofereçam rótulos textuais que identificam suas funcionalidades, o emprego de
links  em  componentes  que  se  comportam  como  botões  de  comando  prejudica  a
acessibilidade na aplicação, visto que os leitores de tela tratarão esses componentes
como links convencionais e não como botões. O  Video.js     apresenta  controles  com
rótulos textuais e que são tratados de forma programática para responderem a eventos
do teclado (como o pressionar das teclas “enter” ou barra de espaços). Entretanto, como
os controles são emulados a partir da  tag div do HTML, estes não  possuem um
significado adequado a leitores de tela, que interpretam tais componentes como texto
puro. Além disso, a barra de controles do player depende da interação com o mouse
para se tornar visível e como não há nenhuma forma alternativa de exibi-la por meio do
teclado, a acessibilidade na aplicação é bastante prejudicada. O Accorn Media Player
apresenta uma solução bastante acessível, valorizando a semântica e utilizando diversos
atributos  do  WAI-ARIA  na  composição  da  sua  interface,  a  fim  de  prover  uma
experiência mais acessível a usuários com deficiência. Os controles principais do player
(baseados na tag Button) e os sliders que permitem o controle do volume e do tempo
de reprodução do vídeo/áudio são aptos a receber o foco do teclado e apresentam uma
semântica adequada, embora os sliders não ofereçam rótulos textuais que possibilitem a
um usuário cego identificar seus papéis com exatidão.
Salienta-se, que com exceção do Accorn Media Player, nenhum dos projetos
analisados oferece formas satisfatórias para o controle do nível do volume ou do tempo
de reprodução do vídeo/áudio por meio do teclado ou da utilização de um leitor de telas.
Além disso, nenhum dos projetos citados sinaliza a usuários com deficiência visual o
progresso do carregamento do recurso multimídia. A exceção do JPlayer, os demais
projetos analisados oferecem suporte para a inserção de legendas. Entretanto, nenhum
dos projetos em questão parece utilizar o conceito de  “live regions” do WAI-ARIA
[Thiessen, 2011] de forma adequada, a fim de possibilitar que leitores de tela leiam as
legendas de forma automática, tão logo elas sejam incluídas no documento, o que
beneficiaria consideravelmente os usuários com deficiência visual  (que podem tirar
proveito das legendas em casos de traduções ou de descrições textuais). Ressalta-se
ainda, que o LeanBack Player e o Video.js não apresentam formas acessíveis para que
as legendas sejam habilitadas ou desabilitadas.
6   http://videojs.com/
7 http://ghinda.net/acornmediaplayer/
30




23º Simpósio Brasileiro de Informática na Educação (SBIE 2012)
5. Solução Proposta
Nesta  seção  apresentamos  algumas  das  funcionalidades  do  player  proposto  e  as
principais estratégias empregadas com o intuito de investigar as alternativas mais coesas
para  a  solução  dos  problemas  encontrados  nos  players  existentes,  com  base  em
recomendações  de  acessibilidade  em  aplicações  web  (sobretudo  as  fornecidas  pelo
WAI-ARIA). Também são apresentadas considerações sobre a integração do player
com o Moodle e os resultados de testes com usuários realizados para a avaliação da
acessibilidade do player desenvolvido.
5.1 Funcionalidades implementadas e conformidade com o WAI-ARIA
O player de mídia desenvolvido utiliza recursos do WAI-ARIA para prover controles
acessíveis. Por exemplo, a tag div foi utilizada com o atributo role=”toolbar”,
tornando-a  mais  representativa  a  ferramentas  assistivas.  Adicionalmente,  o  rótulo
“Barra de Controles”   foi inserido por meio do atributo “aria-label”, identificando
o seu papel no contexto da aplicação.
A  partir  do  controle  de  eventos  do  teclado  por  intermédio  da  linguagem
JavaScript, foi implementado um modelo customizado de navegação pelos controles do
player, com o intuito de prover maior comodidade a usuários que utilizam o computador
unicamente por meio do teclado. Assim, tal como no modelo desktop, as teclas “tab” e a
combinação “shift+tab” permitem que o usuário se desloque rapidamente para fora da
barra de controles, enquanto que as setas direcionais possibilitam o deslocamento por
meio dos controles do player de forma horizontal e vertical.
Os controles de reprodução, áudio, tela inteira e legendas foram construídos a
partir da tag a  do HTML e estilizados com CSS para simularem a aparência de botões.
Como uma prova de conceito do WAI-ARIA, utilizou-se o atributo “role” com o
valor “Button” a fim de expor o papel semântico de tais componentes a leitores de tela
de forma adequada. Cada botão apresenta ícones que identificam sua funcionalidade a
usuários com visão e oferecem rótulos textuais alternativos a usuários com deficiência
visual (por meio do atributo “aria-labelledby”). Esses rótulos são atualizados de
acordo com a interação do usuário, tal como ocorre com os ícones que identificam a
mudança de funcionalidade dos botões.
O player também apresenta dois sliders que permitem o controle do tempo de
reprodução e do volume do recurso multimídia. Esses controles foram devidamente
etiquetados (por meio do atributo “aria-labelledby”) e marcados com os atributos
pertinentes  do  WAI-ARIA  (notadamente, role=“slider”,                                       “aria-valuemin”,
“aria-valuenow”,                                                                              ”aria-valuemax”   e   “aria-valuetext”)  a  fim  de
identificar  seu  papel  de  forma  semântica  a  ferramentas  assistivas.    Utilizando  a
linguagem JavaScript implementou-se um suporte a interação com tais componentes por
meio de mouse e alternativamente, por meio de teclado. Adicionalmente, empregou-se o
atributo “aria-describedby” a fim de prover-se a leitores de tela descrições a cerca
das  funcionalidades  desses  componentes  (tal  como  ocorre  no  modelo  das  APIs  de
acessibilidade dos sistemas desktop). Ambos os sliders identificam sua posição por
meio  de  valores  percentuais  (atualizados  dinamicamente)  para  que  o  usuário  com
deficiência visual saiba qual é o nível do volume atual e qual a posição da faixa na linha
do tempo.
31




23º Simpósio Brasileiro de Informática na Educação (SBIE 2012)
Figura 1 - Imagem do player acessível
O player também inclui uma barra de progresso (corretamente identificada por
leitores de tela por meio do atributo “progressbar” do WAI-ARIA) que identifica o
percentual  de  carregamento  do  recurso  multimídia.  Essa  barra  de  progresso  está
relacionada a um rótulo textual  (através do atributo  “aria-labelledby”) que expõe a
leitores de tela o estado de carregamento do vídeo.
Atualmente, o player utiliza o “polyfill” Captionator.js8, um projeto JavaScript
de código aberto que implementa a especificação de “text tracks” da W3C (ainda em
processo de desenvolvimento), para oferecer suporte a legendas. O projeto utiliza o
conceito de  “live regions” do WAI-ARIA  (definindo o elemento HTML em que as
legendas são incluídas com a marcação aria-live=”polite”), o que permite a
leitores  de  tela  reconhecerem  as  legendas  tão  logo  elas  sejam  adicionadas  ao
documento.
Ainda como uma prova de conceito do WAI-ARIA, implementou-se um menu
de  contexto  associado  ao  botão                                                         “Legendas”  que  emula  o  comportamento  de  um
componente análogo em sistemas desktop. Com isso, usuários com deficiência visual
e/ou motora podem interagir com o componente em questão da forma como estão
habituados: as setas para cima e para baixo deslocam o foco pelos itens do menu (de
forma circular), seta para direita abre um submenu associado ao item atual, seta para
esquerda retorna o foco para o menu anterior fechando o atual, a tecla “esc” fecha o
menu atual, as teclas “enter” e barra de espaço ativam o item de menu em foco etc.
Adicionalmente,  o  conceito  de                                                           “states”  do  WAI-ARIA  foi  empregado  em
diversos componentes a fim de sinalizar alterações de estado, por exemplo, a marcação
aria-disabled=”true” indicando que um determinado controle está desabilitado, o
atributo aria-checked=”true” apontando que um item de menu do tipo rádio ou
caixa de verificação está selecionado, etc.
Salienta-se que o principal objetivo das estratégias empregadas é prover uma
forma alternativa, coerente e acessível a cada meio de interação visual com os controles
8
https://github.com/cgiffard/Captionator
32




23º Simpósio Brasileiro de Informática na Educação (SBIE 2012)
do player, premissa esta que deve nortear o desenvolvimento de qualquer aplicação. Por
fim, a interface do player foi adaptada utilizando CSS, buscando-se uma solução que
atenda também usuários videntes, mantendo os recursos de interação visual aos quais a
maioria dos usuários está habituada.
5.2 Integração do player acessível com o ambiente Moodle
O player desenvolvido foi integrado ao AVA Moodle, versão a 1.9.19, de forma que ao
solicitar a execução de vídeos nos formatos MP4, OGG ou WEBM dentro do Moodle, o
player acessível é automaticamente ativado para a execução do vídeo. Os vídeos estão
sendo finalizados e disponibilizados nos três formatos mencionados, considerando que
diferentes navegadores suportam apenas um subconjunto desses e nenhum formato é
suportado por todos.
Para possibilitar a integração do player ao ambiente virtual, foram necessárias
algumas adaptações neste ambiente. Em especial, partes do código tiveram que ser
adaptadas com a inserção de recursos do HTML5 para que a tag video pudesse ser
reconhecida pelos navegadores web. Assim, apenas com a utilização da tag video, os
navegadores reconhecem que está sendo chamado para sua interface um arquivo de
vídeo  que  será  exibido  pelo  player  acessível,  sem  a  necessidade  de  utilização  de
plugins, já que todas as tecnologias necessárias estão inseridas no servidor em que o
Moodle está hospedado.
5.3 Testes com usuários
Para a avaliação da acessibilidade do player desenvolvido, além dos testes realizados
pelos  desenvolvedores,  foram  realizados  testes  com  três  usuários:  todos  do  sexo
masculino,  com  idade  na  faixa  de                                                          29  a  45  anos.  Um  dos  avaliadores  apresenta
deficiência visual bilateral parcial  (baixa visão) e dois apresentam deficiência visual
bilateral e total. Todos são experientes na utilização de leitores de tela, bem como das
demais funcionalidades do computador. Um dos avaliadores é graduado em Economia,
outro é graduado em Análise e Desenvolvimento de Sistemas e o terceiro está em
processo de graduação na área de Computação. Um avaliador realizou os testes nas
dependências  da  SEaD/UFSCar  com  o  acompanhamento  da  nossa  equipe  de
acessibilidade e os outros dois realizaram os testes em suas casas, com seus próprios
equipamentos e softwares.
Nos testes realizados na   SEaD/UFSCar utilizou-se os leitores de tela JAWS
(versões 11 e 12) e   NVDA 2012, e os navegadores Internet Explorer 9, Mozilla Firefox
14 e Google Chrome. Para os testes dos dois voluntários que realizaram as avaliações de
suas casas, sugeriu-se que os avaliadores utilizassem os leitores de tela e navegadores
com os quais estão mais habituados e sentem-se mais confortáveis. Assim, um deles
optou  pela  utilização  do  leitor  de  telas  JAWS  for  Windows  13  com  o  navegador
Microsoft Internet Explorer 9, enquanto que o outro, além de ter se submetido aos testes
com essas mesmas ferramentas, também utilizou o leitor de telas NVDA 2012.2 com o
navegador Mozilla Firefox 14 (ambos são usuários do sistema operacional Windows).
Os  avaliadores  receberam  orientações  iniciais  sobre  as  funcionalidades  do
player, além de algumas diretrizes básicas para a análise da aplicação. Pediu-se que,
além de uma exploração livre das funcionalidades, os participantes se concentrassem em
responder perguntas como:
33




23º Simpósio Brasileiro de Informática na Educação (SBIE 2012)
   Você conseguiu compreender, de forma clara, como o player funciona?
   Você conseguiu navegar e interagir com os controles de forma adequada?
   Você  sentiu  alguma  dificuldade  para  reconhecer  e  utilizar  os  sliders  que
permitem o controle do tempo e do volume do vídeo/áudio?
   Você sentiu dificuldades para utilizar o menu de contexto que permite a ativação
das legendas/transcrições e a seleção do idioma das mesmas?
   Ao   ativar   as   legendas,   seu   leitor   de   telas   passou   a   pronunciá-las
automaticamente?
   De  acordo  com  sua  análise,  há  vantagens  na  utilização  dessa  solução,  em
comparação com outras soluções que você já tenha utilizado na internet?
Os resultados dos testes foram satisfatórios com os três usuários e com todas as
combinações de ferramentas assistivas e navegadores por eles utilizados, exceto com o
Google Chrome  (que ainda apresenta inconsistências no suporte ao WAI-ARIA e a
demais  padrões  de  acessibilidade).  Não  foram  detectados  sérios  problemas  de
navegação e interação com os componentes do player, que pudessem inviabilizar seu
uso em uma situação real. Um dos participantes relatou uma pequena inconsistência no
comportamento do JAWS for Windows: quando o foco está sobre os sliders e o usuário
pressiona as setas para cima e para baixo a fim de interagir com o componente, o leitor
de telas não anuncia a atualização nas porcentagens indicadas, o que só ocorre quando
as setas laterais do teclado são utilizadas (o mesmo não ocorre com o NVDA).
Os avaliadores  mostraram-se satisfeitos  com a  acessibilidade e  a autonomia
oferecida pelo player, apontando vantagens dessa abordagem perante as dificuldades
com os quais estão habituados no dia adia para interagirem com recursos dessa natureza.
Os   participantes   relataram   que   não   tiveram   problemas   para   compreender   o
funcionamento do player e, segundo a análise realizada, todas as funcionalidades se
comportaram de forma esperada.
6. Resultados
Consideramos  que  os  objetivos  do  trabalho  foram  alcançados  de  forma  bastante
satisfatória.  A  solução  de  player  acessível  foi  desenvolvida  utilizando  HTML5  e
seguindo  as  recomendações  da  especificação  WAI-ARIA.  Os  testes  com  usuários
revelaram resultados de acessibilidade bastante satisfatórios, indicando sucesso na meta
de desenvolvimento de uma solução de player de mídia com controles de reprodução
acessíveis. O player desenvolvido foi integrado ao AVA da SEaD/UFSCar e já pode ser
utilizado pelos estudantes dos cursos oferecidos na modalidade EaD da instituição. O
player deverá ser distribuído como software livre para que todos possam utilizá-lo e
contribuir para a sua evolução.
Este trabalho possibilitou também o desenvolvimento de um amplo estudo sobre
os  impactos  do  uso  do  HTML5  e  da  especificação  WAI-ARIA  na  construção  de
aplicações  web  ricas  e  acessíveis.  O  WAI-ARIA  mostra-se  promissor  em  suas
contribuições para a acessibilidade e, certamente, se tornará cada vez mais importante
para possibilitar um pleno acesso de usuários com deficiência aos recursos da internet,
visto que a adoção de aplicações web com interfaces ricas continuará a crescer e a se
popularizar nos próximos anos.
34




23º Simpósio Brasileiro de Informática na Educação (SBIE 2012)
7. Considerações finais
Conclui-se que, não obstante ao crescente desenvolvimento de aplicações web, cada vez
mais ricas e interativas (sejam elas baseadas na distribuição de recursos multimídia ou
não), a partir da utilização de especificações web como o HTML5, o WAI-ARIA é
perfeitamente  possível  a  construção  de  soluções  acessíveis  a  utilizadores  com
deficiência, sem sacrificar a aparência e a interatividade das mesmas.
Apesar de ainda ocorrerem algumas incongruências pela falta de um suporte
pleno às recomendações da especificação por parte dos navegadores e das ferramentas
assistivas, esse suporte vem sendo melhorado a cada nova versão desses softwares e a
tendência é que os resultados obtidos a partir de soluções como a apresentada neste
artigo  respondam  de  forma  plena  em  um  futuro  próximo,  com  a  aderência  das
tecnologias e dos desenvolvedores às padronizações.
8. Agradecimentos
Os autores agradecem o apoio e suporte concedido pela CAPES e ProExt.
9. Referências
ABED (2010).   Censo EAD.BR Relatório analítico da aprendizagem a distância no Brasil. São
Paulo:                                                                                           Pearson                       Education                                                                                     do            Brasil,                                         2010.                    Disponível   em:
http://www.abed.org.br/censoead/CensoEaDbr0809_portugues.pdf.
Ferlin, W. et al. (2008). Uma ferramenta para avaliação de ambientes e-learning quanto aos
aspectos  da  acessibilidade  visual.  Simpósio  Brasileiro  de  Informática  na  Educação,
Fortaleza, 2008.
IMS  Global  Learning  Consortium  (2004).  IMS  Access  For  All  v2.0  Final  Specification.
Disponível em: http://www.imsglobal.org/accessibility/.
Santarosa, L. M.; Conforto, D.; Basso, L. O. (2009) AVA inclusivo: validação da acessibilidade
na perspectiva de interagentes com limitações visuais e auditivas. Simpósio Brasileiro de
Informática na Educação, Florianópolis, 2009.
Thiessen, P. WAI-ARIA live regions and HTML5. In Proc. W4A’11. ACM (2011), Article 27.
Disponível em: http://www.ra.ethz.ch/cdstore/www2011/W4A/p18.pdf.
World Wide Web Consortium - W3C (2008). Web Content Accessibility Guidelines (WCAG)
2.0.                                                                                             W3C     Recommendation        11                                                                                            December      2008.                                           Disponível               em:
                                                                                                 http://www.w3.org/TR/WCAG/.
                                                                                                                               World Wide Web Consortium - W3C (2010). WAI-ARIA 1.0 Authoring Practices:An author's
                                                                                                                               guide  to  understanding  and  implementing  Accessible  Rich  Internet  Applications.  W3C
Working  Draft                                                                                   16  September                 2010.                                                                                                       Disponível  em:http://www.w3.org/TR/wai-aria-
practices/.
                                                                                                                               World Wide Web Consortium - W3C (2011a). Accessible Rich Internet Applications (WAI-
ARIA)                                                                                                                          1.0.  W3C  Candidate  Recommendation,                                                         18  January                                                   2011.  Disponível  em:
                                                                                                                               http://www.w3.org/TR/wai-aria/. Última consulta em: 06/07/2012.
World Wide Web Consortium - W3C (2011b). HTML5: A vocabulary and associated APIs for
HTML   and   XHTML.   W3C   Working   Draft,                                                     25   May                      2011.   Disponível   em:
http://www.w3.org/ TR/ 2011/WD-html5-20110525/. Última consulta em: 06/07/2012.
35





