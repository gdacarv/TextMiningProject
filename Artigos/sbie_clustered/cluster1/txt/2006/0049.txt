Um Sistema de Autoria para Construç a o de Ambientes
Interativos de Aprendizagem baseado em Agentes
Ig Bittencourt, Camila Nunes, Evandro Costa, Marcos Tadeu, Camila Bezerra
1
Instituto de Computaç ao  Universidade Federal de Alagoas (UFAL)
Campus A. C. Sim oes, BR 104 - Norte, Km 97, C. Universit ária, Macei ó , AL  Brasil
{ibert,cpbn,evandro,mts,cbs}@tci.ufal.br
Abstract.  Building Interactive Learning Environment is, normally, a hard task.
Aspects such as architecture design, components implementation, development
of knowledge representation strategies makes it complex and ineffective to de-
velop, administrate and deploy them effectively in terms of time and costs.  To
approach these aspects, this paper proposes an authoring system for building
agent-based interactive learning environments.  This approach provides collab-
oration tools, an ontology-based infra-structure for educational systems and an
agents society that help domain modeling and problems solving process, through
Arti  cial Intelligence technics.
Resumo.  O  esforço  envolvido  na  construç ao  de  Ambientes  Interativos  de
Aprendizagem  é , normalmente, uma tarefa  árdua.  Aspectos como de  niç ao da
arquitetura,  implementaç ao de componentes,  estrat égias de representaç ao do
conhecimento tornam seu desenvolvimento, administraç ao e distribuiç ao com-
plexos e ine  cazes em termos de tempo e custo.  Para abordar tais aspectos,
prop oe-se neste artigo um Sistema de Autoria para Construç ao de Ambientes
Interativos de Aprendizagem baseado em Agentes.  Essa abordagem possui fer-
ramentas de colaboraç ao, uma infra-estrutura baseada em ontologia para sis-
temas educacionais e uma sociedade de agentes que auxiliem na modelagem do
dom´nio e resoluç ao de problemas, atrav és t écnicas de Intelig encia Arti  cial.
1.                                                                                                Introduç ao
A  construç ao  de  Ambientes  Interativos  de  Aprendizagem  é ,  normalmente,  uma  tarefa
árdua, requerendo esforços dos engenheiros de software para desenhar toda a arquitetura
do sistema,  al ém de  implementar  todos  os componentes,  desenvolver as  estrat égias de
representaç ao do conhecimento e mecanismos de racioc´nio, falta de interoperabilidade,
di  culdade  de  compartilhamento  de  materiais,  alto  custo  de  manutenç ao,  entre  outros
[Rodrigues et al.  2005].
A partir dessa constataç ao, passou-se a investir em ferramentas para automatizar
alguns  aspectos  envolvidos  na  construç ao  dos  ambientes  em  quest ao.   Neste  contexto,
surgiu a categoria de ferramentas denominada sistemas de autoria, dando suporte ao de-
senvolvimento, administraç ao e distribuiç ao de softwares instrucionais de uma forma efe-
tiva em termos de tempo e custo. A id éia b ásica destas ferramentas  é permitir ao usu ário
que n ao possui experi encia em programaç ao poder construir de forma  ágil softwares ins-
trucionais.




Ambientes interativos de aprendizagem t em recebido grande import ancia na  área
de educaç ao, principalmente no que diz respeito ao suporte a aprendizagem colaborativa.
Ambientes colaborativos focam no trabalho em grupo, com vistas a promover a apren-
dizagem.  Como exemplo destes ambientes, pode-se citar o de comunidades virtuais de
aprendizagem.
Atualmente, observa-se a chegada de uma geraç ao mais nova de ambientes com-
putacionais de suporte a aprendizagem cooperativa dotada de recursos ainda mais so  sti-
cados e, conseq üentemente, trazendo mais complexidade no seu desenvolvimento.  Estes
ambientes, em geral, adotam o paradigma de agentes inteligentes [Plekhanova 2002].  A
construç ao de sistemas baseados em agentes ainda se constitui numa tarefa complexa, de-
vido principalmente a falta de recursos oferecendo facilidades aos seus desenvolvedores,
como encapsulamento de t écnicas de Intelig encia Arti  cial em componentes.
A proposta deste artigo é a construç ao de um Sistema de Autoria para Construç ao
de Ambientes Interativos de Aprendizagem baseado em Agentes.  Tal abordagem possui
ferramentas de colaboraç ao, uma infra-estrutura baseada em ontologia para sistemas edu-
cacionais e sociedades de agentes que auxiliem na modelagem do dom´nio e no processo
resoluç ao de problemas, atrav és de t écnicas de Intelig encia Arti  cial.
O artigo est á organizado da seguinte forma.  Os trabalhos relacionados s ao apre-
sentados  na  Seç ao  2.   Na  Seç ao  3,  descreve-se  a  arquitetura  do  sistema.   Um  cen ário
ilustrativo abordando o uso do sistema  é apresentado na Seç ao 4.  Finalmente, trabalhos
futuros e conclus oes s ao apresentados na Seç ao 5.
2.  Trabalhos Relacionados
Um  importante  relato  do  est ágio  relativamente  atual  da  pesquisa  pode  ser  visto  em
[Murray et al.  2003].  Mais recentemente novos ambientes surgiram, dentre os quais se
destacam:
[Aroyo et al.  2004]  equivale  a  um  sistema  de  autoria  evolutivo,  possuindo  car-
acter´sticas de racioc´nio sobre o pr óprio comportamento e fazendo uso de regras para
manutenç ao nas diferentes partes do processo de autoria. Apesar do ambiente comportar
os diversos aspectos de aprendizagem  (dom´nio,  estudante,  pedag ógico e plano instru-
cional), n ao possui caracter´sticas de extensibilidade, bem como suporte para utilizaç ao
de diversos mecanismos de infer encia no processo de resoluç ao de problemas.
[Aleven et al.  2006]  possui  duas  (Tutor  Cognitivo  e  Tutoria  baseada  em  Exem-
plos) caracter´sticas de autoria, dando suporte para engenheiros de softwares e autores.
Por ém, o processo de criaç ao dos agentes de interfaces ainda ocorre de forma lenta. Al ém
disso, n ao possui um formalismo de representaç ao do conhecimento baseado em padr oes
de compartilhamento.
Uma arquitetura de aprendizagem baseada em agentes, componentes e framework
é proposta em [do Socorro Silva et al.  2003].  A utilizaç ao de componentes e framework
nesse  ambiente  t em  como    nalidade  a  (re)utilizaç ao  de  ferramentas  dispon´veis  na  ar-
quitetura, al ém da construç ao de espaços de aprendizagem seguindo diferentes aborda-
gens e ferramentas pedag ógicas.  Apesar de possuir caracter´sticas de extensibilidade, a
evoluç ao do conhecimento  é um aspecto limitado no ambiente.
Al ém disso, ambientes educacionais de autoria com objetivos espec´  cos foram




desenvolvidos, como ferramentas de autoria destinados a apoiar o ensino de Xadrez e o
sistema brKChess  (ferramenta de autoria para ensino de Xadrez), que foram adordados
em [Hartmann et al.  2005].
A    m  de  explorar  as  limitaç oes  encontradas  nos  trabalhos  citados,  é  proposto
neste artigo  um  sistema para  construir  ambientes  interativos de  aprendizagem baseado
em agentes,  dando facilidades tanto para o programador quanto para o autor  (n ao pro-
gramador).  O sistema leva em consideraç ao aspectos de Engenharia de Software, como
framework  e  shell,  al ém  de  possuir  um  formalismo  de  conhecimento  baseado  em  on-
tologias  OWL  (objetivando  a  evoluç ao  e  compartilhamento  do  conhecimento).   Outro
aspecto importante  é que no sistema proposto o autor pode con  gurar seu mecanismo de
infer encia atrav és de interfaces gr á  cas bem de  nidas, al ém de poder integrar diversas
t écnicas de Intelig encia Arti  cial, como Racioc´nio Baseado em Casos e Regras.
Como foi dito anteriormente, as caracter´sticas citadas possuem relev ancia com
relaç ao aos outros ambientes. Al ém disso, o mesmo possui um aspecto inovador referente
a integraç ao de diversas t écnicas de Intelig encia Arti  cial atrav és de interfaces gr á  cas
adaptativas.
3.  Arquitetura do sistema
Na Figura 1 é apresentada a arquitetura do sistema baseado em agentes para ambientes de
aprendizagem interativa. A arquitetura est á dividida em camadas, e destacam-se os recur-
sos presentes no n úcleo do sistema. Tais recursos s ao: conjunto de ferramentas interativas,
uma sociedade de agentes tutores aut onomos  (SATA), uma sociedade de agentes de de-
cis ao e aprendizagem (SADA) e um agente de coordenaç ao.  Os agentes e sociedades de
agentes foram desenvolvidos utilizando o framework Jadex [Braubach et al.  2002]. Jadex
foi escolhido por ter sido extendido do ambiente Jade [Tilab 2005] 1, pois os agentes s ao
baseados em BDI (Belief, Desires and Intentions) e possuem ferramentas para manipular
ontologias criadas no Prot ég é  [Stanford 2000]. O uso de ontologias  é motivado pelos di-
versos recursos providos, possibilitando solucionar os problemas atualmente enfrentados
por pesquisadores da  área em quest ao [Mizoguchi and Bourdeau 2000].
Na  camada  de  segurança,   o  componente  de  segurança                                            é   respons ável  pela
autenticaç ao e autorizaç ao dos usu ários no sistema.   Utilizou-se a tecnologia Java Au-
thentication  and  Authorization  Service  (JAAS)  [MicroSystems 2006],  que  fornece  um
conjunto de interfaces para autenticaç ao e autorizaç ao bem de  nidas
A camada de infra-estrutura cont ém o componente que implementa o serviço para
atender o requisito n ao-funcional do sistema, que  é o serviço de persist encia de objetos.
Este componente é respons ável por manter as conex oes com o mecanismo de persist encia,
como um banco de dados relacional.
3.1.  Agente Coordenador
Este agente possui duas funcionalidades:  i) garantir a comunicaç ao entre os agentes da
SATA  e  SADA,  permitindo  aos  agentes  de  uma  sociedade  solicitarem  ao  agente  coor-
denador qual agente tem habilidade para determinada tarefa; ii) facilitar a utilizaç ao da
1Esta extensao faz com que os padr oes de interoperabilidade para comunicaçao entre agentes (FIPA)
sejam herdados.




Figura 1. Arquitetura do sistema de autoria.
abordagem de autoria, pois a partir do momento em que diversos recursos s ao disponibi-
lizados para o autor, a complexidade e usabilidade tornam-se inversamente proporcionais,
ou seja, a complexidade aumenta e a capacidade de gerenciamento dos recursos diminui.
Com isso, o agente coordenador tem total controle de todas as atividades que devem ser
executadas pelos agentes e a quantos passos de dist ancia o autor est á da con  guraç ao do
ambiente educacional.
A con  guraç ao deste agente se d á  atrav és da utilizaç ao de uma ontologia,  pos-
suindo informaç oes do tipo:
• Metodologia:  é utilizada pelos autor/engenheiro de software para construir o sis-
tema  educacional.   Entende-se  por  metodologia,  dois  vi és  diferenciados,  sendo
eles:  processos  de  Engenharia  de  Software  e  metodologias  educacionais.   Pro-
cesso de Engenharia de Software  é voltado para equipes de desenvolvimento, ob-
jetivando a  implementaç ao  de  novas funcionalidades.   Como  exemplo pode  ser
de  nida uma metodologia RUP [Kruchten 2003] ou XP [Beck 2001].  Metodolo-
gias  educacionais  s ao  voltadas  para  o  autor,  que  de  ne  qual  a  seq ü encia  de
construç ao do ambiente educacional e do conhecimento;
• Tipo de Ambiente Educacional:  pode ser de  nida a construç ao de diversos tipos
de ambientes educacionais, como Sistemas Tutores Inteligentes, Sistemas Cola-
borativos, entre outros.  A escolha do tipo de ambiente tem in  u encia direta na
metodologia educacional escolhida;
• Informaç oes dos Agentes: caracter´sticas dos agentes presentes nas sociedades de
agentes s ao fundamentais para que o agente coordenador saiba que tipo de agente
pode ser solicitado para uma tarefa.
3.2.  Sociedade de Agentes Tutores Aut onomos (SATA)
A  Sociedade  de  Agentes  Tutores  Aut onomos  é  respons ável  pelo  conhecimento  sobre
os  aspectos  cognitivos  envolvidos  no  processo  de  ensino-aprendizagem.    Dentre  as
preocupaç oes referentes ao m ódulo do dom´nio, destacam-se: i) Resoluç ao de Problemas:
caracter´stica importante que pode estar presente na construç ao de sistemas educacionais.




Para isso, diversas t écnicas de Intelig encia Arti  cial podem ser utilizadas.  Isto justi  ca
a necessidade de integraç ao com SADA; ii) Informaç oes do dom´nio:  equivale a carac-
ter´sticas sobre o que ser á ensinado para o estudante, ou seja, o conte údo curricular que
ser á repassado.
SATA  foi  modelada  baseada  no  modelo  MATHEMA  [Costa 1997],  por ém  a
construç ao da ontologia, ilustrada na Figura  2  se deu atrav és da avaliaç ao dos trabalhos
[Dillenbourg and Self 1992,    Chen and Mizoguchi 2004,    de Barros Costa et al.  1998].
Al ém   disso,    houve   a   integraç ao   da   ontologia   feita   em   SATA   com   SCORM
[Learning 2004], para utilizaç ao de objetos de aprendizagem.
Figura 2. Ontologia do Modelo do Dom´nio
3.3.  Sociedade de Agentes de Decis ao e Aprendizagem (SADA)
SADA permite a integraç ao din amica de diversas t écnicas de Intelig encia Arti  cial, ob-
jetivando a resoluç ao de problemas, como agrupamento de usu ário, extraç ao de conte údo
de chat, avaliaç ao, entre outros.  Dentre os algoritmos presentes atualmente em SADA,
citam-se:
• Racioc´nio Baseado em Regras (RBR): trata-se de uma abordagem para solucionar
problemas.   Para  isto,  o  sistema  precisa  ter  uma  base  de  regras  consistente  ar-
mazenada, por exemplo, em um banco de dados, e tamb ém de fatos dados pelo
usu ário para se chegar a conclus ao do problema. Um sistema baseado em regras é
composto por base de conhecimento, ferramenta de infer encia e o subsistema de
explanaç ao.
• Racioc´nio Baseado em Casos (RBC): trata-se de uma abordagem que se utiliza de
um tipo de racioc´nio anal ógico, contrastando com o convencional paradigma de
resoluç ao de problemas baseado em regras. Portanto, a abordagem para a soluç ao
de problemas no Racioc´nio Baseado em Casos é baseada na resoluç ao de proble-
mas valendo-se de experi encia passada [Ig Ibert Bittencourt 2006].
• Busca:   aborda  a  resoluç ao  de  problemas  atrav és  de  algoritmos  de  busca.   As
implementaç oes de busca vigentes em SADA equivale a busca cega e informada,




com algoritmos como, largura, profundidade, profundidade limitada, A*, t empera
simulada, subida de encosta, entre outros.
Outras t écnicas podem ser adicionadas no ambiente atrav és da con  guraç ao da
ontologia e adiç ao do agente espec´  co da t écnica.
A integraç ao das t écnicas ocorre de forma din amica atrav és da utilizaç ao da on-
tologia ilustrada na Figura 3.  Para isso, quatro tipos de informaç oes t em que ser levados
em consideraç ao para cada algoritmo:
1.  Entrada/Sa´da: equivale aos dados de entrada e sa´da do algoritmo e seus tipos.
2.  Processamento: refere-se a forma no qual o algoritmo é processado internamente.
Cada  fase  do  Ciclo  4R  [von Wangenheim and von Wangenheim 2003]  presente
em um algoritmo de RBC seria um exemplo.
3.  Feedback: equivale a um retorno dado para o algoritmo ap ós determinado proces-
samento. Este feedback pode se dar de forma s´ncrona ou ass´ncrona, conseq üen-
temente,  tanto  o  usu ário  quanto  outro  agente  pode  dar  esta  informaç ao  para  o
agente.
4.  Estat´stica:  equivale a dados pr é -estabelecidos para avaliar o desempenho do al-
goritmo.
ao e Aprendizagem
3.4.  Ferramentas Interativas
Ambientes de aprendizagem colaborativa, como as comunidades virtuais, necessitam de
ferramentas que possibilitem a interaç ao dos usu ários com o sistema.
As ferramentas dispon´veis no sistema s ao apresentadas:
• f órum:  permite aos usu ários postarem t ópicos com discuss oes relativas aos inte-
resses de determinada comunidade;
• scrap, blog, enquete e e-mail: para interaç ao entre usu ários;
• biblioteca digital:  onde podem ser armazenadas informaç oes em formato de ar-
quivo  digital  que  poder ao  ser  compartilhadas  entre  os  usu ários  de  uma  comu-
nidade virtual. Esses arquivos devem estar relacionados com o contexto da comu-
nidade e os usu ários podem iniciar discuss oes sobre eles.




4.  Cen ário Ilustrativo
Nesta seç ao apresenta-se um cen ário ilustrativo a   m de demonstrar a utilizaç ao do sis-
tema proposto.  Neste cen ário ilustram-se os diversos recursos disponibilizados pelo sis-
tema, consistindo de um sistema de aprendizagem colaborativo para o dom´nio jur´dico,
mais especi  camente no C ódigo Penal Brasileiro [Bittencourt et al.  2006]. No ambiente,
o professor cadastra a comunidade  (Subseç ao  4.1) referente a um c ódigo da legislaç ao
penal. Ap ós criaç ao da comunidade, o mesmo con  gura o modelo do dom´nio de apren-
dizagem (Subseç ao 4.2) e mecanismos de infer encia (Subseç ao 4.3).
4.1.  Criaç ao de uma comunidade
Neste cen ário, o usu ário prop oe a criaç ao de uma comunidade virtual.  Os passos para a
criaç ao da comunidade de Homic´dio s ao descritos abaixo.
• Passo 1: o professor digita o nome da comunidade e a sua descriç ao (Figura 4);
• Passo 2: o professor cria os pap éis e atribui permiss oes para o mesmo. Pap éis: Es-
tudante e Monitor; Permiss ao: Estudante: Acesso ao sistema educacional; Moni-
tor: Acesso as avaliaç oes e desempenho educacional do estudante;
• Passo  3:  o professor da comunidade de  ne a categoria da sua comunidade.  Por
exemplo, Categoria: Direito Penal.
ao de comunidade.
4.2.  Modelagem do Dom´nio
A modelagem do dom´nio ocorre atrav és da utilizaç ao de SATA. Neste cen ário o professor
de  ne informaç oes acerca do conte údo de Homic´dio que ser á ensinado ao estudante. Na
Tabela 1  é de  nido um modelo de dom´nio simpli  cado da comunidade proposta2.
Associado  a  cada  unidade  pedag ógica,  um  conjunto  de  problemas  é  de  nido
pelo professor para avaliaç ao do conhecimento do estudante.  Para viabilizar o processo
de  resoluç ao  de  problemas  s ao  utilizados  dois  mecanismos  de  infer encia  (Racioc´nio
Baseado  em  Casos  e  Racioc´nio  Baseado  em  Regras).   Os  passos  para  a  con  guraç ao
dos mecanismos s ao descritos na Subseç ao 4.3.
4.3.  Integraç ao com IA
Ap ós as fases especi  cadas anteriormente, o professor de  ne as regras e os casos refer-
entes aos problemas das unidades pedag ógicas.
A  metodologia  de  especi  caç ao  do  algoritmo  de  infer encia  é  baseada  em  uma
estrutura de Shell. Assim, o professor tem mais facilidade para manipular regras e casos.
Abaixo segue a forma de con  guraç ao dos algoritmos.
2Detalhes com relaçao a modelagem descrita na Tabela 1, vide Subseçao 3.2




Tabela 1. Dados do Dom´nio da Comunidade de Homic´dio
Classe                                                                                            Conte údo
Dom´nio                                                                                           Direito Penal
Partiçao do Dom´nio                                                                               Homic´dio
Curr´culo 1                                                                                       Simples
Unidade Pedag ógica 1                                                                             Problema1
Unidade Pedag ógica 2                                                                             Problema2
Curr´culo 2                                                                                       Culposo
Unidade Pedag ógica 1                                                                             Problema1
Unidade Pedag ógica 2                                                                             Problema2
Curr´culo 3                                                                                       Quali  cado
Unidade Pedag ógica 1                                                                             Problema1
Unidade Pedag ógica 2                                                                             Problema2
4.3.1.  Agente de Racioc´nio Baseado em Regras
Os passos para a utilizaç ao do componente de RBR s ao:
• Passo 1: o usu ário cadastra as vari áveis e seus respectivos valores;
• Passo 2: o usu ário cria as regras espec´  cas do seu dom´nio;
• Passo 3: neste passo, o usu ário escolhe o m étodo de infer encia, que s ao: encadea-
mento para a frente ou o encadeamento para tr ás;
• Passo 4:  é con  gurado o m ódulo de explanaç ao atrav és do mapeamento de regras
em linguagem natural, facilitando o entendimento dos estudantes com relaç ao a
explanaç ao das regras.
Segue abaixo um exemplo  (Homic´dio Simples) de como as regras s ao estrutu-
radas no sistema.
Regra  Se HouveAssassinato = `Sim' e IdadeVitima > 18 Entao Homicidio = `Simples'
4.3.2.  Agente de Racioc´nio Baseado em Casos
Para  a  utilizaç ao  do  componente  de  RBC  s ao  especi  cados  sete  passos  indicados  na
Figura 5. S ao eles:
• Passo 1: o usu ário seleciona a base de casos;
• Passo 2:  é de  nido os atributos;
• Passo 3: de  ne-se o peso de cada atributo.  Os valores padr oes dos pesos equiva-
lem a 1, pois o usu ário pode n ao querer diferenciar os atributos;
• Passo  4:  logo  ap ós  s ao  de  nidas  as  funç oes  de  similaridade  local,  ou  seja,  o
c álculo  de  similaridade  entre  os  atributos.   Al ém  disso,  é  de  nida  nesta  fase  a
funç ao de similaridade global, sendo o c álculo de similaridade entre os casos;
• Passo  5:  de  ne a forma de recuperaç ao dos casos, podendo ser seq üencial, dois
n´veis, entre outros;
• Passo  6:  local onde se de  ne um arquivo jar para a fase de re úso e revis ao dos
casos similares.   Estas fases n ao s ao disponibilizadas no ambiente na forma de
con  guraç ao padr ao, devido a grande especi  cidade das mesmas;
• Passo 7: de  ne o limiar de retenç ao do caso.




ao do componente de RBC
5.  Conclus oes e Trabalhos Futuros
Este artigo descreveu um sistema de autoria para construç ao de ambientes interativos de
aprendizagem  baseado  em  agentes.   O  sistema  foi  desenvolvido  utilizando  as  tecnolo-
gias Java, Jadex e Prot ég é .  A utilizaç ao das sociedades de agentes para modelagem do
dom´nio educacional e utilizaç ao de algoritmos inteligentes s ao aspectos fundamentais
para a construç ao de ambientes interativos de aprendizagem.  Com o sistema proposto,
espera-se ter contribu´do para a  área de inform ática na educaç ao, em ambientes intera-
tivos de Aprendizagem e ambientes de autoria de atividades de aprendizagem.
Como trabalhos futuros, objetiva-se construir agentes de decis ao e aprendizagem
contendo as t écnicas de IA, como Q-Learning. Al ém disso, objetiva-se   nalizar as telas de
assist encia de SATA, dando suporte a con  guraç ao dos objetos de aprendizagem SCORM
atrav és do sistema.  Pretende-se tamb ém fazer parcerias com outras universidades com o
objetivo de divulgar e testar ainda mais o sistema.
Refer encias
Aleven,  V.,  McLaren,  B.  M.,  Sewall,  J.,  and  Koedinger,  K.  R.  (2006).   The  cognitive
tutor authoring tools  (ctat):  Preliminary evaluation of ef  ciency gains.  In Intelligent
Tutoring Systems, pages 6170.
Aroyo, L., Inaba, A., Soldatova, L., and Mizoguchi, R. (2004). Ease: Evolutional author-
ing support environment. In Intelligent Tutoring Systems, pages 140149.
Beck, K. (2001).  Programaç ao eXtrema (XP) eXplicada.  Bookman.
Bittencourt, I. I., Tadeu, M., Costa, E., Nunes, R., and Silva, A.  (2006).  Combining ai
techniques into a legal agent-based intelligent tutoring system.   In Eighteenth Inter-
national Conference on Software Engineering and Knowledge Engineering  - SEKE,
2006, San Francisco, volume 18, pages 3540.
Braubach, L., Pokahr, A., and Walczak, A. (2002). Jadex. http://vsis-www.informatik.uni-
hamburg.de/projects/jadex/.  último acesso em Agosto de 2006.




Chen,  W. and Mizoguchi,  R.  (2004).   Leaner model ontology and leaner model agent.
Cognitive Support for Learning - Imagining the Unknown, pages 189200.
Costa,  E.  B.  (1997).   Um  Modelo  de  Ambiente  Interativo  de  Aprendizagem  Baseado
numa Arquitetura Multi-Agentes. Tese de doutorado, Universidade Federal da Para´ba,
Campina Grande.
de Barros Costa, E., Perkusich, A., and Ferneda, E. (1998).  From a tridimensional view
of  domain  knowledge  to  multi-agents  tutoring  systems.   Lecture  Notes  in  Arti  cial
Intelligence, 1515, Springer, Berlim, Germany, pages 6172.
Dillenbourg,  P.  and  Self,  J.  (1992).   A  framework  for  learner  modelling.   Interactive
Learning Environments, 2:111137.
do  Socorro  Silva,  A.,  de  Brito,  S.  R.,  Favero,  E.  L.,  Hern ández-Dom´nguez,  A.,
de Lira Tavares, O., and Franc es, C. R. L. (2003).  Uma Arquitetura para desenvolvi-
mento de Ambientes Interativos de Aprendizagem baseado em Agentes, Componentes
e Framework.  In XIV Simp ósio Brasileiro de Inform ática na Educaç ao, pages  203
212, Rio de Janeiro, RJ.
Hartmann, C., Direne, A., Bona, L. C. D., Silva, F., and dos Santosand Marcos Castilho,
G.  (2005).  Linguagem e ferramenta de autoria para promover o desenvolvimento de
per´cias em xadrez. In Anais do XVI Simp ósio Brasileiro de Inform ática na Educaç ao,
Juiz de Fora, volume 1, pages 656665.
Ig Ibert Bittencourt, Evandro Costa, E. F. e. R. A. (2006). Sistemas de informaç ao e apoio
a  decis ao  baseado  em  conhecimento.   In  Escola  Regional  de  Inform ática  de  Minas
Gerais, aceito para apresentaç ao em Minicurso.
Kruchten, P. (2003).  The Rational Unifed Process: An Introduction. Addison Wesley.
Learning, A. D. (2004). Scorm. http://www.adlnet.gov/downloads/272.cfm.
MicroSystems,    S.                                                                                (2006).   Java   Authentication   and   Authorization   Service.
http://java.sun.com/products/jaas/.  último acesso em Agosto de 2006.
Mizoguchi,  R.  and  Bourdeau,  J.  (2000).   Using  ontological  engineering  to  overcome
common ai-ed problems.  International Journal of Arti  cial Intelligence in Education,
11(2):107121.
Murray, T., Ainsworth, S., and Blessing, S. (2003). Authoring Tools for Adv. Tech. Learn-
ing Env., pages 493546. Kluwer Academic Publishers, Netherlands.
Plekhanova, V. (2002).  Intelligent Agent Software Engineering.  Idea Group Publishing,
Hershey, PA, USA.
Rodrigues, M., Novais, P., and Santos, M. F. (2005).  Future challenges in intelligent tu-
toring systems - a framework. In m-ICTE2005 3rd International Conference on Multi-
media and Information and Communication Technologies in Education. FORMATEX.
Stanford                                                                                           (2000).   Prot ég é   Ontology   Editor   and  Knowledge  Acquisition  System.
http://protege.stanford.edu.
Tilab (2005). Java Agent Development Framework. http://jade.tilab.com/.
von Wangenheim, C. G. and von Wangenheim, A. (2003). Racioc´nio Baseado em Casos.
Manole.





