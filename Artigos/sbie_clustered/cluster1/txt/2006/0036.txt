Bernardo - Agente Pedagógico do Sistema Tutor
Inteligente Aplicado a Neurofisiologia
Janice Inês Deters 1, Alisson Oldoni2, Anita Maria da Rocha Fernandes2
1
Instituto de Engenharia Biomédia - Universidade Federal de Santa Catarina (UFSC)
88.040-900 - Florianópolis - SC - Brasil
jan@ieb.ufsc.br
2Laboratório de Inteligência Aplicada - Universidade do Vale do Itajaí (UNIVALI)
Caixa Postal 360 - 88.302-202 - Itajaí - SC - Brasil
{aoldoni,anita.fernandes}@univali.br
Abstract.. Este artigo apresenta o agente pedagógico Bernardo que coabita
em   um   ambiente   virtual   de   Neurofisiologia.    O   Sistema   Tutor   de
Neurofisiologia é um software que esta sendo desenvolvido para estudantes de
medicina  e  áreas  afins  e  pretende  auxiliar  no  processo  de  ensino
aprendizagem  dos  conteúdos  relacionados  a  Fisiologia.  As  estratégias  do
agente estão sendo implementadas em um sistema especialista usando o motor
de inferência do CLIPS através do JCLIPS.
Resumo.This paper presents the pedagogical agent "Bernardo" that coahabits
in a virtual environment about Physiology. The Physilogy Tutor System is   a
software that has being developed to medicine students and similar areas, and
intends to hlep in teaching and learning process about the contents related to
Physiology. The agent´s strategies have been implemented in an expert system
using CLIPS inference engine by JCLIPS.w
1. Introdução
Dos métodos de apresentação de conteúdo e ambientes de Ensino a Distância (EaD)
existentes  atualmente  na  Internet,  o  Sistema  Tutor  Inteligente                     (STI)  entra  com  a
utilização  de  recursos  de  Inteligência  Artificial                                    (IA)  para  tentar  cada  vez  mais
assemelhar-se a um ambiente real de ensino. Porém, observa-se também que os STI
clássicos, de uma forma geral, se caracterizam por utilizar uma única estratégia para o
ensino  do  aluno  possuindo  assim  pouca  versatilidade  em  seu  comportamento
pedagógico, sem proporcionar uma adaptação dinâmica  (em nível de estratégias) às
características individuais de aprendizagem de cada aluno  [Giraffa e Goulart  2001].
Sendo assim constata-se o uso cada vez maior de agentes para o desenvolvimento de
STI, criando um novo paradigma diferente do clássico.
Neste artigo é apresentado o agente pedagógico animado denominado Bernardo,
que está inserido no STI de Neurofisiologia. O Sistema Tutor de Neurofisiologia é um
software desenvolvido para estudantes de medicina ou áreas afins e pretende auxiliar no
processo de ensino e aprendizado dos conteúdos relacionados à Fisiologia. Além da




tecnologia de STI o ambiente se utiliza de Realidade Virtual, chats, fóruns de discussão
e um conjunto estruturado de recursos hipermídia que contém animações, vídeos, áudio,
simulações  e  hipertexto.  Proporcionando  um  ambiente  de  aprendizado  interativo,
atrativo,  amigável  e  estimulando  a  comunicação  entre  os  usuários  (alunos)  e  com
professor.  A  função  do  agente  pedagógico  neste  ambiente  será  de  tutor,  ou  seja,
monitorar  e  incentivar  o  aprendizado  do  aluno,  guiá-lo  no  ambiente,  selecionar
estratégias de ensino segundo modelos específicos.
As   estratégias   do   agente   pedagógico   animado   Bernardo   estão   sendo
implementadas em um Sistema especialista usando o motor de inferência do software
CLIPS (Language Integrated Production System) desenvolvido pela NASA, através do
JCLIPS.
3. Sistemas Tutores Inteligentes
Os  sistemas  tutores  inteligentes  constituem  uma  classe  de  sistemas  de  inteligência
artificial (IA) que atuam como auxiliares no processo aprendizagem. Segundo Giraffa
(1999),  a utilização de técnicas IA, no projeto e desenvolvimento de ambientes de
ensino-aprendizagem computadorizados, tem se tornado objeto de muita investigação
por parte dos pesquisadores da área de Informática Aplicada à Educação, devido a suas
potencialidades.
São  sistemas  que,  interagindo  com  o  aluno,  modificam  suas  bases  de
conhecimento, percebem as intervenções do aluno, possuem a capacidade de aprender e
adaptar as estratégias de ensino de acordo com o desempenho do aluno. Caracteriza-se,
principalmente, por construir um Modelo Cognitivo do Aluno, através da interação e da
formulação e comprovação de hipóteses sobre o conhecimento do aluno e a situação
atual [Vicari 1990].
Os Sistemas Tutores Inteligentes (STI) têm como principal objetivo realizar a
tarefa  de  ensino  de  um  dado  conteúdo                                                     (domínio)  na  forma  mais  adaptada  às
necessidades  individuais  do  aluno.  De  acordo  com  Vicari  e  Giraffa                     (2003),  estes
sistemas se baseiam em uma arquitetura composta basicamente por: Módulo do aluno:
onde são armazenadas/modeladas as características individuais do aluno; Módulo tutor:
possui o conhecimento sobre as estratégias e táticas para selecioná-las em função das
características do aluno; Módulo do domínio: detêm o conhecimento sobre a matéria no
formato  regras  de  produção,  estereótipos,  etc;  Interface:  faz  a  intermediação  da
interação entre o tutor e o alunos
3.1 Agentes Pedagógicos Inteligentes
Segundo Giraffa (1999), agentes pedagógicos são aqueles utilizados em sistemas que
utilizam o paradigma de agentes desenvolvidos para fins educacionais, tendo como
objetivo auxiliar os estudantes no processo de ensino-aprendizagem, fornecendo uma
melhor interação e dinamismo para os ambientes.
Numa tentativa de construir um sistema que possa tomar decisões sobre o que
ensinar ao aluno, tem-se utilizado Agentes pedagógicos animados, pois, para que um




sistema seja pedagogicamente competente, deve ser capaz de negociar suas decisões
com o aluno e não apenas impô-las [Nunes, 2002].
Eles são considerados personagens vivos que coabitam o ambiente de ensino,
ampliando  a  comunicação  num  tutorial,  incrementando  habilidades,  prendendo  a
atenção e motivando o aluno. Essa interação cria um ambiente de feedback interativo e
dinâmico [Nunes, 2002]. O feedback poderá ser verbal ou não-verbal para influenciar o
aluno. O feedback não-verbal ocorre através de expressões faciais, gestos (linguagem
corporal). Já o feedback verbal se dá através de mensagens.
A inserção de um agente pedagógico animado em um ambiente educacional é de
fundamental  importância.  Primeiro,  devido  ao  fato  do  agente  ser  responsável  pelo
feedback  entre  o  ambiente  e  o  aluno  durante  a  interação.  Segundo,  por  tornar  a
comunicação mais eficaz, acompanhar o desempenho e exercer uma função que lhe é
peculiar, guiar o usuário. Finalmente, porque proporciona um diálogo mais agradável,
divertido  e  estimulante,  permitindo  assim  um  ganho  de  qualidade  sob  o  ponto
pedagógico.
Um agente de interface pedagógico observa e monitora as ações tomadas pelo
usuário na interface  (como se fosse um agente humano  “olhando sobre o ombro do
usuário”), ensina novos  “atalhos” e sugere novas formas de realizar tarefas  [Nwana
1996]. Além disso, o agente se comporta como um assistente pessoal autônomo, que
coopera com o usuário na realização de tarefas do software. Seu comportamento pode
ser visto na Figura 1.
Figura 1. Estrutura de funcionamento dos agentes de interface
4. Sistema Tutor Inteligente de Neurofisiologia
O Sistema Tutor de Neurofisiologia é um software de ensino aprendizagem que conta
com a intervenção do agente pedagógico Bernardo. O objetivo do STI em questão, é
facilitar a aprendizagem de conteúdos da fisiologia especificamente de neurofisiologia.
A ferramenta destina-se a estudante e profissionais da área da saúde bem como o
público em geral. O principal motivador da concepção do sistema é a ausência de STI
com o conteúdo elaborado na língua portuguesa. Além disso, o ensino fisiologia requer
um  vasto  material  didático,  com  ilustrações,  exemplos  práticos,  animações  e
experimentos que estão contidos em único sistema.




O STI oferece acesso aos conteúdos relaciona dos  à  neurofisiologia  (Figura  2).
Os conteúdos foram organizados e elaborados em forma de tópicos. Para cada tópico o
sistema habilita a visualização dos seguintes itens:
•   Mão  na  Massa:  É  laboratório  virtual  onde  aluno  realizará  experimentos
pertinentes ao conteúdo para “fortalecer” o aprendizado deste. O aluno entrará
em um laboratório virtual  (desenvolvido em 3D), onde ele poderá explorar o
ambiente,  manipular  os  objetos,  realizar  os  seus  experimentos,  acessar
informações, interagir virtualmente com outros usuários. Além disto, o aluno se
familiarizará com procedimentos e rotinas laboratoriais similares adotados em
um laboratório real.
•   Correlação-Clínica: é uma aplicação clínica do conteúdo, com o intuito de o
aluno criar relações entre a teoria e a prática clínica.
•   História: Será exibida a contextualização histórica do tópico selecionado.
•   Auto-Avaliação: é o ambiente onde será avaliado o conhecimento assimilado
pelo aluno. O objetivo é detectar as deficiência e prover alternativas para saná-
las.
Figura 2 - Interface gráfica Sistema Tutor de Neurofisiologia
Além das opções apresentadas acima o STI de Neurofisiologia conta com um
“Glossário”  onde  o  aluno  tem  acesso  ao  significado  de  termos.  Esta  opção  foi
introduzida  no  sistema  devido  a  infinidade  de  termos  técnicos  que  o  conteúdo  é
composto; A “Ajuda”, pode ser acionada a qualquer momento pelo aluno, nela constam
informações de como utilizar o ambiente. As informações da ajuda serão exibidas por
um agente de interface. Outro elemento disponível é o Chat. O objetivo do chat é
possibilitar a comunicação simultânea de todos os usuários do ambiente, permitindo que
o aluno tire suas dúvidas com os demais colegas ou com o professor da disciplina. O




“Fórum” se destina a criar discussões em torno de algum tema mediado pelo professor.
A outra opção disponível é o “Boletim”, o boletim poderá ser acessado tanto pelo aluno
para verificar o seu desempenho como também pelo professor que poderá visualizar o
desempenho de uma turma ou de um aluno específico. Tendo disponíveis os seguintes
dados: Nome do aluno, e-mail, desempenho, itens acessados e tempo de acesso.
Os  alunos  serão  monitorados  pelo  tutor.  O  agente  pedagógico  fornecerá  o
feedback ao aluno através de dicas, expressões faciais, sugerindo o acesso dos itens
anteriormente descritos. Além disso, uma das estratégias do agente é estimular o aluno a
trocar informações com os demais usuários do ambiente através do Chat.
Quanto às tecnologias e ferramentas escolhidas para o desenvolvimento do STI
foram escolhidas ferramentas de uso livre, como linguagem Java (Sun 2006), com a
linguagem de Script JSP (Java Server Pages) e o framework JSF (Java Server Faces)
para seu desenvolvimento.
5. Concepção do Agente Pedagógico
A concepção do agente pedagógico Bernardo foi dividido em duas etapas: concepção
visual e concepção funcional, as quais serão descritas a seguir.
5.1 Concepção Visual
Para a modelagem e implementação da personagem que compõe o agente proposto
“Bernardo”, foram realizadas algumas entrevistas e pesquisas, resultando nas seguintes
características:
•   Ser o mais próximo da realidade, do sexo feminino ou masculino, de corpo
inteiro e proporcional ao tamanho da interface.
•   Possuir  expressões  faciais  dos  mais  variados  sentimentos  como  alegria,
admiração,  tristeza,  entre  outros;  expressando  emoções  de  acordo  com  o
momento, não interrompendo o usuário em seu aprendizado com intervenção
escrita ou falada.
•   Interagir com o usuário, mudando de postura e face sutilmente, entrando em
ação e mudando de posturas de acordo com a situação.
•   Falar  e  escrever,  usando  balões  de  texto  e/ou  recursos  de  som.  Gesticular,
mover-se no ambiente. Ter reações diversas para não tornar a interação com
usuário,  monótona.  Por  exemplo,  usar  a  comunicação  escrita  num  primeiro
contato, na segunda abordagem dar um sorriso, dicas, etc.
Além das diretrizes apresentadas anteriormente, o personagem “Bernardo” foi
idealizado tendo como base os seguintes objetivos visuais: passar a imagem de um
pesquisador; ter características físicas semelhantes às características dos brasileiros; ser
simpático e prender a atenção do usuário; usar roupas alegres e jovens. Foram utilizados
traços arredondados, semelhantes aos de cartoon, dando ao agente uma fisionomia
jovial.  O contorno dos membros reafirma essa proposta, juntamente com o uso de cores
vivas em suas vestimentas, que são trocadas de acordo com a situação (figura 3).




Figura 3 - Características Visuais do Agente Bernardo
5.2 Concepção Funcional
O  agente  Bernardo  estará  inserido  no  STI,  com  o  objetivo  de  auxiliar  no
processo de aprendizado dos conteúdos de neurofisiologia. As estratégias de ensino
serão  aplicadas  pelo  agente  de  acordo  com  o  perfil  do  aluno.  Sendo  a  principal
estratégia mediar o conhecimento, com sugestão dos tópicos e itens do tutorial a serem
acessados pelo aluno. Além disso, o agente se utiliza de expressões faciais  (alegria,
tristeza, desapontamento), dicas, mensagens de alerta e motivação.
Das  técnicas  existentes  para  raciocínio  do  agente,  optou-se  pelo  Sistemas
Especialistas (SE), pois a idéia de orientação vinda do agente vai se basear em algumas
várias observações feitas, tais como  “o aluno já visitou a correlação clínica?”. Estas
regras são do tipo “se <condição envolvendo fatos> então”, o que se encaixa no perfil
da técnica de regras do sistema especialista.
Em caso de desempenho baixo do aluno na auto-avaliação, o agente pedagógico
apresentará alternativas ao aluno com intuito de reforçar o estudo dos conteúdos. Se o
aluno não tiver acessado o conteúdo correspondente a um tópico a primeira estratégia
do agente é encaminhá-lo para a leitura dos conteúdos. Caso o aluno tenha acessado
todo o conteúdo mesmo assim o seu desempenho ficar baixo, a segunda estratégia usada
pelo agente será de sugerir o acesso a item  “mão na massa”. Caso o aluno tenha
acessado o “conteúdo”, a “mão na massa” e mesmo assim o seu desempenho tenha sido
baixo o agente irá sugerir que o mesmo acesse a “correlação clínica”. O sistema estará
registrando as questões respondidas, o desempenho, tempo de acesso e itens acessados,
sendo que os usos dos itens (Mão na Massa, Correlação Clínica e História) também são
considerados.
5.2.1 Escolha da Ferramenta de Sistema Especialista
Para  validação  e  verificação  destas  regras  no  sistema,  é  necessário  um  motor  de
verificação  de  regras  de  sistema  especialista.  Tais  ferramentas  são  softwares  que
combinam fatos e regras de modos diversos, embutem uma máquina de inferência
específica,  assim  como  uma  representação  própria  de  conhecimento,  e  permite  a
construção de sistemas especialistas que utilizem a sua representação de conhecimento
e máquina de inferência [Moura e Cruz 2001].




A escolha da ferramenta a ser utilizada se deu através de estudo de alguns
softwares  disponíveis  no  mercado  compatíveis  com  o  STI.  Inicialmente  foram
escolhidas:  CLIPS                                                                              (C  Language  Integrated  Production  System)   [Riley   2004],
WebCLIPS (Web C Language Integrated Production System) [Giordano 2003], JCLIPS
(CLIPS for Java) [Menken 2005] e JESS (Java Expert System Shell) [Jess 2006] e as
análises consideraram a compatibilidade das ferramentas com a linguagem Java e o fato
de serem ou não de uso livre levando em conta licenças como, por exemplo, GNU
(GNU is Not Unix) ou GPL (General Public License).
A ferramenta escolhida para o desenvolvimento do agente foi o JCLIPS. Sendo
como motivo de escolha a portabilidade com Java e também por ser um software livre.
Este é um dos pontos fortes do JCLIPS em relação a concorrentes diretos em Java,
como o JESS, que é pago.
Figura 4. A arquitetura do agente Bernardo
A interação do usuário com o STI pode ser capturada através de scripts em
Javascript  embutidos  no  HTML  enviado  ao  cliente,  linguagem  esta  que  se  integra
facilmente com a linguagem dos arquivos SWF, o Actionscript. O agente acessará o
JCLIPS e a Base de Dados para descobrir qual deverá ser a sua atuação. A Figura 4
mostra   a estrutura funcional do agente com os demais componentes do sistema.
Conclusão
A  contribuição  desta  pesquisa  é  o  desenvolvimento  de  um  ambiente  de
ensino/aprendizagem usando ferramentas open source e utilizando realidade virtual para
tornar  agradável  a  comunicação  entre  os  “estudantes”  e  o  professor.  Para  testar  o
sistema, atualmente está sendo desenvolvido o conteúdo instrucional sobre homeostase.
A equipe de criação de conteúdo é composta por pessoas das áreas de ciência da
computação design e saúde. O conteúdo está sendo preparado de maneira a contemplar
no futuro o conceito de inteligências múltiplas.
Quando o ambiente estiver com o conteúdo de homeostase totalmente concluído,
serão feitos testes de com dois grupos distintos de alunos: um grupo referente aos
acadêmicos  do  curso  de  medicina  da  Universidade  Federal  de  Santa  Catarina  que




possuem a disciplina de Fisiologia em seus currículos e um outro grupo com os alunos
do Curso de Pós Graduação em Engenharia Biomédica que possuem a disciplina de
Fisiologia  como  obrigatória.  O  teste  buscará  avaliar  o  sistema  quanto  ao  aspecto
ergonômico, bem como em relação à aceitação de uma ferramenta de ensino pelos
alunos. Além disto, outro teste será feito com um grupo de alunos para analisar a
melhoria do processo de ensino/aprendizagem com o uso do ambiente.
Referências
Giordano,                                                                                     M.                                          (2003)                                                                   “CLIPS     Interface   and   sample   projects”,
http://clipsinterface.sourceforge.net/WebCLIPS/wchome.htm, Abril.
Giraffa,  L.  M.  M.  e  Goulart,  R.  R.  V.                                                 (2001)                                      “Arquiteturas  de  sistemas  tutores
inteligentes”, In: Relatório Técnico, Porto Alegre: Pontifícia Universidade Católica
do Rio Grande do Sul. 32 p. Não consta no texto
Jess.                                                                                         (2006)                                      “JESS:   The   expert   system   shell   for   the   Java   platform”,
                                                                                              http://www.jessrules.com/, Junho.
Johnson, W. L., Shaw, E. & Ganeshan, R.  (1998) Pedagogical Agents on the Web.
Proceedings  of  the  Workshop  on  WWW-based  Tutoring,  ITS’98,  San  Antonio,
Texas.
Menken, M. (2005) “JCLIPS: Clips for Java”, http://www.cs.vu.nl/~mrmenken/jclips/,
Junho.
Moura, M. F. e Cruz, S. A. B. (2001) “Estudo de expert system shells para o ambiente
de diagnose remota”. In: Relatório Técnico, Campinas: Embrapa, 22 p.
Nunes, M. A. S. N., et. al. (2002) Animated Pedagogical Agent in the Intelligent Virtual
Teaching Environment. Interactive Educational Multimedia, No. 4, April.
Nwana,  H.  (1996)  “Software  Agents:  An  Overview”,  In:  Knowledge  Engineering
Review, v. 11, n. 3, p. 1-40, set.
Pereira, A. S. e Geyer, C. F. R.  (1999) “Um Agente para Seleção de Estratégias de
Ensino em Ambientes Educacionais na Internet”, In: RITA (Revista de Informática
Teórica e Aplicada). Porto Alegre, v. 6, n. 2,   p. 89-105, jul.
Riley,  G.  (2004)  “CLIPS:  a  tool  for  building  expert  systems”, http://www.ghg.net/
clips/CLIPS.html, Junho.
Sun. (2006) “Java Server Pages technology”, http://java.sun.com/products/jsp/, Junho.
Vicari R. M.; Giraffa, L. M. M. (2003) Fundamentos dos Sistemas Tutores Inteligentes.
In: BARONE, D. (org). Sociedades artificiais: a nova fronteira da inteligência das
máquinas. Porto Alegre: Bookman, 2003. ISBN: 85-363-0124-4.
Vicari, R. M. (1990) Um Tutor Inteligente para a programação em Lógica: idealização,
projeto  e  desenvolvimento.  Tese                                                            (Doutorado  em  Ciência  da  Computação).
Universidade de Coimbra, Coimbra.





