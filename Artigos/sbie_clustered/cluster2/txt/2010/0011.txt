Árvore de Características de Software Educativo: Uma
Proposta para Elicitação de Requisitos pelo Usuário
Cintia Carvalho Oliveira, Daniele Carvalho Oliveira, Cleber Ferreira Oliveira,
Renan Gonçalves Cattelan, João Nunes de Souza
Faculdade de Computação - Universidade Federal de Uberlândia (UFU) - Uberlândia -
MG - Brasil
{cintia,daniele}@cidaeli.com.br,clebermat2@gmail.com,
{renan,nunes}@facom.ufu.br
Abstract                                                                                        -                                         Requirement  analysis  usually  consists  of  experts   ’ad  hoc
prepositions, however, the key character that holds the knowledgement about
the domain to be developed, usually does not understand the language of
specialists. Thus, people who should specify the software are relegated to the
background, as is the case of students and teachers of elementary schools
regarding  educational  software.                                                               This  paper  presents  a  proposal  for
requirements elicitation with the peculiarity that it comprises a methodology
that can be used by the user or even an important tool for developer and
clients.   Our proposal is based on the development methodology driven by
features and we call it tree features.
Resumo - Geralmente, a análise de requisitos é feita por proposições ad hoc
de   especialistas.   Mas,   nesse   contexto,   o   personagem   que   detém   o
conhecimento a respeito do domínio a ser desenvolvido, normalmente, não
compreende a linguagem dos especialistas.   Assim, as pessoas que deveriam
especificar o software são relegadas a um segundo plano, como é o caso de
alunos  e  professores  do  ensino  fundamental  em  relação  aos  softwares
educativos. Apresentamos uma proposta para definir de requisitos, com o
diferencial de se tratar de uma metodologia que pode ser usada por leigos.
Utilizamos  uma  concepção  baseada  na  metodologia  de  desenvolvimento
guiada por características, na qual chamamos de árvore de características.
1. Introdução
Neste trabalho, discutimos a respeito de uma proposta para elicitação de requisitos
através de um modelo gráfico que seja de fácil desenvolvimento e compreensão, mesmo
por um usuário leigo que deseja definir as necessidades de um software. No caso deste
trabalho o foco é utilizar esta metodologia para elicitar requisitos de uma comunidade
virtual de aprendizagem e contar com o apoio de professores do ensino fundamental
para realizar esta atividade.
Em  geral,  o  cliente  não  consegue  especificar  claramente  tudo  que  precisa,
deixando para o desenvolvedor a tarefa de prever e imaginar suas necessidades E ao
fazer  isso,  na  maioria  das  vezes,  o  cliente  acata  tudo  que  foi  sugerido  pelo
desenvolvedor, para no futuro apontar os problemas, ou, eventualmente, questionar os
requisitos  que  devem  ser  reavaliados  e  refeitos.    Tudo  isso,  torna  o  processo  de
elicitação de requisitos demorado e com alto custo.




Nesta proposta, utilizamos a engenharia de requisitos para extrair e descobrir as
características que o sistema deve possuir. A definição dos requisitos não é um processo
matemático e há fatores organizacionais, técnicos e sociais envolvidos [Batista 2003].
Os desenvolvedores de software têm procurado a melhor forma de levantar os
requisitos de um sistema e, dessa forma, diversas técnicas e métodos foram criados para
garantir que um sistema atenda às necessidades e expectativas dos clientes  [Batista
2003], [Pressman 2002], [Neto, Gomes e Tedesco 2003], [Bortoli e Price 2000].
No  processo  de  elicitação  de  requisitos,  algumas  técnicas  são  empregadas:
entrevistas,   questionários,   casos   de   uso,   brainstormig,   etc.                    [Pressman                                              2002].
Utilizaremos uma variante de uma dessas técnicas para a criação, junto ao cliente, de
um  modelo  gráfico  que  concentra  os  requisitos  do  sistema,  em  vários  níveis  de
abstração.
De uma forma geral, os sistemas são projetados seguindo proposições ad hoc de
especialistas [Neto, Gomes e Tedesco 2003]. Mas, neste trabalho, propomos o uso de
uma modelagem, baseada na metodologia de desenvolvimento guiado por característica,
que chamamos de árvore de características. Essa modelagem pode ser elaborada pelo
usuário, a fim de recolher requisitos necessários em um sistema. É um modelo que
estimula o design participativo e evolve clientes, ou usuários, em todo o processo de
desenvolvimento de software [Dix 2004]. Esta abordagem prevê que desenvolvedor e
cliente trabalhem juntos em um modelo gráfico simples e fácil de compreender. Isso
facilita a coleta de requisitos e melhora a qualidade do software final, pois fica mais
claro o entendimento do sistema solicitado. Há, também, um incremento da satisfação
do cliente ao receber um software que se adequa às suas necessidades.
2. Engenharia de Requisitos
Segundo Sommerville [2007] “o processo de descobrir, analisar, documentar e verificar
esses serviços e restrições é chamado de engenharia de requisitos”. Ele define ainda que
“requisitos de um sistema são descrições dos serviços fornecidos pelo sistema e suas
restrições operacionais.”
De  acordo  com  Silva                                                                      [2005]  existem  muitas  técnicas  de  modelagem  de
requisitos, sendo as seguintes as mais expressivas:
•   Casos de Uso: conjunto de sequências de ações, resultantes da interação do
sistema com um ator. [Booch, Rumbaugh e Jacobson 2000];
•   Viewpoints: considera aspectos do sistema percebidos por diferentes requerentes.
[Finkelstein et al. 1992];
•   Expressão Controlada de Requisitos - CORE: as perspectivas podem ser físicas
ou funcionais, representando organizações, homens, entidades de hardware ou
software  e  processos,  no  final  combinadas  representam  as  atividades.
[Finkelstein et al. 1992];
•   Diagrama de Fluxo de Dados: é uma representação gráfica que mostra o fluxo de
informação e as transformações que são aplicadas à medida que os dados se
movem da entrada para a saída [Pressman 2002];
•   Processador  de  Linguagem  de  Requisitos                                              -  RLP:  desenvolvimento  de
linguagens formais para os requisitos de especificação das aplicações  [Silva,
Bonin e Paludo 2005];




•   Metodologia da Engenharia de Requisitos de Software -- SREM: os caminhos
dos  dados  consistem  nas  mensagens  de  entrada,  na  sequência  das  tarefas
processadas  que  envolvem  o  fluxo  do  controle,  e  nas  mensagens  de  saída.
[Finkelstein et al. 1992];
•   Volere: é um método completo de obtenção de requisitos, baseado nos casos de
uso. [Fischer 2001].
Neste artigo propomos uma nova estratégia para definição dos requisitos, que se
fundamenta  na  metodologia  de  desenvolvimento  guiado  por  características                  [Filho,
Olliveira e Lucena 2004] (Feature Driven Development - FDD) no qual referenciamos
por árvore de características.
No desenvolvimento, que se fundamenta em características, temos a capacidade
de especificar a variabilidade de propriedades (os requisitos) e suas interdependências
através de um modelo. Nesse contexto, uma característica é  “uma função valorizada
pelo cliente” que deve ser construída e acoplada ao novo sistema. Essa característica é
expressa pelo cliente em uma linguagem natural, o que facilita a comunicação entre os
envolvidos no projeto de construção do novo sistema. Conforme  [Filho, Olliveira e
Lucena 2004], a utilização desse paradigma de desenvolvimento propicia a geração de
software por meio da composição de características.
Outra vantagem dessa abordagem (além da correlação entre características) é sua
representação  gráfica.    Em  geral,  para  o  usuário  final,  a  representação  gráfica  é
importante, pois ela é um modelo semântico que descreve as relações estruturais entre
as características de um domínio de aplicação. Uma simbologia para a representação do
modelo utilizada por [Filho, Olliveira e Lucena 2004], é mostrada na Figura 1.
Figura 1: Simbologia para Modelagem de Características
3. Árvore de Características
A representação gráfica das características é um dos principais aspectos pelo
qual o adotamos para o uso com o usuário final, pois se torna uma representação
simples  dos  requisitos  do  sistema.  Durante  a  modelagem  o  designer  é  impelido  a
detalhar cada vez mais o modelo, formando uma árvore. A esta árvore chamamos de
árvore de características.
Para exemplificar o uso de árvores de características, apresentamos, a seguir, a
modelagem de uma comunidade virtual de aprendizagem.
3.1.   Modelando uma comunidade virtual de aprendizagem
Definimos, a seguir, um metamodelo de ensino (no caso da Figura 2, um metamodelo
de ensino de lógica, mas poderia ser qualquer outro assunto), no qual delineamos suas




principais  funcionalidades.  E  nesse  contexto,  cada  funcionalidade  é  composta  por
características específicas.
Figura 2: Parte do modelo específico inicial para ensino de lógica à distância
Para a criação da árvore definimos algumas características fundamentais:
Apresentação Lúdica: A forma de ensinar deve ser lúdica, pois no domínio
aplicado, se trata de um público alvo bem definido de crianças do 6º ao 9º ano do ensino
fundamental, que são atraídos por ambientes interativos e divertidos.
Livro: Todo o ensino deve ser baseado em um livro específico que por sua vez
possui conteúdo teórico e multidisciplinar. No caso do ensino de lógica, o projeto utiliza
como base a série “Belisca no Mundo da Lógica” [Souza 2009].
Software:  O  ensino  à  distância  necessita  de  um  software  para  apoiar  a
aprendizagem facilitada do conteúdo didático, e possuir as ferramentas de interação e
colaboração.
Sala de Aula: Pode existir uma sala de aula para um ensino coletivo do assunto;
Plano  Pedagógico:  É  necessário  um  plano  pedagógico  que  detalhe  a
metodologia do ensino, objetivos, etc.
A partir do ponto no qual se definem as características principais, expandimos
cada uma delas olhando de forma mais minuciosa e definindo-as melhor através dos
requisitos filhos, ou seja, outras características que a definem.
A característica  “Software”, vista na Figura  2, é mostrada na Figura  3 como
“Portal de Ensino” e foi expandida para agregar as características que a compõe.
Figura 3 - Modelo do “Portal de Ensino”
No  modelo  da  Figura                                                                       3,  foram  identificadas  as  seguintes  características
obrigatórias:
•   Perfil/Blog: Na comunidade virtual cada aluno possuirá um perfil e um blog.
Esta característica é composta de outras que estão especificadas na Figura 4(a).
•   Chat: Permite uma comunicação síncrona entre os alunos, ou entre o professor,
o tutor e os alunos.




•   Fórum: Ferramenta de comunicação assíncrona que permite o envio e resposta
de dúvidas, ou mensagens de assuntos gerais. As características fórum e chat são
compostas de outras, e estas podem ser visualizadas na Figura 4(b).
•   Revista Eletrônica: Esta característica concentra o ensino do material didático,
no âmbito do projeto é baseado no livro “Belisca no Mundo da Lógica”. Trata-se
de um livro eletrônico interativo, utilizado como facilitador do ensino de lógica.
As características que a compõe podem ser visualizadas na Figura 4(c).
(a)                                                                                         (b)                            (c)
Figura 4 - Modelos das características
Como não é objetivo deste trabalho se aprofundar em o que é e como se compõe
uma comunidade virtual de aprendizagem, não entraremos em detalhes a respeito de
cada característica definida.
Esse  tipo  de modelagem  estimula  o  pensamento  criativo,  um  brainstorming
pessoal, pois combinando e estendendo idéias, podemos nos focar individualmente nas
características  e  expandí-las.  De  acordo  com  Osborn                                   [1962]  brainstorming  é  um
processo criativo, uma técnica de criatividade, que se dedica a combinar e estender
idéias,  incentivar  idéias  pouco  convencionais  e  com  foco  na  quantidade.  Combina
frases, palavras relacionadas a um tema, para assim gerar soluções. Com a combinação
dessas idéias, ou seja, características de um software cria-se um modelo similar a uma
árvore, a que denominamos árvore de características, para futuras referências.
Uma  observação  sobre  esse  modelo  é  a  sua  simplicidade,  o  que  o  torna
adequado  para  ser  elaborado  pelo  cliente  em  conjunto  com  o  desenvolvedor.  As
características são apresentadas de forma estruturada. Dessa forma, os requisitos do
sistema são organizados de forma hierárquica, como também são detalhados, o que
facilitará a execução das outras etapas da engenharia de requisitos, ou seja, análise,
especificação e validação [Batista 2003].
4. Experimentação e resultados
A fim de comprovar a eficiência na aplicação desta abordagem com usuários leigos, foi
realizada  uma  experimentação  com  44  professores  da  rede  pública  de  ensino.  Foi
solicitado  aos  participantes  do  experimento,  que  desenvolvessem  uma  árvore  de
características para uma comunidade virtual de aprendizagem.




O objetivo era avaliar a facilidade dos professores na elicitação de requisitos,
seguindo a metodologia do desenvolvimento da árvore de característica.
Para o desenvolvimento dessa atividade alguns passos foram seguidos:
•   Em um primeiro momento foi apresentado aos professores conceitos a respeito
do que é a Internet, conceitos em relação à Web 2.0 e comunidades virtuais de
aprendizagem.
•   Foram explicados, brevemente, os fundamentos da elaboração de uma árvore de
características, exemplificando os conceitos com a modelagem de uma loja de
presentes virtual, Figura 5. Esse modelo, em outro domínio, foi utilizado para
que não houvesse a influência de um modelo já pronto, sobre os participantes.
•   Após esse breve exemplo, foram distribuídos os questionários com uma folha
anexa para a criação da árvore.
Figura 5 - Exemplo de uma árvore de características de uma loja virtual
3.2.   Perfis dos participantes
Como o objetivo do método proposto neste trabalho é facilitar a elaboração de sistemas
que atendam usuários leigos, foi feita uma pesquisa sobre o perfil dos participantes do
experimento.   A maioria dos participantes já utiliza a Web há bastante tempo (25 de 44
participantes), porém o conhecimento em informática é mediano.
No que se refere à área de atuação dos professores participantes, a maioria se
concentrava no ensino fundamental. Alguns eram professores do ensino médio e da
educação  de  jovens  e  adultos.  Além  disso,  havia  também  alguns  que  eram
coordenadores de área e laboratoristas.
3.3. Análise dos Resultados
Durante o experimento, cerca de  20% dos participantes solicitou auxílio para sanar
dúvidas, ou mesmo para que fossem feitas verificações em seus modelos, dado o desejo
de certificarem se estavam procedendo de forma correta.
Alguns  participantes  compararam  o  modelo  a  mapas  mentais,  ou  mesmo  a
organogramas, o que, para eles, facilitou a elaboração da árvore. Comentaram também




que se sentiam impulsionados a detalhar cada vez mais o nó antecedente, o que permitia
uma análise mais refinada do sistema.
De um modo geral, percebemos que a idéia foi captada por todos e houve um
entendimento da metodologia. Além disso, todos os participantes do experimento foram
capazes  de  produzir  árvores  de  características  em  graus  variados  de  detalhamento.
Houve casos em que alguns adaptaram o modelo com características específicas de sua
área de atuação, como foi o caso de uma professora de inglês de turmas de 8º e 9º ano
do ensino fundamental (Figura 6).
Figura 6 - Ambiente Educacional por uma professora de Inglês
Na Figura 7 apresentamos uma árvore que contém muitas características para
uma comunidade virtual de aprendizagem genérica desenvolvida por uma professora de
educação física do ensino fundamental.
Enfatizamos  que  as  modelagens  foram  realizadas  de  forma  isolada                       (sem
acompanhamento de desenvolvedores). Mesmo encontrando dificuldades, somente duas
pessoas não se sentiram capacitadas para completar a atividade. Os demais realizaram a
atividade com graus variados de detalhamento.
Figura 7 - Árvore genérica por uma professora de Educação Física




A Figura 8 apresenta o nível de complexidade, ou seja, o nível de dificuldade que os
participantes do experimento encontram na elaboração da modelagem (cada participante
avaliou em si a dificuldade encontrada e adicionou a isso um nível de 1 a 10). Podemos
observar que mais de  50% dos participantes a classificaram com um nível igual ou
inferior a cinco.
                                                                                            Dificuldade para realizar a   Nível 1
                                                                                            modelagem                     Nível 2
                                                                                                                          Nível 3
                                                                                                                          Nível 4
3                                                                                           1  2
3                                                                                           2                             Nível 5
                                                                                            1
3                                                                                                                         Nível 6
3                                                                                                                         Nível 7
Nível 8
5                                                                                           17                            Nível 9
Nível 10
4                                                                                           não respondeu
Figura 8 - Níveis de dificuldade encontrados para realizar a modelagem
3.4.   Comentários dos participantes
A  seguir  transcrevemos  alguns  dos  comentários  feitos  pelos  participantes,  quando
questionados do porquê de terem definido certo nível de dificuldade para realizar a
modelagem.
Apresentamos, inicialmente, os comentários de alguns usuário que definiram o
nível de dificuldade igual ou inferior a cinco:
“Por que através do conhecimento da realidade de sua escola é possível montar
um sistema on-line que vá atender todas as necessidades. Lembrando que o mesmo
estará sempre em processo de construção conforme a necessidade do momento.”
“No princípio, foi por falta de entender o que foi pedido. Ao esclarecer o que
era para ser feito, ficou fácil.”
Comentários de usuário que definiram o nível de dificuldade superior a 5:
“Nós  não  estamos  acostumados  a  pensar  o  processo  de  criação.  Apenas
repetimos, reproduzimos e utilizamos o que o outro criou. Criar e inventar requer
hábito.”
“Acho que pela minha falta de experiência na informática. Tenho vontade de
aprender, gosto de aplicar em sala de aula, mas reconheço minhas limitações.”
Concluímos, assim, que a dificuldade de alguns reside principalmente na falta de
conhecimentos de informática, ou mesmo da falta de pensamento criativo (na ocasião).
Isso, porque durante o exercícios tiveram que pensar como colaboradores, e não como
meramente usuários finais. O experimento propiciou a retirada dos indivíduos de uma
posição a que estavam acostumados, como consumidores, para então pensarem como
provedores de recursos.
4.   Incorporação dos resultados
Após analisar cada árvore desenvolvida, foi possível incorporar algumas características
em uma árvore.Alguns passos foram realizados para a incorporação dos resultados:




•   agrupamos requisitos similares;
•   eliminamos aqueles cujo escopo não está de acordo com o sistema;
•   eliminamos requisitos que não estejam em um nível técnico condizente.
Na  Figura                                                                                   9  esta  a  árvore  resultante  da  incorporação  das  características
apontadas  pelos  participantes  como  importantes  para  uma  comunidade  virtual  de
aprendizagem.
Figura 9 - Árvore de características resultante
5. Conclusão e Trabalhos Futuros
Usuários ou clientes são capazes de elicitar requisitos, uma vez que são os detentores do
conhecimento    no    domínio    do    software.    Porém,    é    necessário    que    o
analista/desenvolvedor tenha a mão uma ferramenta prática para levantar os requisitos,
sem confundir o cliente com definições técnicas.
Aplicando  a  proposta  a  usuários  com  pouco  conhecimento  em  informática,
averiguamos que a mesma é de fácil assimilação e é possível efetuar o desenvolvimento
de uma árvore mesmo sem serem assessorados. Dessa forma, a árvore de características
pode ser usada eficientemente para levantar requisitos, principalmente se no processo de
modelagem o usuário estiver acompanhado de um desenvolvedor, a fim de aumentar o
nível de detalhamento de requisitos.
Outra  importante  observação  é  que  a  árvore  de  características  estimula  o
detalhamento  dos  requisitos,  uma  vez  que  ao  se  abrir  um  ramo  da  árvore,  os
modeladores se sentem impulsionados a criar folhas, aumentando a árvore e, por fim,
criando uma análise mais fina do sistema. E este comportamento foi observado durante
a elaboração das árvores de características pelos participantes da experimentação.
Como trabalho futuro será desenvolvido uma formalização matemática para a
árvore de características, a fim de que este modelo possa ser utilizado para elaboração
de outros modelos, que serão capazes de realizar verificações e análise destes requisitos.




Referências
Batista,  E.  A.                                                                               (2003),  Uma  Taxonomia  Facetada  para  Técnicas  de  Elicitação  de
Requisitos. Dissertação de Mestrado, UNICAMP.
Booch, G., Rumbaugh, J., Jacobson, I. (2000), UML: guia do usuário. Tradução por
Fábio Freitas. Rio de Janeiro: Campus, xx, 472 p.
Bortoli, L. A. de., Price, A. M. de A.  (2000), O Uso de Workflow para Apoiar a
Elicitação  de  Requisitos.  WER                                                               2000,  disponível  em                                                   <http://wer.inf.puc-rio.br/
WERpapers/artigos/artigos_wer00/bortoli.pdf> Acesso em 05/03/2010
Dix,  A.  et  al.                                                                              (2004),  Human-computer  interaction.                                   3.  ed.  Londres:  Prentice-Hall
Europe, 2004. 834 p
Filho, I. M., Olliveira, T. C. de, Lucena, C. J.P. de. (2004), A framework instantiation
approach based on the Features Model, The Journal of Systems and Software.
Finkelstein,  L,  Huang,  J,  Inkelstein,  A,  Nuseibeh,  B.(1992),  Using  Software
Specification  Methods  for  Measurement  Instrument  Systems.  Part  1:  Structured
Methods. London: City University.
Fischer, M. C. B. O.  (2001), Estudo de Requisitos para um Software Educativo de
Apoio ao Ensino da Introdução à Computação. Dissertação de Mestrado. Local:USP
- Universidade de São Paulo.
Neto,  G.G.  da  C.,  Gomes,  A.  S.,  Tedesco,  P.  (2003),  Elicitação  de  Requisitos  de
Sistemas Colaborativos de Aprendizagem Centrada na Atividade de Grupo, SBIE
2003,  Disponível  em  acessado                                                                <http://br-ie.org/pub/index.php/sbie/article/view/
262/0> Acesso em 23/02/2010
Osborn, A. F. (1962), O Poder Criador da Mente. Princípios e processos do Pensamento
Criador e do Brainstorming. São Paulo, IBRASA.
Pressman, R. (2002), Engenharia de Software. 5a edição. McGraw-Hill.
Sommerville, I. (2007) Engenharia de software. 8a edição. São Paulo: Pearson Assison-
Wesley.
Silva, S. M. A. da, Bonin, M. R., Paludo, M. A. (2005), Levantamento de Requisitos
Segundo o Método Volere. Disponível em  <http://publica.fesppr.br/index.php/rnti/
article/viewFile/v1n1ART2/86> Acesso em: 01/07/2009.
Souza,  J.  N.  de.                                                                            (2009)  Belisca  no  Mundo  da  Lógica.  Publicação  interna  da
Universidade Federal de Uberlândia.
Trujillo, S., Batory, D., Diaz, O. (2007), Feature Oriented Model Driven Development:
A Case Study for Portlets, 29th International Conference on Software Engineering
(ICSE 2007), Minneapolis, Minnesota, USA, May 20-26.





