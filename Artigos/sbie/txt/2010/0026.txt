A Contribuição da Filosofia de Platão e de Aristóteles para o
Ensino do Paradigma de Orientação a Objetos
Rafael O. Chave1, Emanuel M. da C. Tavare2,
Ita Cristina Rodrigues1, Sandro R. B. Oliveira1, Elói L. Favero1
1Programa de Pós-Graduação em Engenharia Elétrica - Instituto de Tecnologia -    Uni-
versidade Federal do Pará (UFPA)
Caixa Postal 66075110 - Belém - PA - Brasil
2Programa de Pós-Graduação em Ciência da Computação - Instituto de Ciências
Exatas e Naturais - Universidade Federal do Pará (UFPA)
Caixa Postal 66075110 - Belém - PA - Brasil
{rochaves,  emanuelmaues}@ufpa.br,  eng.itacristina@yahoo.com.br,
{srbo,  favero}@ufpa.br
Abstract. This paper presents evaluation results of an interdisciplinary learn-
ing approach using concepts of  object oriented  (OO), Plato and Aristotle
Philosophy, both greek philosophers ancients. There are enough similarities
of these philosophers thoughts and OO that can be used in OO education. The
evaluation results demonstrate the learning approach relevance to increase
students interest. The learning approach acceptance is viewed in a positive
way by the students.
Resumo. O trabalho apresenta resultados da avaliação de uma abordagem de
ensino interdisciplinar onde a Teoria das Ideias de Platão e a Teoria da For-
ma e Substância de Aristóteles são utilizadas para fundamentar o ensino dos
conceitos de Orientação a Objetos (OO). A similaridade entre os pensamentos
destes filósofos e a OO é explorada nesta abordagem de   ensino da OO. A
avaliação mostrou que esta abordagem é relevante, aumentando a motivação
e o interesse dos alunos pelos conceitos de OO.




1.   Introdução
Atualmente, existe grande interesse em melhorar o ensino da Engenharia de Software
(ES) no Brasil. Para tratar desse tema existe o Fórum de Educação em Engenharia de
Software1. A forma tradicional de ensino parece não ser suficiente para formar os profis-
sionais que o mercado exige, porém, pesquisadores tem defendido métodos alternativos
para ensino de ES [Wangenheim e Shull 2009]. Os métodos de ensino atuais não conse-
guem contemplar toda a amplitude e com a profundidade necessária os conteúdos teóri-
cos e práticas da ES [Mead et. al. 1997].
A modelagem é um dos assuntos mais fundamentais da ES [Sommerville 2003;
Jacobson, Booch e Rumbaugh 2000]. Em cursos de computação, a disciplina de ES tem
como conteúdo programático métodos, técnicas e ferramentas para modelagem de siste-
mas de software e, em especial, a Unified Modeling Language (UML), utilizada para
análise e projeto de sistemas com Orientação a Objeto (OO).
A OO é um paradigma muito difundido na academia e no mercado. Seus concei-
tos norteiam a modelagem de sistemas de software e a codificação em linguagens de pro -
gramação orientadas a objeto. Para os cursos de computação, a SBC (2003) evidencia a
importância desta como um dos principais tópicos das disciplinas de Linguagens de Pro-
gramação e de ES. Assim, os conceitos da OO devem ser ensinados de forma completa,
correta e consistentemente, pois a falta ou a má compreensão deles terá consequências
prejudiciais na formação dos alunos.
A baixa motivação que os alunos de ciência da computação possuem para estudar
os conceitos teóricos de ES [Castro apud Braga, 2009] é uma das dificuldades enfrenta-
das para o ensino dessa disciplina. Para tentar diminuir esse problema, abordagens inter-
disciplinares [Braga 2009] têm ganhado importância, porém, na maioria das vezes, a in-
terdisciplinaridade ocorre entre disciplinas do próprio currículo, limitando a potencialida-
de do uso dessa forma de ensino. Por exemplo, apesar do currículo da SBC para Cursos
de Graduação em Computação e Informática (2003) ter a disciplina Filosofia nos seus
tópicos, não consta nenhuma referência à Teoria de Platão e Aristóteles (TPA), focando
especificamente os conceitos relacionados à OO.
De acordo a literatura especializada, há uma forte similaridade entre a TPA e al-
guns assuntos da computação como a OO [Fleissner e Baniassad 2009; Giguette 2006;
Rayside e Campbell 2000] e a Engenharia de Requisitos [Davis e Nori 2007]. Neste tra-
balho, procuramos avaliar se o estudo interdisciplinar dos conceitos de computação com
os conceitos da filosofia poderá trazer ao estudante uma sinergia para uma compreensão
mais clara e entendimento mais profundo do primeiro conceito.
Esse artigo propõe uma abordagem alternativa e interdisciplinar para o ensino de
OO onde, em paralelo ao estudo centrado nos textos clássicos de ES, é utilizado material
complementar de cunho filosófico para a melhor compreensão dos conceitos da OO, es-
pecificamente, a Teoria das Ideias de Platão e a Teoria da Forma e Substância de Aristó-
teles [Gardner 1991].
Neste contexto, o objetivo deste trabalho é avaliar o nível de interesse e aceitação
dos alunos por essa abordagem de ensino e se ela é relevante para o ensino da OO. O es-
tudo é baseado em uma pesquisa centrada em sete questões submetidas a uma turma
1                                                                                              Disponível em: http://wiki.dcc.ufba.br/CBSOFT/CallForPapersFEES




onde esta abordagem de ensino foi adotada.
O artigo está organizado em 5 seções: a seção 2 apresenta como o experimento
foi conduzido, a 3 descreve os dados obtidos no trabalho e as conclusões adquiridas a
partir destes; a 4 apresenta trabalhos relacionados a esta pesquisa e 5 demonstra as con-
siderações finais e trabalhos futuros.
2.   Contextualização do Experimento
Durante o 1º semestre de 2009, os alunos do 5º semestre de Engenharia da Computação2
da Universidade Federal do Pará  (UFPA) cursaram a disciplina Análise e Projeto de
Software3. O professor responsável pela disciplina definiu como um dos três instrumen-
tos de avaliação a escrita de um artigo, em dupla, abordando a relação existente entre os
conceitos do Paradigma da Orientação a Objetos e a Teoria das Ideias de Platão e Teoria
da Forma e Substancia de Aristóteles, baseando-se na bibliografia de [Gardner 1991; Gi-
guette 2006; Davis e Nori 2007; Rayside e Campbell 2000]. Sendo Gardner (1991) a re-
ferência introdutória a TPA, as demais descrevem as mais importantes analogias entre as
teorias da OO e áreas específicas da ES.
Um ponto relevante a considerar nessa pesquisa é que os alunos já possuíam co-
nhecimento sobre OO. No segundo módulo do curso de Engenharia da Computação -
UFPA foi ministrada a disciplina Algoritmo e Programação de Computadores II, que
aborda a Programação Orientada a Objetos (POO). Na introdução da disciplina Análise e
Projeto de Software foi ensinada UML. Nesse cenário, ratifica-se que o foco do artigo
centrou-se em aspectos de aceitação, interesse e relevância da abordagem interdisciplinar
de ensino.
2.1.   Questionário para Pesquisa
Para avaliar a abordagem de ensino desse trabalho foi criado um questionário com sete
perguntas referentes à relevância, interesse e aceitação da abordagem. Para não entrevis-
tar todos os vinte e oito alunos da disciplina, procurou-se aleatoriamente os 10 primeiros
alunos que aceitassem responder o questionário. A seguir, serão apresentados os resulta-
dos da tabulação dos dados e as suas análises.
3.   Tabulação e Análise dos Dados
Nessa seção apresentam-se as questões do estudo desse artigo, suas respostas e a inter-
pretação destas. As quatro primeiras questões exigiam que os alunos atribuíssem como
respostas notas entre 0 e 10. Sendo que a atribuição dos conceitos é dada: Nota < 5 =
Ruim; 5 ≤ Nota < 7 = Regular; 7 ≤ Nota <   9 = Bom; Nota   ≥   9   =   Excelente.
3.1.  Questão 1
Sentiu dificuldade para compreender a TPA? (Quanto maior for a nota, menor o grau de
dificuldade na compreensão). A Figura 1 apresenta as respectivas porcentagens de uso
de cada conceito.
2                                                                                            Disponível em: www.engcomp.ufpa.br
3                                                                                            Disponível em: http://www.engcomp.ufpa.br/prog_disc/eng_comp/AnaliseProjetoSistemasSoftware.p
df




20%
30%
10%                                                                                         Ruim
Regular
40%
Bom
Excelente
Figura 1. Porcentagem dos Conceitos da Questão 1
Análise: Pode-se perceber que 30% sentiram alguma dificuldade (Ruim ou Regu-
lar) para compreender as Teorias. Uma possível explicação deve-se ao fato de ser uma
leitura completamente diferente do que estão habituados a ler. A maioria (70% de Bom
ou Excelente) não teve dificuldades em entender as teorias, evidenciando que leituras fi-
losóficas podem ser trazidas para o contexto da ES sem que os alunos tenham dificulda-
de de entendê-las, não inviabilizando o uso desse tipo de abordagem.
3.2.  Questão 2
Achou relevante o entendimento da TPA? (Quanto maior a nota, maior a relevância do
entendimento das Teorias). A Figura 2 apresenta as respectivas porcentagens de uso de
cada conceito.
20%
30%
Ruim
Regular
50%
Bom
Excelente
Figura 2. Porcentagem dos Conceitos da Questão 2
Análise: Nenhum aluno considerou totalmente irrelevante o entendimento das te-
orias. Percebemos que metade dos alunos considerou Bom e 80% avaliou como Bom e
Excelente. O total de Excelente foi 30%, porém, esperava-se um valor maior para esta
resposta. Uma explicação é, em razão dos alunos já terem conhecimento prévio dos con-
ceitos da OO, eles não notaram novos conceitos de OO na TPA, além daquelas que eles
já conheciam.
3.3.  Questão 3
Fazendo analogias com a TPA fica mais fácil o entendimento do assunto? (Quanto maior
a nota, mais fácil é o entendimento do assunto). A Figura 3 apresenta as respectivas por-
centagens de uso de cada conceito.




10%
20%
Ruim
Regular
70%
Bom
Excelente
Figura 3. Porcentagem dos Conceitos da Questão 3
Análise: A maioria (90% de Bom ou Excelente) achou que o entendimento das
teorias filosóficas facilita o entendimento da Orientação a Objeto. Esse resultado pode
ser fruto de que abordagens interdisciplinares são eficazes, quando bem planejadas e
conduzidas. Um aluno fez a seguinte consideração: “qualquer forma ensino interdiscipli-
nar é interessante”.
3.4.  Questão 4
Esse tipo de relacionamento entre as disciplinas faz com que o assunto se torne mais in-
teressante? (Quanto maior a nota, mais interessante é a analogia). A Figura 4 apresenta
as respectivas porcentagens de uso de cada conceito.
50%                                                                                        50%     Ruim
Regular
Bom
Excelente
Figura 4. Porcentagem dos Conceitos da Questão 4
Análise: A quarta questão obteve a maior concordância positiva (Bom ou Exce-
lente).   Esse resultado mostra que facilitou o entendimento do assunto ministrado, tor-
nando-o mais interessante e, por consequência, mais estimulante aos alunos.
As questões 5 e 6 pediam que os alunos atribuíssem às respostas valores                    “Sim”
ou   “Não”, e poderiam comentar a sua resposta.
3.5.  Questão 5
Acha que o estudo da Teoria das Ideias poderia ser introdutório ao ensino da Orientação
a Objetos? A Figura 5 apresenta as respectivas porcentagens de uso do “sim” e do “não”.




Sim
100%
Não
Figura 5. Porcentagem dos Conceitos da Questão 5
Análise: Apesar de inicialmente acharem “estranho” um professor começar o as-
sunto de OO (considerando que eles já tinham conhecimentos relativos à OO), com a
TPA em vez de como tradicionalmente é introduzido, mas após entenderem as teorias e
perceberem a forte relação com OO, 100% dos alunos acham que poderiam ser introdu-
tórias ao ensino da OO, pois, a maioria acredita que a TPA como introdução tornaria o
assunto mais interessante e de fácil entendimento.
3.6.  Questão 6
Você teve alguma forma de resistência a esse tipo de abordagem de ensino? A Figura 6
apresenta as respectivas porcentagens de uso do “sim” e do “não”.
40%
60%
Sim
Não
Figura 6. Porcentagem dos Conceitos da Questão 6
Análise: Mudanças culturais costumam causar resistência por aqueles que terão
que se adaptar às novas exigências e regras impostas. Os alunos dos cursos de computa-
ção geralmente estão acostumados com métodos de ensino fortemente baseados em au-
las expositivas, literaturas técnicas e práticas de laboratório. Então, não foi surpreenden-
te que a maior parte dos alunos, 60%, tivesse resistência ou descrédito por uma aborda-
gem de ensino que seja diferente da tradicional.
3.7.  Questão 7
Acha que essa forma de abordagem de ensino deveria ser continuada? Explique sua res-
posta. A Figura 7 apresenta as respectivas porcentagens de uso do “sim” e do “não”.




Sim
100%
Não
Figura 7. Porcentagem dos Conceitos da Questão 7
Análise: Foi unânime, todos os alunos concordam que este tipo de abordagem de
ensino deveria ser continuada, pois ajuda na “fixação da ideia”. Segundo um dos alunos,
debates de ideias como as subjacentes a TPA podem ajudar a compreender determinados
assuntos, como a OO, e também expandir o seu conhecimento além da área da computa-
ção. Outros alunos da turma afirmaram que é muito importante este tipo de contextuali-
zação: “é interessante ver que os assuntos que estudamos tecnicamente, podem ser estu-
dados filosoficamente”.
Ainda na mesma questão, outro aluno citou que por serem de ciências exatas
acabam tendo uma opinião muito restrita sobre o conhecimento quando condicionados
apenas a conteúdos técnicos. Percebemos, assim, a aceitação total por parte da turma,
que também acredita que este tipo de ensino pode contribuir para o aperfeiçoamento de
seus conhecimentos, havendo um equilíbrio entre o ensino não técnico e o prático, os
quais são de extrema importância para a formação dos estudantes.
4.   Trabalhos Relacionados
A referência introdutória para a familiarização com as teorias puras de Platão e Aristóte-
les foi Gardner (1991), ainda que desprovida de nenhuma relação com a OO ou outra
área da ES. Essa referência é fundamental e oferece base para que os alunos possam rea-
lizar suas primeiras analogias.
Em Fleissner e Baniassad (2009) diz-se que a TPA influenciaram o estilo de pen-
samento e raciocínio ocidental e, dado que o POO é uma construção da cultura ociden-
tal, a similaridade entre a OO e as TPA é considerada normal.
Segundo Giguette (2006), as linguagens OO são baseadas na filosofia de Platão,
mais precisamente nos conceitos de classe e objeto. Exemplifica que classes Java são si-
milares a Idéias de Platão e as instâncias são representações concretas da forma ideal que
a sua classe representa. Conclui que estudantes de computação não são educados para li-
dar com as sutilezas da abstração como estudantes de filosofia, literatura, arte e psicolo-
gia, pois cientistas da computação muitas vezes preferem uma perspectiva matemática da
abstração.
Além destas, Rayside e Campbell (2000) estabelecem as relações das teorias de
Aristóteles com abstração; a ordem seguida para programar em OO e a ordem de estudo
da lógica aristotélica. Também mostra a importância da metáfora na POO e na metodo-
logia Ágil de desenvolvimento Extreme Programming (XP).
Apesar dos artigos estabelecerem relações entre a TPA e áreas da ES, nenhum




relatou seu uso para ensino ou relatou a influencia desses conhecimentos no interesse
dos alunos. Evidencia-se o que o uso desse instrumento de ensino é ainda pouco utiliza-
do, mas, como constatado nesse artigo, é de grande valor.
5.  Considerações Finais
Os resultados permitiram mostrar que a abordagem teve uma boa aceitação, consideran-
do que todos os alunos concordaram que a TPA poderiam ser introdutórias ao OO. Ape-
sar da maioria dos alunos inicialmente apresentar resistência a abordagem, mudaram de
opinião ao finalizar a disciplina, pois percebeu-se que foi consenso que a analogia feita
entre OO e a TPA tornou o assunto mais interessante. A relevância da abordagem evi-
denciou-se também quando todos os alunos concordaram que esse tipo de abordagem de
ensino deve ser estendida para outras disciplinas da computação.
Em um trabalho futuro, pode-se avaliar a efetividade desta abordagem na fixação
dos conceitos; por exemplo, medindo a assimilação dos conceitos entre duas turmas,
onde uma delas utiliza esta abordagem. Uma desvantagem da abordagem é que o profes-
sor deve ter domínio da TPA.
Referências
Braga, Juliana Cristina. (2009). “Diretrizes para o Ensino interdisciplinar de Engenharia
de Software.”, em: Anais do FEES  2009 - Fórum de Educação em Engenharia de
Software.
Castro apud Braga, Juliana Cristina. (2009). “Diretrizes para o Ensino interdisciplinar de
Engenharia de Software.”, em: Anais do FEES 2009 - Fórum de Educação em Enge-
nharia de Software.
Currículo de Referência da SBC para Cursos de Graduação em Computação e Informáti-
ca.  Disponível  em:  http://www.sbc.org.br/index.php?language=1&subject=28&con-
tent=downloads&id=82. Acessado em: 03 de Junho de 2010.
Davis, Alan M.; Nori, Kesav V. (2007). “Requirements, Plato’s Cave, and Perceptions of
Reality.”, em: Proc. of the 31st Annual International Computer Software and Applica-
tions Conference - Volume 02, pp. 487-492.
Fleissner,  Sebastian;  Baniassad,  Elisa.                                                   (2009).   “The  Culture  of  Programming  Lan-
guages.”, em: Proc. of the 24th ACM SIGPLAN conference companion on Object
oriented programming systems languages and applications, pp. 1055-1056.
Gardner, Jostein. O Mundo de Sofia. 63°.Ed. 1991.
Giguette, Ray. (2006). “Building objects out of Plato: applying philosophy, symbolism,
and analogy to software design.”, em: Communications of the ACM, Volume 49, Is-
sue 10.
Jacobson, Ivar; Booch, Grady; Rumbaugh, James. UML: Guia do Usuário. Editora Cam-
pus, Rio de Janeiro, 2000.
Mead, N., et al. The State of Software Engineering Education and Training. IEEE Soft-
ware, vol.14, no. 6, 1997.
Rayside, Derek; Campbell, Gerard T. (2000). “An Aristotelian Understanding of Object-
Oriented Programming.”, em: Proc. Of the 15th ACM SIGPLAN conference on Ob-
ject-oriented programming, systems, languages, and applications, pp. 337-353.




Sommerville, Ian. Engenharia de Software. São Paulo: Addison Wesley, 6ª.Ed. 2003.
Wangenheim, Christine Greese  Von  e  Shull, Forrest.  (2009).  “To  Game or  Not  to
Game”, em: IEEE Software, vol. 26, no. 2, pp. 92-94.





