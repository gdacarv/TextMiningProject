Personalização em Sistemas de Gerenciamento da
Aprendizagem em Conformidade com o Padrão SCORM
Carlos Alberto Botelho1, Edson P. Pimentel2, Hermes Senger3, Itana Stiubiener2
1
Universidade Municipal de São Caetano do Sul (USCS) - São Caetano do Sul, SP
2 Universidade Federal do ABC (UFABC) - Santo André, SP
3 Universidade Federal de São Carlos (UFSCAR) - São Carlos, SP
ca.botelho@terra.com.br , edson.pimentel@ufabc.edu.br,
hermes@dc.ufscar.br , itana.stiubiener@ufabc.edu.br
Abstract. For a quality distance learning education based on Internet, it is
necessary that instructional content be attractive, meets individual features
and   bases   on globally   accepted   standards.  SCORM standard  includes
requirements about the interaction of the student with the content learning.
However, although some criteria are defined to adapt to student’s behavior,
the content is always displayed in the same way. This paper proposes the
personalization of education in learning management systems in accordance
with SCORM standard, through the association of model’s student in the form
of  stereotype  with  the  representation  of  the  content  to  be  taught  to  each
stereotype.
Resumo.  Para  uma  aprendizagem  de  qualidade  baseada  na  educação  a
distância através da Internet, é necessário que o conteúdo instrucional seja
atraente, considere as características individuais do aprendiz e atenda aos
padrões  globalmente  aceitos.  O  padrão  SCORM inclui  exigências  sobre  a
interação do aluno com os conteúdos de aprendizagem. No entanto, embora
existam  alguns  critérios  para  adaptação  ao  comportamento  do  aluno,  o
conteúdo  é  sempre  exibido  da  mesma maneira.  Este  trabalho  propõe  a
personalização do ensino em ambientes de gerenciamento da aprendizagem
em conformidade com o padrão SCORM, através da associação do modelo do
estudante  do  modelo  sob  a  forma  de  estereótipo  com  a representação  do
conteúdo a ser ensinado a cada estereótipo.
1. Introdução
Com os constantes avanços das Tecnologias da Informação e Comunicação (TICs), a
educação  à  distância  através  da  Internet,  vem  sendo  apontada  como  uma  solução
altamente potencial para levar o conhecimento aos mais distantes locais do Brasil. Um
exemplo disso é o projeto Universidade Aberta (UAB) do governo brasileiro [1].
A utilização dos computadores como instrumento de aprendizagem vem sendo
intensificada desde meados do século XX. Os primeiros sistemas computacionais para o
ensino  tiveram  por  base  um  método  de  ensino desenvolvido por B.F.Skinner, cuja
característica é transmitir o conhecimento de maneira linear para todos os estudantes.
XX Simpósio Brasileiro de Informática na Educação (2009)




Posteriormente, os sistemas passaram a considerar o desempenho do estudante: a etapa
seguinte do processo de aprendizagem baseava-se na etapa anterior. Mais adiante foram
lançados os Sistemas Adaptativos, capazes de gerar um problema de acordo com o nível
de conhecimentos do estudante. A partir da década de 1980, propôs-se o uso de técnicas
de Inteligência Artificial para a criação de ambientes de aprendizagem que levam em
conta os diversos estilos cognitivos dos estudantes, denominados de STI - Sistema de
Tutoria Inteligente [2].  Mais recentemente, a internet propiciou a criação dos ambientes
de gerenciamento da aprendizagem (Learning Management System - LMS).
Em muitos ambientes, o domínio do conhecimento é representado diretamente
no código, o que permite abordar com mais propriedade um domínio específico, mas
dificulta o reaproveito desses conteúdos. Isso é um problema, pois o custo de preparação
de material didático de qualidade para o ensino por meio de computadores é bem alto,
uma  vez  que  envolve  especialistas  em  design  em  diferentes  mídias,  além  dos
especialistas no domínio do conhecimento. Uma possível solução baseia-se no uso de
normas e padrões que regulem o reaproveitamento desses recursos em diversos cursos.
Os primeiros esforços para padronizar e reaproveitar recursos computacionais de
ensino foi realizado pelo AICC  (Aviation Industry CBT Commitee) em sistemas de
treinamento de pessoal da aviação, no final da década de 1980 [3]. A seguir, surgiram
outras iniciativas de padronização, tais como o IEEE-LTSC [4], o IMS Global Learning
Consortium [5], ARIADNE [6] e SCORM [7].
Por  incorporar  especificações  de  diversos  institutos  de  padronização,  em
diferentes áreas do ensino, por meio da Internet, o SCORM tem sido adotado por grande
número de desenvolvedores de sistemas computacionais para o ensino e por essa razão
foi escolhido como objeto de estudo dessa pesquisa.
Examinando  os  quatro  volumes  de  normas  que  compõe  o  padrão  SCORM,
observa-se  que,  embora  apresente  a  característica  de  aplicar-se  a  um  estudante
individualmente,  não  existe  uma  definição  precisa  do  modo  como  o  sistema  deve
relacionar-se com o estudante durante o processo de aprendizagem. Este artigo tem por
objetivo apresentar uma proposta de arquitetura para a personalização do ensino em
Sistemas de Gerenciamento da Aprendizagem (SGAs), do inglês Learning Management
Systems (LMS), em conformidade com o padrão SCORM.
Este trabalho está organizado como segue: A seção 2 discorre sobre o Modelo do
Estudante e o Perfil de Aprendizagem. A seção 3 descreve a parte do padrão SCORM
fundamental para esse trabalho. A seção 4 apresenta a proposta de personalização do
estudante. Por fim, a Seção 4 apresenta as conclusões e sugestão de trabalhos futuros.
2. Modelo do Estudante e Perfil de Aprendizagem
Segundo Holt et al. [11], o Modelo do Estudante é uma representação explícita do que
se  acredita  saber  sobre  o  estudante  a  respeito  do  conhecimento  já  adquirido
anteriormente,   do  progresso  na  abordagem   do  conteúdo,  estilo  preferido  de
aprendizagem e outros tipos de informação sobre o estudante. Por outro lado, Self [12]
entende  que  o  Modelo  do  Estudante  deve  conter  informações  sobre  o  Nível  de
conhecimentos  do  estudante,  os  objetivos  de  aprendizagem,  motivação,  crenças  e
características pessoais do estudante, com as seguintes funções:
XX Simpósio Brasileiro de Informática na Educação (2009)




(a) Corretiva: eliminação dos erros cometidos pelo estudante no uso do sistema e no
conhecimento conceitual do assunto;
(b) Elaborativa: escolha de um tópico do assunto a ser abordado para completar o
conhecimento do estudante;
(c) Estratégica: adequação do plano de ensino ao perfil do estudante;
(d) Diagnóstica: apuração do grau de conhecimento do estudante;
(e) Preditiva: previsão do desempenho do estudante durante a aprendizagem;
(f) Avaliativa: avaliação do estudante e do sistema de ensino.
A representação do Modelo do Estudante, isto é, a reunião das informações
sobre o estudante pode ser feita mediante diversas técnicas de modelagem conforme
relata  Holt  et  al.                                                                         [11]  citando  o  Modelo  de  Sobreposição                                 (Overlay),  o  Modelo
Diferencial e o Modelo de Perturbação e Erros.
A Modelagem por Estereótipos, adotada nesse trabalho, foi proposta por Rich
[13]  e baseia-se em características comuns a grupos de pessoas. Segundo Rich, as
características pessoais não são distribuídas randomicamente pela população, mas ao
contrário, podem ser agrupadas tendo em vista algum ponto em comum entre elas.
Um estereótipo é um conjunto de características comuns a um grupo de pessoas,
por  meio  do  qual  se  pode  inferir  o  comportamento  provável  de  uma  pessoa  de
características  semelhantes,  conhecido  o  comportamento  das  pessoas  do  mesmo
estereótipo, com razoável grau de precisão.
Rich                                                                                          [13]  propõe  a  representação  de  estereótipos  como  uma  coleção  de
características que pode ser representada por pares, cada qual constituído de um atributo
e um valor. Por exemplo, na avaliação da experiência de um usuário no uso de um
sistema computacional, o atributo é a experiência que posse assumir valores como alta,
média, baixa ou nenhuma. Assim, o valor do atributo experiência do usuário pode ser
associado  aos  atributos  de  um  estereótipo  previamente  definido  e,  a  partir  dessa
associação, é possível selecionar a forma mais adequada de interação do sistema com
esse usuário.
Rosatelli et al. [17] e Stiubiener [18] definem o perfil de aprendizagem (PDA)
como a característica de um indivíduo que determina o processo de aprendizagem e a
construção  do  seu  conhecimento.  Em  suas  propostas  de  Política  de  Aprendizagem
Personalizada, ambas definem que essa característica deve ser composta de elementos
que correspondam a domínios de informação sobre o estudante. Para cada um dos
domínios que Stiubiener  [18] denomina camada de orientação, é possível existir um
conjunto de valores que expressam perfis diferentes de aprendizagem do estudante.
Assim,  por  exemplo,  o  PDA  de  um  estudante  pode  compor-se  das  camadas  de
orientação conforme tabela 1.
Tabela 1.   Camadas de Orientação (Stiubiener [18])
Camada de Orientação                                                                          Valores possíveis                                                          PDA
Preferência de mídia                                                                          Áudio / Visual                                                             Visual
Estilo de aprendizagem                                                                        Teórico Prático                                                            Teórico
Conhecimento                                                                                  Pouco /   Médio / Muito                                                    Muito
Rosatelli et al. [17] e Stiubiener [18] propõem   a modelagem do estudante em
camadas de orientação configuráveis pelo elaborador do conteúdo.
XX Simpósio Brasileiro de Informática na Educação (2009)




3. O Padrão SCORM
Criado em 1999 pela ADL (Advanced Distributed Learning), consórcio constituído por
órgãos do governo norte-americano e por empresas do setor privado, o SCORM é um
modelo  de  referência  para  a  elaboração  de  software  para  o  ensino,  que  agrega  as
especificações das instituições IEEE-LTSC, IMS, AICC e ARIADNE. O seu principal
objetivo é criar condições para reaproveitar objetos de aprendizagem, distribuídos na
Web, entre diferentes plataformas de SGAs.
Segundo o livro Overview [7], para estar em conformidade com o SCORM, um
software para o ensino precisa apresentar as seguintes características: acessibilidade,
adaptabilidade, custo, durabilidade, interoperabilidade e reusabilidade.
Na versão atual, as normas que constituem o padrão SCORM são descritas em
quatro livros:
Overview [7]: onde são descritas, de modo geral, as especificações do padrão;
Content Aggregation Model  (CAM)  [8], onde são descritas as especificações
para a agregação do material de ensino num pacote para a sua distribuição,
denominado “pacote de conteúdo”;
Run-Time Environment (RTE) [9], onde são descritas as especificações para a
integração  entre  um  SGA  e  o  material  de  ensino  existente  num  pacote  de
conteúdo;
Sequencing and Navigation                                                                      (S&N) [10], onde são descritas as especificações
para o controle de seqüenciamento e comportamento da navegação durante o
processo de aprendizagem, utilizando o material de ensino existente num pacote
de conteúdo.
3.1 Pacote de Conteúdo
O conjunto de recursos necessários para um curso ou treinamento é agrupado num
pacote   denominado   Content   Package                                                        (Pacote   de   conteúdo),   que   deve   ser
disponibilizado em repositórios de conteúdo na Web, de onde é distribuído para os
usuários dos SGAs.
Segundo o livro CAM  [8], um pacote de conteúdo deve conter os elementos
necessários para um curso, uma lição, um módulo ou simplesmente uma coleção de
recursos de ensino e um texto utilizando a sintaxe XML denominado Manifest, em que
se descreve o conteúdo do pacote.
O Manifest é um texto escrito segundo a sintaxe XML com a especificação do
conteúdo do pacote, constituído dos seguintes elementos:
Metadados (metadata): O seu propósito é estabelecer uma nomenclatura comum
para  que  os  recursos  de  aprendizagem  possam  ser  descritos  de  uma  única
maneira, não importando a sua origem. Podem ser obtidos em catálogos ou estar
contidos no pacote em que se encontram os recursos descritos por eles.
Árvore de Atividades (organizations): é a descrição da organização do conteúdo
a  ensinar,  na  forma  de  estrutura  hierárquica.  Nessa  estrutura,  cada  item  é
vinculado a outro item de nível superior até chegar ao item principal que é a raiz
da  árvore.  Uma  sessão  de  aprendizagem  é  conduzida  pelo  SGA  segundo  o
XX Simpósio Brasileiro de Informática na Educação (2009)




conteúdo   descrito   na   Árvore   de   Atividades   conforme   as   regras   de
seqüenciamento e comportamentos de navegação. Tais regras determinam se um
item pode ser abordado livremente pelo estudante ou se o estudante deve seguir
uma seqüência pré-determinada ou   percorrer a árvore no sentido hierárquico.
Recursos  (resources):  é  a  relação  dos recursos disponibilizados para uso do
estudante  no  desenvolvimento  das  suas  atividades  de  aprendizagem  -  SCOs
(Sharable Content Object) e   Assets. Um SCO é uma coleção de um ou mais
recursos, que pode se comunicar com um SGA.   Asset é qualquer tipo de recurso
localizável através da indicação da sua URL (Uniform Resource Locator)   que
pode ser exibido em um browser.
Submanifestos: são descrições de partes do conteúdo do pacote. O Manifest
sempre descreve todo o pacote. O uso de submanifestos é opcional e visa ao
melhor detalhamento de uma parte do pacote.
3.2 Ambiente de Execução
Segundo  o  capítulo                                                                     2  do  livro  RTE                                                                   [9],  um  ambiente  de  execução   (Run-Time
                                                                                         Environment-RTE)   em   conformidade   com   o   SCORM   envolve   os   seguintes
componentes:
SGA (Learning Management System-LMS);
Objetos de Conteúdo Compartilhável (Sharable Content Object-SCO);
Outros recursos de ensino (Assets).
3.3 Sequenciamento e Navegação
As regras para sequenciamento e navegação estão descritas no livro S&N  [10] que
define os seguintes conceitos:
Atividade de aprendizagem: é algo que o estudante deve fazer para progredir no
processo de aprendizagem valendo-se de um recurso de aprendizagem (SCO ou
Asset) ou de um conjunto de diversas atividades de aprendizagem secundárias.
Tentativa de aprendizagem: define-se tentativa de aprendizagem como o esforço
para  terminar  uma  atividade,  durante  o  qual,  zero  ou  mais  objetivos  de
aprendizagem podem ser satisfeitos.
Árvore de Atividades: representa a organização das atividades de aprendizagem,
na  forma  hierárquica,  onde  cada  nó  pode  conter  uma  atividade,  neste  caso,
atividade folha, ou ser também o nó pai de um conjunto de atividades
Cluster: um conjunto de atividades constituído de uma atividade-pai e os seus
filhos imediatos, mas não os descendentes dos seus filhos.
Uma sessão de seqüenciamento é o tempo decorrido do início de uma tentativa
de aprendizagem na atividade da raiz de uma Árvore de Atividades até o término dessa
tentativa.  A  interação  do  estudante  com  a  Árvore  de  Atividades  determina  um
comportamento de seqüenciamento cujo controle pode ser feito pelos desenvolvedores
de conteúdo mediante três modelos descritos em [10].
XX Simpósio Brasileiro de Informática na Educação (2009)




4. Proposta de Personalização de Conteúdos
As especificações do SCORM para o seqüenciamento das atividades de aprendizagem e
para a navegação do estudante não consideram as preferências e características de um
estudante em particular. Além disso, o modelo de dados que inclui informações sobre
algumas preferências do estudante, acompanhamento do processo de aprendizagem e
cumprimento de objetivos demonstra-ser insuficiente para a representação do modelo do
estudante.
Portanto,  nas  especificações  do  padrão  SCORM,  não  há  definição  completa
sobre a maneira como deve ser feita a personalização do ensino. Os trabalhos de Arias et
al. [16] e Srimathi e Srivatsa [17] apontam algumas propostas para a personalização do
ensino segundo o SCORM: No entanto, nessas propostas são necessárias   promover
alterações nas especificações do padrão, na arquitetura do SGA ou no uso de recursos
adicionais, não especificados no SCORM, o que termina por conflitar com o princípio
da interoperabilidade.
Propõe-se então nesse trabalho, especificar uma arquitetura para personalizar o
ensino em ambientes em conformidade com o padrão SCORM, mantendo o princípio da
interoperabilidade. Para atingir o objetivo de apresentação do conteúdo de aprendizagem
mais adequado ao estudante em determinada sessão de aprendizagem, é necessário que
as informações sobre o perfil de aprendizagem do estudante e sobre os estereótipos para
a seleção do conteúdo que mais lhe seja apropriado estejam disponíveis nesse momento.
Entre as diversas formas conhecidas para a persistência de informações que
permitem  a  sua  recuperação  e  uso  em  ambiente  web,  onde  atuam  os  SGAs  em
conformidade com o SCORM, os documentos com representação empregando a sintaxe
XML apresentam indiscutível compatibilidade com todos os SGAs, garantindo assim a
interoperabilidade da solução. Por outro lado, a linguagem ECMAScript é citada na
especificação SCORM como linguagem- padrão para a construção   de programas e o
seu uso também garante a interoperabilidade da solução. Por essas razões, adotaram-se o
XML como linguagem para a representação de dados e a linguagem ECMAScript como
linguagem para a construção das funções necessárias para a personalização do ensino.
As informações sobre o conteúdo de aprendizagem fazem parte do curso e,
portanto, podem ser incluídas no pacote de conteúdo utilizado para a distribuição do
curso,  mas  as  informações  sobre  as  características  do  estudante  são  coletadas  no
ambiente do estudante, onde devem estar localizadas. Assim, optou-se por reunir as
informações que compõem o perfil do estudante em um documento XML (Perfil do
Estudante) representando-as segundo uma estrutura DOM (Document Object Model) e
disponibilizando-as  no  lado  do  servidor.  As  informações  sobre  o  conteúdo  mais
apropriado para cada perfil de estudante  (estereótipos) são reunidas num documento
XML (Roteiro), também com representação em estrutura DOM, disponível no ambiente
do curso como parte do pacote de conteúdo conforme Figura 1.
A personalização é feita pela correspondência entre o conteúdo do documento
Perfil do Estudante e o documento Roteiro no qual se encontram os estereótipos para a
seleção do recurso a ser disponibilizado para o estudante. A seleção será feita por meio
de uma função desenvolvida em ECMAScript, ativada no contexto do SCO que controla
a atividade de aprendizagem   em uso pelo estudante.
XX Simpósio Brasileiro de Informática na Educação (2009)




Figura 1: Ambiente de ensino adaptado à proposta
A seguir serão definidos os modelos de dados para representação do modelo do
estudante e do roteiro de personalização.
4.1 Representação do Modelo do Estudante
Entre  as  diversas  opções  de  modelagem  do  estudante,  optou-se  pelas  propostas  de
Rosatelli et al.  [14] e Stiubiener  [15] que propõem    a modelagem do estudante em
camadas de orientação configuráveis pelo elaborador do conteúdo, isto é, considerando
os aspectos relevantes do PDA do estudante para esse conteúdo.
Nesse contexto, o elaborador de conteúdo poderá configurar o perfil em camadas
diferentes  para  cada  atividade  de  aprendizagem.  Assim,  por  exemplo,  em  algumas
atividades, o estudante pode apresentar maior facilidade de entendimento se o conteúdo
for apresentado na forma teórica e, em outras, se for apresentado na forma de exercícios
práticos. Por outro lado, a forma de representação hierárquica em que cada camada
apresenta um perfil a ela ligado, permite adaptar esse perfil ao formato XML DOM, o
que dá ao sistema a versatilidade e a interoperabilidade desejadas.
A transposição do perfil do estudante em camadas para a forma de documento
XML DOM é feita por meio de representação na forma de árvore hierárquica cuja raiz é
o documento que representa o estudante, ramificada em cursos, atividades e camadas de
orientação: os atributos são o nome da camada e o valor que representa o perfil do
estudante nessa camada para a execução da atividade.
Seja, por exemplo, um estudante identificado pela inscrição E01, matriculado em
dois cursos, Matemática e Português, cujo perfil é apresentado na figura 2.
No curso de Matemática, são disponibilizadas as atividades de estudo de Álgebra
e de Geometria e no curso de Português as atividades de Gramática e de Redação. Para a
atividade  de  Álgebra,  é  prevista  apenas  uma  camada  de  perfil  de  estudantes:  a
experiência,  que  poderá  ter  os  valores  pouca/  muita.  No  caso  de  Geometria,  são
previstas duas camadas: a abordagem, que poderá ter os valores teórica/prática” e a
experiência, com os valores pouca/muita. No caso do curso de Português, são previstas
para ambas as atividades do curso duas camadas de perfil de estudante: a nacionalidade
(brasileiro/estrangeiro) e a preferência por mídia (auditiva/visual).
Para  que  seja  possível  a  personalização  do  ensino,  é  necessário  haver  uma
correspondência entre o perfil de um estudante e o conteúdo de aprendizagem a ser
XX Simpósio Brasileiro de Informática na Educação (2009)




disponibilizado para esse estudante, durante a atividade de aprendizagem. Na próxima
secção, é definido o formato do roteiro de personalização do conteúdo de aprendizagem
a ser disponibilizado para um estudante.
Figura 2: Perfil de Aprendizagem de um estudante
4.2   Representação do Roteiro de Personalização
No roteiro de personalização do conteúdo a ser apresentado ao estudante, deverão estar
representados todos os estereótipos possíveis contendo todas as opções de roteiros de
aprendizagem para todos os perfis de estudante em todas as camadas, para as atividades
em cada curso. Por estar ele agregado a um curso, a criação e manutenção do conteúdo
do roteiro de aprendizagem deverão ser feitas também pelo desenvolvedor de conteúdo
do curso e, para manter o princípio da interoperabilidade, deverá estar contido em
documento  no  formato  XML DOM,  na  forma de árvore hierárquica, cuja raiz  é o
documento  que  representa  um  curso,  ramificado  em  atividades,  perfis,  camadas  e
recursos referentes aos perfis.
No exemplo apresentado na seção   4.1, a personalização para qualquer tipo de
estudante  inscrito  nos  cursos  mencionados  somente  será  possível  se  o  roteiro  de
personalização considerar todas as possibilidades descritas. Para isso, será necessário
criar um roteiro para o curso de Matemática e outro para o curso de Português. O roteiro
de um curso de Matemática que contem contém duas atividades de aprendizagem-
Álgebra e Geometria é mostrado na figura 3.
Figura 3: Roteiro de Personalização para o curso de Matemática (XML Parcial)
XX Simpósio Brasileiro de Informática na Educação (2009)




4.3 Teste da Proposta de Personalização
Para testar a proposta, preparou-se um curso com diversas alternativas de abordagem do
conteúdo, gerando um pacote de conteúdo para distribuição, em conformidade com o
SCORM.   Entre os Sistemas de Gerenciamento de Aprendizagem em conformidade com
o  SCORM  para  a  aplicação  do  curso,  optou-se  pelo  Moodle  [18],  devido  à  sua
disponibilidade gratuita e alta taxa de aceitação em ambientes de educação à distância.
Para o teste, gerou-se um pacote de conteúdo para distribuição, denominado
computacao.zip, abrangendo duas atividades (Algoritmos e Linguagem C) constituído
de elementos como:
Páginas  em  HTML,  do  tipo  SCO,  contendo  um  programa  escrito  em
ECMAScript para localizar o recurso a ser disponibilizado para o estudante
conforme o seu perfil em cada atividade e
Recursos: arquivos referentes aos recursos a serem empregados na execução das
atividades (por exemplo, slides, documentos, etc).
Criou-se também o arquivo  “Computacao.xml” contendo os diversos roteiros
para a personalização do ensino, que foi carregado como atividade de um curso no
ambiente  Moodle.  Por  exemplo,  os  estudantes  com  o  perfil  de  pouca  experiência
receberiam  material  didático  para  o  aprendizado  de  Noções  de  Algoritmos  e  os
estudantes com perfil de muita experiência receberiam material para o aprendizado de
Português Estruturado.
Na execução do teste no Moodle, logou-se a cada momento com um usuário
distinto, dentre os oito perfis distintos criados. Constatou-se que os recursos foram
apresentados corretamente de acordo com o perfil de cada estudante.
5. Conclusões e Trabalhos Futuros
Este trabalho apresentou uma proposta que, atendendo às especificações do SCORM,
permite:                                                                                     (a)  a  representação  do  modelo  do  estudante  segundo  a  modelagem  por
estereótipos,  em  camadas  de  orientação;                                                  (b)  A  representação  do  roteiro  de
personalização (PAP) por estereótipo e sua inclusão em pacote SCORM.
Testes  iniciais  no  Moodle,  que  possui  conformidade  com  o  SCORM,
comprovaram  a  viabilidade  de  aplicação  permitindo  adaptar  o  ensino  ao  perfil  do
estudante, em uma ou mais camadas.
Como  trabalhos  futuros  pretende-se  experimentar  a  proposta  em  cenários
educacionais  mais  realistas,  além  do  desenvolvimento  de  uma  solução  para  a
modelagem  do  estudante  no  padrão  SCORM  que  produza  e  atualize  o  perfil  do
estudante no formato proposto neste trabalho.
Referências
[1]  ___. Universidade Aberta do Brasil. Disponível. em http://www.uab.capes.gov.br/.
Acesso em 15 de Maio de 2009.
[2] URRETAVIZCAYA, M. Sistemas Inteligentes en el Ámbito de la Educación. In:
Revista Iberoamericana de Inteligencia Artificial, Nº 12,   p.5-12, 2001.
XX Simpósio Brasileiro de Informática na Educação (2009)




[3] AICC. Disponível em: < http://www.aicc.org>. Acesso em: 15 de Maio de 2009.
[4] IEEE Learning Technology Standards Committee  (LTSC). IEEE 1484.12.1-2002,
Draft   Standard   for   Learning   Object   Metadata,                                       2002.   Disponível   em:                                        <
http://ltsc.ieee.org/wg12/files/LOM_1484_12_1_v1_Final_Draft.pdf>.  Acesso  em:
8 de novembro de 2008.
[5] IMS                                                                                      Global                                                          Learning                                                                       Consortium,                                   Inc.                             Disponível                   em:
                                                                                             <http://www.imsglobal.org>. Acesso em: 8 de novembro de 2008.
[6] ARIADNE.  Disponível  em:                                                                                                                                                                                                               <http://www.ariadne-eu.org>.  Acesso  em:                                                                   8  de
novembro de 2008.
                                                                                                                                                             [7] ADVANCED DISTRIBUTED LEARNING.   SCORM 2004 3rd Edition. Overview,
2006a.  Disponível  em:                                                                                                                                                                                                                     <http://www.adlnet.gov/scorm>.  Acesso  em:                                                                 08  de
novembro de 2008.
                                                                                                                                                             [8] ADVANCED DISTRIBUTED LEARNING. SCORM  2004  3rd Edition. Content
Aggregation  Model,                                                                                                                                          2006b.  Disponível  em:                                                                                                      <http://www.adlnet.gov/scorm>.
Acesso em: 08 de novembro de 2008.
                                                                                                                                                             [9] ADVANCED DISTRIBUTED LEARNING. SCORM 2004 3rd Edition. Run-Time
                                                                                                                                                             Environment, 2006c. Disponível em: <http://www.adlnet.gov/scorm>. Acesso em:
08 de novembro de 2008.
                                                                                             [10]    ADVANCED  DISTRIBUTED  LEARNING.  SCORM                                                                                                                                                                               2004         3rd  Edition.
Sequencing                                                                                   and                                                             Navigation,                                                                                                                  2006d.                           Disponível                   em:
<http://www.adlnet.gov/scorm>. Acesso em: 08 de novembro de 2008.
[11]    HOLT, P. et al. The State of Student Modelling. In: Jim E. Greer,   Gordon I.
McCalla  (Ed.), Student Modeling: The Key to Individualized Knowledge-Based
Instruction. Springer-Verlag, Berlin, Germany, 1994.
[12]    SELF, J.A. Students Models: What Use Are They?  Centre for Research on
Computers and Learning. University of Lancaster, 1988.
[13]    RICH,  E.  Users  are  individuals:  individualizing  user  models.  International
Journal of Man-Machine Studies 18, p.199-214,1983.
[14]    ROSATELLI,  M.C.;  RUGGIERO,  W.V;  STIUBIENER,  I.  An  Approach  to
Personalization in E-learning.   Seventh IEEE International Conference on Advanced
Learning Technologies, p.189-193,   2007.
[15]    STIUBIENER, I. Arquitetura e Organização de um Sistema para Personalização
e Adaptação de Atividades no Aprendizado Eletrônico. Tese (Doutorado) - Escola
Politécnica da Universidade de São Paulo, 2005.
[16]    ARIAS,  J.J.P.  et  al.  Extending  SCORM  to  Create  Adaptive  Courses  In:
Innovative Approaches for Learning and Knowledge Sharing, p.679-684. Springer
Berlin, 2006.
[17]    SRIMATHI, H.; SRIVATSA, S.K. Knowledge Representation in Personalized
ELearning. Academic Open Internet Journal, ISSN 1311-4360, Volume 23, 2008.
[18]    MOODLE, version 1.9 (2007). Disponível em: <http://moodle.org>. Acesso em:
8 de novembro de 2008.
XX Simpósio Brasileiro de Informática na Educação (2009)





