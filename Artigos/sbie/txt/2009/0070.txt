UM AMBIENTE INTERATIVO PARA APRENDIZAGEM EM
FRAÇÃO
Rosemeire Lima Secco1
1 Professor(a) Assistente da Universidade Federal Rural de Pernambuco (UFRPE)
Serra Talhada - Pernambuco - PE - Brasil
rosemeirelima@yahoo.com.br
RESUMO:
O  presente  artigo  apresenta  um  Ambiente  Interativo  de  Aprendizagem  no
Domínio  de  Fração,  oferecendo  ferramentas  ao  estudante  e  ao  professor.  Para  o
estudante  o  ambiente  fornece  agentes  de  software  que  implementam  de  forma
distribuída um resolvedor de problemas e um avaliador de soluções, permitindo tanto
avaliar a solução proposta pelo estudante, quanto resolver problemas colocados pelo
estudante,  além  de  oferecer  suporte  pedagógico  durante  o  processo  de  solução  de
problemas. Já o professor possui suporte na construção de ambientes específicos, tendo
a  sua  disposição  ferramentas  para  definir  um  espaço  de  problemas  ou  aceitar  os
problemas  já  contidos  no  ambiente..O  sistema  faz  uso  de  algumas  funcionalidades
comuns aos STI’s clássicos, tendo sido implementado usando a tecnologia Java.   Foi
realizado um experimento com o protótipo desenvolvido e os primeiros resultados dão
indícios  quanto  à  qualidade  pedagógica  do  ambiente  proposto,  assim  como  a  sua
aceitação pelos estudantes.
ABSTRACT:
This  work  proposes  an  Interactive  Learning  Environment  oriented  to  the
Fraction  domain.  If  offers  support  to  both  student  and  teacher.  To  student  the
environment have software agents that it   implements an solution of problem and an
appraiser of solutions, evaluating answer of student and   solutions problem considered
for student, over there have pedagogical support during resolution of problems.   The
teachers have support in the environment construction, across tools to make the news
problems  and  accept  the  problems  of  the  environment.The  system  use  some
functionalities  common  of  classic  STI,  having  been  implemented  using  the  Java
technology. The experiment of the environment indicates its pedagogical quality, as well
as its acceptance for the students.
PALAVRAS-CHAVE:  INFORMÁTICA  NA  EDUCAÇÃO,  AMBIENTES  INTERATIVOS  DE  APRENDIZAGEM,
FRAÇÃO, APRENDIZAGEM DE FRAÇÃO.
1. INTRODUÇÃO
A educação é um dos setores que tem se beneficiado bastante com os avanços da
Tecnologia da Informação e Comunicação - TICs.
Na   tentativa   de   contribuir   para   facilitar   tais   modalidades   educativas,
particularmente tem sido construídos ambientes computacionais de apoio ao ensino e
aprendizagem, são os chamados Ambientes Computacionais de Aprendizagem - ACA’s,
que  observam aspectos  como  educação,  aprendizagem e  ensino  (Gonçalves,  2004).
Entretanto, para o presente trabalho interessa a categoria do Sistema Tutor Inteligente-
STI (Wenger, 1987).
Os Sistemas Tutores Inteligentes surgiram na década de 70, do século XX, com a
proposta de oferecer mecanismos de instrução personalizada no ensino. Para tanto,
técnicas  de  Inteligência Artificial  têm  sido  empregadas,  objetivando  principalmente
representação de conhecimento sobre o domínio a ser ensinado, sobre o aprendiz e
sobre estratégias pedagógicas. Neste sentido, o STI passou a ser constituído por três
XX Simpósio Brasileiro de Informática na Educação (2009)




componentes  fundamentais:  módulo  do  aprendiz,  módulo  pedagógico  e  módulo  do
especialista.
O módulo do aprendiz contém as informações específicas de cada aprendiz, ou
seja, do aluno, estudante; o módulo pedagógico contempla as estratégias pedagógicas
apropriadas  a  serem  utilizadas,  e  finalmente,  o  módulo  especialista  que  possui
conhecimento representado sobre o domínio e as informações referentes ao conteúdo
abordado a serem utilizadas no processo de aprendizagem dos alunos.
O  presente  artigo  propõe  a  elaboração  de  um  Ambiente  Interativo  de
Aprendizagem no domínio de fração.
2. O AMBIENTE DE APRENDIZAGEM EM FRAÇÃO
Para  contribuir  na  elaboração  de  instrumentos  a  serem  empregados  no  apoio  à
aprendizagem no domínio da Matemática em suas séries iniciais do ensino fundamental,
buscando suprir carência existente em softwares com propósitos similares, propõe-se
neste trabalho um ambiente interativo de aprendizagem no domínio de Fração.
A. Requisitos do Ambiente
Para a concepção do ambiente, foi considerada a seguinte lista de requisitos:
I.Suporte ao aprendiz:
1.                                                                                         Suporte a duas formas de representação do domínio: representação algébrica e
numérica de fração para facilitar a aprendizagem;
2.                                                                                         PBL: uma sigla inglesa para Problem-based learning. A aprendizagem baseada
em  problemas  (Burch,  1995)  e  (Soares,  2001)  é  aqui  requerida  como  uma
proposta pedagógica para contribuir na aprendizagem de fração, uma vez que na
PBL segundo (Silver e Barrouws, 2006) o aluno não aprende simplesmente a
resolver problemas, mas sim a refletir sobre suas experiências;
3.                                                                                         Mecanismos para resolução de problemas nas duas direções: do aprendiz para o
tutor e vice-versa;
4.                                                                                         Explicação:  exibição  do  passo  a  passo  da  solução  do  problema,  além  de
proporcionar  o  diagnóstico  e  a  detecção  de  erros,  ao  serem  mostrados  ao
aprendiz oferece um mecanismo de explicação para a solução do problema;
5.                                                                                         Avaliação: será avaliada a resposta do aprendiz através da divisão do problema
em passos, uma avaliação pode ser feita. O aprendiz será avaliado através de
conceitos, dados de acordo com a quantidade e o estilo de problema acertado.
Além disso, o sistema armazena informações referentes ao desenvolvimento do
aprendiz como problemas resolvidos e conteúdos assimilados, além de ajuda(s)
solicitada (s) durante a resolução de problemas;
6.                                                                                         Diagnóstico e tratamento de erro: um mecanismo para tratamento de erro é
acionado para tratar algum erro detectado na fase de avaliação/diagnóstico. O
tratamento de erro ocorre uma vez que o ambiente divide a solução do problema
em passos, mostrando ao aprendiz seu erro. Além disso, para facilitar o processo
de  tratamento  de erro,  há  disponível  no  sistema  um Catálogo  de Bugs  que
contém uma lista de erros comuns cometidos pelos aprendizes;
7.                                                                                         Feedback ao estudantedurante o processo de resolução de problemas: suporte
realizado através de dicas e exemplos: no processo de resolução de problemas, o
aprendiz conta com um suporte através de dica, conhecimento necessário para a
resolução do problema e exemplos.
II.Suporte na autoria:
O  autor  dos  ambientes  possui  suporte  formado  por  problemas  contidos  no
ambiente, ou seja, problemas existentes no sistema com os quais o professor/autor, caso
julgue necessário, poderá compor seus ambientes ou ainda criar novos problemas para
os ambientes. Para o presente artigo, será observado aspectos de suporte ao aprendiz.
XX Simpósio Brasileiro de Informática na Educação (2009)




B. Estrutura do Ambiente
O ambiente proposto segue os moldes do MATHEMA. Dessa forma, o domínio
de fração foi mapeado em duas visões ou formas, visando aproximar o abstrato do
concreto, visão algébrica e gráfica (figura 1).
1.  Visão  algébrica:  utilizada  pelo  ambiente  na  solução  de  problemas  e  nas
explicações sobre os conteúdos, e pelo aprendiz na resolução de problemas;
2.  Visão gráfica: abordada apenas pelo ambiente na explicação do assunto ou no
enunciado de problemas.
Figura 1: Organização do domínio de fração.
Cada uma dessas visões pode ser tratada de forma numérica ou usando variável.
Tem-se então o domínio (fração), composto de dois contextos (fração algébrica e fração
gráfica)  subdivididos  em  profundidade  (fração  algébrica  numérica,  fração  algébrica
variável, fração gráfica numérica e fração gráfica variável), isso gerando um conjunto
de visões. Entretanto, desenvolveu-se aqui, neste trabalho, apenas uma visão particular,
a qual foi associada ao currículo Fração Algébrica Numérica, seguindo o ramo ilustrado
na figura 1.
A junção domínio, contexto e profundidade mostrados na figura  1 origina os
currículo, figura 2. Por exemplo, com o currículo Fração Algébrica Numérica pode-se
trabalhar  com  os  currículos  soma,  subtração,  multiplicação  e  divisão.  Para  cada
currículo podemos ter várias unidades pedagógicas, como observado na figura 2. E cada
unidade pedagógica pode ter subunidades pedagógicas.
Figura 2: Organização dos currículos e unidades pedagógicas.
C. Visão Geral do Ambiente
O ambiente contém um resolvedor de problemas capaz de solucionar problemas
propostos pelo aprendiz e um sistema avaliador que avalia a resposta apresentada pelo
aprendiz  para  um  determinado  problema.  A  figura                                        3  representa  a  visão  geral  do
ambiente.
Figura 3: Visão geral do ambiente.
D. Arquitetura do Ambiente
A arquitetura apresentada na figura 4 representa uma visão dos componentes do
ambiente. Na arquitetura, pode ser destacada, além dos módulos contidos em um STI
XX Simpósio Brasileiro de Informática na Educação (2009)




clássico, a presença de bancos de dados para informações sobre os problemas e os
usuários do ambiente.
Figura 4: Arquitetura geral do ambiente.
Os  módulos  do  estudante  e  pedagógico  buscam  informações  dos  usuários
(aprendiz  e  professor)  no  banco  de  usuários,  enquanto  as  informações  sobre  os
problemas  estão  no  banco  de  problemas,  e  pode  ser  utilizada  nos  módulos  do
pedagógico e do domínio.
Módulo do domínio contém:
   Catálogo  de  bugs:  refere-se  a  um  conjunto  de  erros  comuns  para  um
determinado domínio;
   Problemas:  exemplos  de  problemas  contidos  no  banco  para  uma  unidade
pedagógica, na qual o autor, ao criar um ambiente, poderá aceitar os problemas
contidos e/ou acrescentar novos problemas;
   Ajuda: poderá ser fornecida quando o aprendiz solicitar sob a forma de dica,
explicação e exemplos;
   Resolvedor de problemas: soluciona problemas propostos pelo aprendiz;
    Avaliador de problemas: acompanha o processo de solução de um problema
pelo aprendiz, avaliado e apontando onde ocorreu erro (figura 5).
Figura 5: Módulo do domínio.
A organização estrutural do ambiente, bem como suas características nos leva a
crer  que  essa  estrutura,  com  poucas  modificações,  pode  ser  utilizada  para  outros
domínios que não seja necessariamente fração e suas operações.
E. Aprendizagem
A aprendizagem é feita através de resolução de problemas. Estes são divididos
em três grupos de acordo com o nível de dificuldade, partindo do fácil, indo para o
intermediário  e  finalizando  com  o  difícil.  Cada  unidade  pedagógica  contempla
problemas de diferentes níveis (figura 6).
Figura 6: Níveis de dificuldade dos problemas contidos nas unidades pedagógicas.
XX Simpósio Brasileiro de Informática na Educação (2009)




Para  avançar  nas  unidades  pedagógicas  o  aprendiz  deve  resolver  uma
determinada quantidade de problemas dos três níveis.
Em relação a implementação do ambiente, será enfatizada aqui a implementação
do resolvedor de problemas, realizada utilizando a plataforma Java.
F. Resolvedor de Problemas
O Sistema Resolvedor de Problema utiliza regras de produção, sendo formado
por três componentes básicos equivalentes aos componentes de um sistema especialista,
são eles:
1.  Base  de  Conhecimento:  contém  um  conjunto  de  regras  de  produção  ou
mecanismos para a resolução de problemas;
2.                                                                                      Motor  de  inferência:  possui  regras   (do  tipo  if  them)  para  a  resolução  dos
problemas, via passos.O motor de inferência para o resolvedor de problemas e
para a explicação do sistema, ao aprendiz, é usado RBR e encadeamento para
frente. Para melhor entendimento do funcionamento do mesmo  vale  a pena
salientar o seguinte:
   As regras são colocadas em forma de árvore;
    As regras são do tipo if then, como pode ser observado no exemplo abaixo
(figura 7) onde são observadas as regras encontradas no motor de inferência:
Figura 7: Exemplo da base de regras.
Para melhor entendimento a cerca do algoritmo de inferência, será utilizadas
regras hipotéticas, que não estão contidas no sistema e foram aqui usadas apenas para
facilitar o entendimento, as regras usadas são as contidas na figura 8.
Figura 8: Regras imaginárias aceitas pelo motor de inferência.
Observando as regras acima, a árvore apresenta-se da forma especificado na
figura 9 a seguir:
XX Simpósio Brasileiro de Informática na Educação (2009)




Figura 9: Árvore de derivação para regras do motor de inferência.
3.  Gerador  de  explicação:  explica  a  resolução  do  problema  em  passos  que
constituem seqüencialmente a solução.
O resultado da resolução de um problema através do resolvedor de problemas
pode ser observado na figura 10 que mostra a tela do ambiente para a resolução de
problemas sugeridos pelo aprendiz para a solução do ambiente.
Figura 10: Tela do ambiente mostrando o resolvedor de problemas.
O  algoritmo  de  inferência  usa  encadeamento  para  frente  e  busca  em
profundidade.
O módulo de explicação consiste, tal como ocorre em um Sistema Especialista,
de um rastreamento e exibição da solução dada ao problema.
G. Ferramentas de Implementação
As ferramentas utilizadas para a implementação do ambiente foram as seguintes:
   JADE: Java Agent DEvelopment Framework é uma ferramenta Java para o
desenvolvimento de sistemas multi agentes;
   JSF: Java Sever Faces, ferramenta Java para desenvolvimento de aplicações
Web, usa a linguagem HTML;
   Hibernate: banco de dados orientado a objetos voltado para aplicações com Java.
I. Agentes do Ambiente
O ambiente é formado por uma sociedade dividida em três grupos de agentes,
contidos no módulo do domínio, são eles:
   Agentes responsáveis pela realização das operações (no caso operação de soma,
subtração, multiplicação, potenciação, e simplificação, já a divisão é feita pelo
agente da multiplicação, pois são operações inversas);
   Agentes  responsáveis  pela  avaliação  ou  resolução  dos  problemas  propostos
pelos aprendizes;
   Agentes  responsáveis  por  coordenar  a  sociedade  de  agentes.Tais  agentes  se
comunicam entre si como observado na figura 11.
Figura 11: Modelo de comunicação dos agentes.
XX Simpósio Brasileiro de Informática na Educação (2009)




Os  agentes  responsáveis  pelas  operações  de  soma,  subtração,  multiplicação,
exponenciação, além da operação de simplificação. Os agentes formadores desse grupo
são os seguintes:
   Agente Adição: entidade responsável pela operação de adição
   Agente Multiplicação: entidade responsável pela operação de multiplicação;
   Agente Subtração: entidade responsável pela operação de subtração;
   Agente Exponenciação: entidade responsável pela operação de exponenciação
dos problemas solicitados pelos aprendizes:
   Agente Simplificação: entidade responsável pela simplificação de um resultado
obtido em alguma operação realizada pelos agentes acima citados.
A  divisão  é  realizada  pelo  agente  responsável  pela  multiplicação                  (agente
multiplicação) como operação inversa da multiplicação.
II. Resolução de problemas e avaliação da resposta do aprendiz
Quando  o  aprendiz  resolve  um  determinado  problema,  o  agente  avaliador
também resolve o mesmo problema dividindo-o em uma seqüência de passos que são
operações matemáticas de soma, subtração, multiplicação, divisão e potência. Em cada
passo, o agente citado confere seu resultado com o resultado encontrado pelo aprendiz.
O agente coordenador é responsável pela organização e coordenação do agente
avaliador  e  da  sociedade  de  agentes,  formada  pelos  agentes  responsáveis  pelas
operações  de  soma  (agente  adição),  subtração                                         (agente  subtração),  multiplicação  e
divisão (agente multiplicação).
A máquina de inferência, ou motor de inferência, verifica qual a operação a ser
realizada e chama o agente por tal operação. Esse agente envia a resposta para o agente
coordenador que, por sua vez, manda a resposta ao agente avaliador. O agente avaliador
verifica sua resposta com a do aprendiz, observa qual é o próximo passo e chama o
agente coordenador e isso ocorre até que não tenha mais nenhum passo a ser realizado,
ou seja, o problema tenha sido resolvido.
Dessa forma, o sistema consegue mostrar onde o aprendiz errou, ou seja, em
qual passo (operação) está o erro.
A figura 12, a seguir, representa a comunicação e troca de informações entre os
agentes no processo de avaliação da resposta do aprendiz.
Figura 12: Ciclo de avaliação da resposta do aprendiz pelos agentes.
III. Interface do ambiente
A tela inicial do sistema é, basicamente, para o usuário, quer seja professor ou
aluno, entrar nos ambientes. Para tanto, tem-se espaço para digitação de login e senha
para usuários ou ainda opção de cadastro para novos usuários.Após se logar no sistema,
o aprendiz pode ler um conteúdo introdutório sobre fração ou ir diretamente resolver
problemas sobre operações com frações.
Para a resolução de problemas sugeridos pelo sistema, o aprendiz pode contar
com ajuda como conhecimento necessário, dica e exemplo, como observado na figura
13.
XX Simpósio Brasileiro de Informática na Educação (2009)




Figura 13: Telas do ambiente para a resolução de problemas.
Após resolver um problema, o aluno pode solicitar que o sistema avalie sua
resposta(figura 14).
Figura 14: Avaliação da resposta do aprendiz realizada pelo ambiente.
Na resolução de problemas sugeridos pelo aprendiz, o ambiente apresenta os
passos, ou seja, operações, realizados até a obtenção da resposta do mesmo (figura 15).
Figura 15: Tela mostrando o resolvedor de problemas do ambiente.
3. AVALIAÇÃO EMPÍRICA DO PROTÓTIPO
Para  avaliar  empiricamente  o  ambiente  proposto,  foi  realizada  uma  seção  de
experimento com alunos do quinto ano de uma escola municipal da cidade de Maceió-
Al e com dois professores da área. Tal experimento foi realizado no laboratório do
Instituto de Computação - IT na Universidade Federal de Alagoas - UFAL.
O experiment foi realizado   em duas etapas. Na primeira etapa foi realizado o
pré-teste com os estudantes  e  uma explicação sobre o sistema  como um todo. Na
segunda etapa foram realizados, além da interação dos estudantes com o sistema, o pós-
teste e os questionários. O pré-teste e o pós-teste serviram para avaliar o conhecimento
dos alunos antes e depois do uso do ambiente, respectivamente.
Como  ditto,  foram  utilizados  alguns  teste  e  questionários  respondidos  por
professores e aprendizes, foram eles:
XX Simpósio Brasileiro de Informática na Educação (2009)




   Questionários: respondidos por professores e aprendizes/estudantes após inter-
ação com o ambiente a fim de verificar aspectos com interface, avaliação do
aprendiz e conteúdo, para professores e interface, ajuda, avaliação, conteúdo e
facilidade na aprendizagem para aprendizes;
    Testes: respondidos pelo aprendiz antes (pré-teste) e após (pós-teste) sua inter-
ação com o ambiente a fim de verificar, além do conhecimento sobre fração do
aprendiz, a quantidade de acertos e o tempo de resolução dos problemas antes e
depois de usar o ambiente.
Os testes visão observar o conhecimento do aprendiz antes e depois de utilizar o
ambiente, observando se os erros cometidos pelo aprendiz continuam após sua interação
com o ambiente.
Analisando  as  respostas  dos  testes                                                      (pré-teste  e  pós-testes)  e  questionários
respondidos, foram elaborados alguns gráficos apresentados a seguir.
O pré-teste foi realizado antes dos estudantes utilizarem o sistema. Com ele pôde
se ter uma noção a cerca do conhecimento dos  26 estudantes que participaram do
experimento.
O resultado do pré-teste pode ser observado nos gráficos presentes na figura 16.
O primeiro gráfico, da esquerda, representa a quantidade de acertos para cada questão
do pré-teste, ou seja, quantos estudantes acertaram a primeira, segunda terceira e quarta
questões. O gráfico da direita mostra a quantidade de questões que os alunos acertaram,
onde pode ser observado que uma pequena quantidades de alunos, mais especificamente
1, acertou as quatros questões e que a maioria dos estudantes, 13 estudantes, acertaram
apenas uma questão
Quantidades de acertos para cada
questão do pré-teste
primeira
segunda
terceira
quarta
nenhuma
Figura 16: Quantidade de acertos dos alunos no pré-teste.
Com a análise e a observação da interação dos estudantes durante o experimento
pôde ser observado alguns aspectos, tais como:
1.  Os estudantes sentiram um pouco de dificuldade em interagir com o sistema,
devido à falta de conhecimento básico em informática. Diante desse fato, foi de-
tectada a necessidade de modificar um pouco a interface do sistema trocando
links por botões e acrescentando algumas animações feitas em flash. Foi obser-
vado também que os estudantes não conseguiram entender direito a explicação
fornecida pelo sistema em relação ao seu erro, isso pode ser melhorado de forma
simples, bastando acrescentar explicação nos passos;
2.  Os professores acharam o sistema como um todo bom, porém um pouco lento.
Gostaram do conteúdo apresentado. As questões do pré-teste e pós-teste também
foram elogiadas.
Após interação com o sistema, como dito anteriormente, os estudantes foram
submetidos a um pós-teste. A figura 17 a seguir apresenta o gráfico mostrando quantos
estudantes  acertaram  a  primeira,  segunda,  terceira,  quarta  e  nenhuma  questão  ou
problema do pós-teste. Se observar o gráfico correspondente para o pré-teste, pode-se
observar  um  pequeno  aumento  de  acertos,  isso  levando  em  consideração  que  ao
responder o pós-teste, os alunos estavam um pouco cansados uma vez que o pós-teste
foi realizado após o uso do sistema, enquanto o pré-teste eles responderam dois dias
XX Simpósio Brasileiro de Informática na Educação (2009)




antes de fazer a interação com o sistema, e, portanto, descansadas e ansiosos por usar o
sistema.  Dessa  foram,  o  pós-teste  foi  pouco  revelador  devido  a  tais  problemas
operacionais do experimento.
Quantidade de acertos para cada                                                                Quantidade de questões acertadas
quetão no pós-teste                                                                            pelos estudantes no pós-teste
primeira                                                                                       1 quetão
segunda                                                                                        2 questões
terceira                                                                                       3 questões
quarta                                                                                         4 questões
nenhuma                                                                                        nenhuma
Figura 17: Quantidade de acertos dos alunos no pós-teste.
4. CONSIDERAÇÕES FINAIS
A escolha pela tecnologia Java facilitou o processo de implementação do ambiente.
O  motor  de  inferência  utilizando  encadeamento  para  frente  e  busca  em
profundidade ficou simples e eficaz, além de poder ser empregado em outras aplicações.
A sociedade de agentes consegue responder, a contento, os problemas sem a
necessidade de um grande número de agentes.
As técnicas utilizadas para avaliação do protótipo mostraram-se satisfatórias e
serviram como bom mecanismo de avaliação, mostrando as vantagens, qualidades e
pontos falhos do ambiente. A interação com estudantes foi importante para a avaliação,
mas  a  opinião  dos  professores  possibilitou  a  descoberta  de  alguns  pontos  a  serem
melhorados no sistema como um todo.
Na primeira etapa do experimento, quando os estudantes responderam o pré-
teste e tiveram o primeiro contato com o sistema, pôde ser observado a ansiedade e o
entusiasmo dos alunos em interagir com o sistema, além do interesse dos estudantes
pelo conteúdo contido no sistema, sobretudo nas curiosidades sobre fração.
A  segunda  etapa  do  experimento  serviu  para  verificar  pontos  positivos  do
sistema e apontar algumas falhas em relação a interface e desempenho do mesmo.
5. REFERÊNCIAS
                                                                                               BURCH,  Kurt.  PBL and  the  Lively  Classroom. A Newsletter  of  the  Center  for
Teaching  Effectiveness.January  of                                                            1995,  about  teaching,  number                                                      47,  Homepage:
http://www.udel.edu/pbl/cte/jan95-posc.html.
GONÇALVES,  Jean  Piton.A Integração  de  Testes Adaptativos  Informatizados  e
Ambientes Computacionais de Tarefas para o aprendizado do inglês instrumental
Dissertação  de  Mestrado,  Instituto  de  Ciências  Matemáticas  e  de  Computação
ICMC/USP- São Carlos - SP, 2004.
SOARES,  Silvia  Mamede  Studart,  SERAPIONI,  Mauro  e  CAPRARA,  Andréa.  A
Aprendizagem Baseada em Problemas na Pós-Graduação - A Experiência do Curso
de Gestores de Sistemas Locais de Saúde no Ceará. Revista Brasileira de Educação
Médica.  Rio  de  Janeiro,  volume  25,  nº  1,  jan/abr  2001.  Homepage:http://www.abem-
educmed.org.br/rbem/pdf/volume_25_1/aprendizagem_baseada.pdf.
SILVER, Cindy E. Hmelo e BARROUWS, Howard S.  Goals and Strategies of a
Problem-based Learning Facilitator. The Interdisciplinary Journal of Problem-based
Learning, volume 1, number 1, spring in 2006.
WENGER, Etienne. Artificial Intelligence and Tutoring Systems. Morgan Kaufman,
1987.
XX Simpósio Brasileiro de Informática na Educação (2009)





