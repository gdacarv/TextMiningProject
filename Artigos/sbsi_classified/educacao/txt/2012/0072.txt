VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
Simple Way: Ensino e Aprendizagem de Engenharia de
Software Aplicada através de Ambiente e Projetos Reais
Nadja N. Rodrigues, Naylla V. A. Estrela
Instituto Federal de Educação, Ciência e Tecnologia da Paraíba (IFPB) - Campus
Cajazeiras - PB - Brasil
nadja.rodrigues@ifpb.edu.br,  nayllavestrela@gmail.com
Abstract.  Understanding  the  need  for  integration  between  academy  and
industry, this paper reports the use of a software development environment for
teaching  and  learning  applied  software  engineering.  The  methodology
associated to the study was based on the instantiation of real projects of a
junior company of Computer Science Area, run through this environment in
the  classroom.  The  environment  defined  roles  and  activities  for  the
development of projects, as well as templates, procedures and tools for each of
its stages. The main contributions of the use of the environment have been the
increasing in the project quality and the value added to the students through
the use of industry best practices.
Resumo. Entendendo a necessidade de integração entre academia e indústria,
este artigo relata a utilização de um ambiente de desenvolvimento de software
para  ensino  e  aprendizagem  de  engenharia  de  software  aplicada.  A
metodologia associada ao estudo baseou-se na instanciação de projetos reais
de  uma  empresa  júnior  da  Área  de  Ciência  da  Computação,  executados
através  deste  ambiente,  em  sala  de  aula.  O  ambiente  definiu  papéis  e
atividades  para  o  desenvolvimento  dos  projetos,  assim  como  templates,
procedimentos e ferramentas para cada uma de suas etapas. As principais
contribuições do uso do ambiente foram o aumento na qualidade dos projetos
e o valor agregado aos alunos, através do uso das boas práticas da indústria.
1. Introdução
Nos dias atuais, é crescente a busca por softwares cada vez mais sofisticados e que
produzam os reais resultados esperados, isto é, atendam ou superem as expectativas dos
seus stakeholders. Atender a essa demanda com qualidade e assim chegar ao sucesso de
um projeto são alguns dos desafios da área de engenharia de software.
Sommerville (2007) explica a engenharia de software como uma disciplina da
engenharia que se preocupa com todos os aspectos da produção de software, desde os
estágios iniciais de especificação do sistema até a sua manutenção, depois que ele entrou
em operação. A engenharia de software é responsável pelas práticas relacionadas ao
desenvolvimento de software, sendo formada por um conjunto de métodos, ferramentas
e processos para analisar, projetar e desenvolver softwares com qualidade e gerenciar os
projetos dentro dos prazos e custos estimados.
722




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
Assim  como  qualquer  processo  produtivo,  o  desenvolvimento  de  software
necessita de uma sistematização que defina os passos, as atividades que serão realizadas
e  a  dependência  entre  as  mesmas,  as  suas  entradas  e  saídas,  os  papéis  e  as
responsabilidades  de  cada  um  dos  atores  envolvidos  no  processo.  Para  este  fim,
surgiram os Processos de Desenvolvimento de Software (PDS).
Um PDS é um conjunto de atividades sistematizadas que geram um produto de
software, sendo considerado um dos principais mecanismos para se obter software de
qualidade  e  cumprir  corretamente  os  contratos  de  desenvolvimento.  Para  Pressman
(2006), em um PDS, o problema a ser tratado deve ser dividido em partes menores e,
para cada uma delas, uma análise será feita para a busca de soluções.
Quanto  à  classificação,  os  PDS  se dividem em processos prescritivos  (mais
burocráticos com relação ao desenvolvimento de software), e não prescritivos (menos
burocráticos, ágeis, tentam simplificar o processo de desenvolvimento). Teles (2006)
explica  que  o  termo                                                                       “desenvolvimento  tradicional”  refere-se  aos  projetos  que  se
baseiam  no  desenvolvimento  em  cascata,  sendo  o  sistema  construído  linearmente,
seguindo uma sequência de fases. Segundo Teles (2006), o “desenvolvimento ágil”, por
sua vez, faz referência ao desenvolvimento iterativo, sendo as fases propostas pelo
modelo em cascata repetidas diversas vezes durante o projeto.
Cada modelo de desenvolvimento tem suas características definidas conforme
com alguns cenários indicados para sua aplicação. As empresas que trabalham com
desenvolvimento de software devem desenvolver a visão crítica para entender que esses
modelos podem ser utilizados por completo, ou vistos como frameworks de referência
para definição dos seus próprios processos de desenvolvimento de software. A decisão
de usar, criar ou definir um PDS deve estar diretamente relacionada às características da
empresa                                                                                      (tipos  de  contrato,  por  exemplo),  das  suas  equipes  de  desenvolvimento
(tamanho da equipe, rotatividade, habilidades, entre outros aspectos), dos seus projetos
(tamanho  do  projeto,  entre  outros  aspectos)  e  dos  seus  clientes                     (exigência  de
documentação, disponibilidade para apoiar o desenvolvimento, por exemplo).
Entendendo a necessidade de aproximar academia e indústria, e assim despertar
a visão crítica dos alunos e prepará-los para a vida prática, apresenta-se uma proposta
para ensino de engenharia de software, baseada em um ambiente de desenvolvimento e
PDS definidos especificamente para uma empresa júnior que produz softwares.
O presente artigo encontra-se estruturado da seguinte forma: na segunda seção
são expostos alguns trabalhos relacionados; a terceira apresenta os principais aspectos
da metodologia proposta para ensino de engenharia de software aplicada; na quarta,
encontram-se  características  do  ambiente  e  do  PDS  utilizado;  a  quinta  relata  as
informações essenciais sobre o uso desta proposta em meio acadêmico; finalmente, a
sexta seção apresenta as considerações finais.
2. Trabalhos Relacionados
O ensino de engenharia de software, em ambientes de graduação, tem o objetivo de
apresentar aos alunos os diversos aspectos relacionados à construção de sistemas de
software, de forma prática. Assim sendo, quanto mais próxima a academia estiver da
indústria, mais real será esta experiência para os alunos.
723




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
Acredita-se na dificuldade de utilizar por completo, em ambiente acadêmico,
vários dos modelos utilizados na indústria, em virtude das particularidades e diferenças
entre esses dois tipos de ambientes. Por outro lado, é imprescindível que os alunos
façam uso das boas práticas no desenvolvimento de software e se preparem para o
mercado, de acordo com as expectativas das empresas de desenvolvimento.
O cuidado com estes aspectos relacionados ao ensino de engenharia de software
pode  ser  constatado  através  da  literatura  que  retrata,  dentre  outros,  a  criação  de
metodologias  de  ensino  e  PDS  próprios  para  o  desenvolvimento  de  projetos  em
ambientes  acadêmicos.  O  XP1  [XP1  2007],  por  exemplo,  descreve  um  PDS  que
pretende ser útil para alunos que estejam usando um processo de desenvolvimento pela
primeira vez, em ambiente universitário. O processo tem as seguintes características: é
baseado  nas  práticas  de  XP  [XP  2011],  mas foi idealizado para ser mais simples;
pretende abraçar as tarefas imprescindíveis em um processo de software.
Segundo Paiva et al (2004 apud Durscki et al, 2004), o   Processo de Produção de
Projetos  Computacionais  Acadêmicos  tem  como  objetivo  oferecer  um  processo  de
produção de sistemas integrados de software e hardware para o desenvolvimento de
projetos no ambiente acadêmico. O processo permite que seus usuários aumentem seus
conhecimentos  sobre  a  utilização  de  processos  e  obtenham  mais  controle  sobre  a
execução de seus projetos. Ademais, propõe a execução de atividades estruturadas e
sequenciadas,  fazendo  uso  de  modelos                                                         (templates)  e  diagramas  de  sequência
(workflows) definidos, além de apresentar também padrões de documentação.
O YP [YP 2011], por sua vez, é um PDS simplificado que se apóia em práticas
do XP, RUP [RUP 2011] e AM [AM 2011], contemplando especialmente os aspectos
essenciais de um processo ágil. Segundo Garcia et al (2004), o YP visa auxiliar tanto a
gerência do desenvolvimento de aplicações em disciplinas de engenharia de software
quanto a aprendizagem dos conceitos desta disciplina na graduação, podendo também
ser utilizado em projetos de pequeno e médio porte. Seguem algumas características do
YP: ênfase na gerência e na comunicação com o cliente, pontos fortes do processo; não
demanda uma grande quantidade de artefatos, apenas o suficiente para manter uma boa
gerência; diz apenas quais artefatos devem ser gerados e não como fazê-los, deixando a
equipe livre para utilizar a ferramenta que lhe for mais conveniente.
Conforme  Paiva  et  al                                                                          (2002,  apud  Paula  Filho,                            2004),  o  Processo  para
Aplicativos  Extensíveis  Interativos                                                            (Praxis)  é  destinado  a  dar  suporte  a  projetos
didáticos em disciplinas de engenharia de software de cursos de Informática. Algumas
características  do  Praxis:  foi  elaborado  para suportar  projetos  de  6  meses  a  1  ano
realizados  individualmente  ou  por  pequenas  equipes;  é  baseado  em  notações  de
orientação a objetos para análise, projeto e implementação.
O  UPEDU  [2011]  é  um  conjunto  das  melhores  práticas  de  engenharia  de
software, fornecendo orientação para agilizar o trabalho de equipes de desenvolvimento.
O UPEDU unifica a equipe e melhora a comunicação. Usando navegação online, cada
membro  da  equipe  tem  acesso  à  base  de  conhecimento  do  UPEDU,  bem  como
orientações  sobre  o  processo.  A  base  de  conhecimentos  identifica  e  atribui
responsabilidades, artefatos e tarefas aos membros, de forma que cada um deles possa
compreender a sua contribuição para o projeto. A seção de modelos dá acesso a todos os
724




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
modelos  de  artefatos  necessários  ao  processo  de  software.  A  seção  de  ferramentas
fornece uma visão das ferramentas selecionadas para as disciplinas do processo .
Observa-se que o uso de PDS específicos e adaptados aos cenários acadêmicos
está se tornando uma prática para ensino de engenharia de software. A expectativa em
torno  desta  estratégia  é  viabilizar  o  desenvolvimento  de  projetos de qualidade, em
ambientes acadêmicos, e agregar valor aos alunos, aproximando-os da indústria.
3. Academia e Empresa: Ensino e Aprendizagem de Engenharia de Software
Aplicada através de Ambiente e Projetos Reais
Considerando a necessidade de aproximar a academia e indústria, através do ensino e
aprendizagem  de  engenharia  de  software,  este  trabalho  pretende  apresentar  uma
metodologia desenvolvida para fundir o ensino de engenharia de software aplicada em
um Curso Superior de Tecnologia em Análise e Desenvolvimento de Sistemas, de uma
Instituição de Ensino Superior (IES), com a prática, na empresa júnior formada pelos
alunos deste curso, onde os principais produtos gerados são sistemas de software.
A metodologia considerou os seguintes aspectos:
  O desenvolvimento de um PDS que se adequasse à realidade de uma empresa júnior
(projetos desenvolvidos por alunos em cursos de graduação) e a aplicação deste PDS
em sala de aula. Antes da criação deste PDS, tal empresa trabalhou com outros
processos  acadêmicos,  como  o  XP1.  Entretanto,  observou-se  que  alguns  ajustes
teriam  que  ser  feitos  a  este  processo,  como  forma  de  atender  a  necessidades
específicas  da  empresa,  como  ter  que  manter  documentação  em  virtude  da  alta
rotatividade de alunos na mesma. Assim sendo, optou-se por definir este novo PDS;
  A  criação  de  um  ambiente  com  todos  os  elementos  que  compõem  o  PDS  para
geração dos projetos da empresa júnior e para ensino e aprendizagem do PDS, nas
aulas de engenharia de software aplicada. A estrutura do ambiente baseou-se nas
definições  do  XP1  para  tratar  os  elementos  do  processo:  papéis                       (“Quem...”),
atividades (“O que...”), atividades do tempo (“Quando...”), orientações (“Como...”);
  A utilização de projetos reais da empresa júnior  (preferencialmente), ou fictícios,
como estudos de caso nas aulas de engenharia de software aplicada, dadas em forma
de oficina de projetos de software;
  A execução do rodízio dos alunos entre os papéis, atividades e artefatos do PDS, de
forma que possam passar pelos elementos imprescindíveis à execução do PDS.
4. Simple Way: Processo e Ambiente de Desenvolvimento de Software
Esta seção apresenta algumas características do PDS definido para a empresa júnior e do
ambiente criado para dar suporte à instanciação dos projetos desta empresa, uma vez
que a proposta deste artigo é discutir especialmente a ideia de fazer uso destes enquanto
instrumentos para ensino de engenharia de software aplicada.
4.1. Simple Way Process: Um Processo de Desenvolvimento de Software
Cada empresa de desenvolvimento de software tem necessidades próprias, de acordo
com suas características de trabalho, tipos de projetos desenvolvidos, clientes, dentre
725




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
outras. Para a empresa júnior em estudo, o desenvolvimento de software deve respeitar
algumas particularidades da empresa, inerentes a alunos de graduação: alta rotatividade
dos integrantes; a equipe não tem o mesmo horário livre em comum; os integrantes da
equipe não dispõem de 8 horas diárias de trabalho.
O Simple Way Process (SWP) é um processo de software que se baseia nas boas
práticas  da  engenharia  de  software  e  tem  como  inspiração  elementos  referentes  a
cenários  de  desenvolvimento  de  software  prescritivos  ou  ágeis,  da  indústria  ou
acadêmicos: PMBok [PMBok 2004], Scrum [Scrum 2011], RUP, XP, YP e XP1. Uma
das  principais  características  do  SWP  é  ser  iterativo  e  incremental.  A  ideia  desta
abordagem consiste em obter, mais rapidamente, feedback do cliente e assim fazer
entregas mais rápidas de releases. O SWP divide o desenvolvimento do software em
releases (têm duração de 30 dias) e iterações (têm duração de 15 dias).
O SWP sugere os seguintes papéis: gerente de projetos, líderes de grupo (lideram
tecnicamente e conduzem parte da equipe), analista, desenvolvedor e testador.   Optou-se
por diferenciar os papéis em função das habilidades adquiridas pelos alunos ao longo do
curso, em diferentes momentos. Acreditou-se que essa abordagem ajudaria a viabilizar a
entrada  de  alunos  desde  os  primeiros  até  os  últimos  semestres,  proporcionando
diferentes tipos de contribuições técnicas à equipe da empresa júnior, e também a cada
aluno. Por fim, o papel do cliente também se faz presente.
Para suas atividades, o SWP sugere tanto abordagens baseadas em processos
prescritivos como ágeis. A idéia associada a mesclar as abordagens é acomodá-las às
necessidades da empresa júnior, como, por exemplo, o fato de ter que manter registros
dos projetos bem documentados em virtude da alta rotatividade da equipe, já que o
aluno concluinte deve deixar esta empresa. Por outro lado, a necessidade de entregas
rápidas, por exemplo, é incompatível com um processo pesado. O SWP pondera esses
problemas  e  tenta  equilibrar  os  aspectos  relacionados  a  eles,  buscando  alternativas
intermediárias  para  as  suas  atividades.  De  forma  geral,  pode-se  dizer  que  o  SWP
envolve atividades referentes às seguintes disciplinas: Modelagem de Negócio  (ex.:
modelar processos de negócio), Requisitos  (ex.: gerar diagramas e especificações de
casos  de  uso),  Análise  e  Projeto                                                            (ex.:  gerar  arquitetura  e  modelos  de  dados),
Implementação  (ex.: codificar testes unitários e casos de uso), Testes  (ex.: construir
roteiros  e  testes  automatizados),  Implantação                                                (ex.:  construir  manual  e  material  de
treinamento), Gerência de Projetos  (ex.: construir escopo e mapa de riscos, planejar
releases e iterações), Gerência de Mudanças (ex.: controlar solicitações de mudança) e
Ambiente (ex.: instalação de ferramentas, revisão de templates).
O SWP sugere ainda a ordem de execução dos passos do processo no tempo,
além de definir procedimentos  (orientações para execução das atividades), templates
(modelos dos artefatos gerados pelas atividades) e ferramentas (apóiam a automatização
das atividades), de forma a apoiar a sistematização deste processo.
4.2. Simple Way: Ambiente do Processo
Para auxiliar a execução das atividades do SWP, foi criado um ambiente com todos os
elementos necessários para que os membros da empresa júnior tenham a sua disposição
todos os recursos necessários para desenvolver os projetos que usarão o processo.
726




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
De tal modo, para que possa ser acessado de qualquer computador ligado à
Internet,  o  ambiente  relacionado  ao  SWP  foi  criado  através  de  um  site  na  web
(https://sites.google.com/site/simplewayp/), e tem como características principais:
•  definição  de  todos  os  elementos  do  processo  (especialmente  papéis,  atividades  e
artefatos), através de seções como “quem” (papéis do processo), “o que” (atividades do
processo),                                                                                     “quando”   (execução  do  processo  no  tempo),   “como”   (procedimentos,
artefatos e ferramentas do processo);
•  informações  sobre  as  referências  bibliográficas  que  orientaram  a  definição  do
processo;
• estrutura de navegação planejada para orientar desde os usuários que estão iniciando
suas atividades na empresa júnior àqueles que já conhecem o SWP.
A seguir, apresenta-se o ambiente criado para o SWP. Na página “Quem...”, o
site exibe os papeis do SWP, informações estas que podem ser observadas na Figura 1.
Figura 1. Ambiente do SWP - Página "Quem...”
Na página “O que...”, o site expõe as atividades do SWP, as quais podem ser
vistas de forma agrupada, por disciplinas ou por papéis, através dos links de navegação
específicos. A Figura 2 permite a visualização de tais informações.
Figura 2. Ambiente do SWP - Página "O quê...”
727




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
A Figura 3 apresenta um exemplo de página que exibe as atividades agrupadas
por disciplina. Neste caso, podem ser vistas as atividades da disciplina Modelagem de
Negócio,  assim  como  quem  executa  cada  uma  delas.  Deve  ser  observado  que  as
informações da coluna responsáveis são links de navegação para a página “Quem...”,
onde o usuário do site pode consultar informações sobre o papel que executa cada
atividade.
Figura 3. Ambiente SWP - Página "O quê..." - Subpágina Modelagem de Negócio
A Figura 4, por sua vez, oferece um modelo de página que exibe as atividades
agrupadas por papel. Nesta opção, verificam-se, portanto, as atividades que cada papel
executa. Na referida imagem é possível notar as atividades executadas pelo cliente, além
de  parte  daquelas  executadas  pelo  gerente  de  projetos.  É  válido  destacar  que  as
informações da coluna papel são links de navegação para a página “Quem...”, onde o
usuário do site pode consultar informações sobre o papel que executa cada atividade.
Figura 4. Ambiente SWP - Página "O que..." - Subpágina Atividades por Papel
Na página “Quando...”, o site apresenta a execução das atividades do SWP no
tempo, como ilustrado na Figura 5.
728




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
Figura 5 - Ambiente do SWP - Página "Quando..."
Na página “Como...”, o site oferece links para as páginas dos procedimentos,
templates e ferramentas. Essas informações podem ser vistas na Figura 6.
Figura 6 - Ambiente do SWP - Página "Como..."
A Figura  7 apresenta a página que exibe os procedimentos sugeridos para o
SWP.  É  interessante  perceber  que,  em  alguns  casos,  as  informações  da  coluna
orientações  apresentam  links  de  navegação  ou  para  a  página  “Templates”  (caso  a
orientação seja a geração de um artefato), ou para a página “Ferramentas” (caso seja
necessário o uso de alguma ferramenta para a execução da atividade).
Figura 7 - Ambiente do SWP   - Página “Como...” - Subpágina Procedimentos
A Figura 8 trata da página que contém os templates de artefatos sugeridos para o
SWP, destacando-se o fato de que a mesma apresenta um link de navegação para a
página “Procedimentos”, o que permite ao usuário consultar as informações referentes
ao uso dos templates no processo.
729




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
Figura 8 - Ambiente do SWP - Página "Como..." - Subpágina Templates
A Figura 9 mostra as ferramentas sugeridas para o SWP. A coluna de disciplinas
relacionadas  apresenta  links  para  as  páginas  das  disciplinas  do  processo.  Algumas
ferramentas apresentam links para páginas oficiais das ferramentas na web.
Figura 9 - Ambiente do SWP   - Página "Como..." - Subpágina Ferramentas
5. Relato de Experiência
O SWP começou a ser esboçado em  2010, tendo sido concluído no início de  2011.
Desde as suas primeiras sugestões de atividades, papéis e artefatos, este PDS vem sendo
utilizado tanto pela empresa júnior como nas aulas de engenharia de software aplicada.
Sobre o uso do SWP na empresa júnior, pode-se dizer que este trouxe mais
sistematização às rotinas organizacionais técnicas, garantindo mais agilidade as suas
atividades e maior qualidade aos seus produtos. O trabalho técnico da empresa, antes
apoiado pelo XP1 e ajustado com dificuldade (especialmente pela carência de templates
adequados e pela falta de padronização de ferramentas e procedimentos), passou a ser
guiado  pelo  SWP,  tendo  à  sua  disposição  todos  os  elementos  necessários  para  a
execução de cada uma das atividades do projeto. Após a implantação do SWP, tornou-se
mais  simples  a  distribuição  da  equipe  nos  seus  respectivos  papéis                    (cada  aluno,
dependendo da sua maturidade no curso, pôde ser alocado em um papel adequado).
Com o uso do XP1, era difícil absorver alunos dos períodos iniciais do curso, em
virtude  das  habilidades  técnicas  exigidas  pelos  papéis  deste  processo.  Pela  maior
diversidade e adequação de papéis à realidade da empresa júnior, atualmente podem ser
730




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
admitidos pela empresa alunos desde o período inicial do curso. Ainda tornaram-se mais
adequadas e claras as atividades do processo, o relacionamento entre elas, suas entradas,
saídas e orientações em geral. Essas melhorias também se refletiram nos clientes, que
passaram a perceber documentos e ações padronizados e um maior nível de organização
da empresa. Um dos indicadores do alcance do uso do SWP é o número de projetos
reais  (da empresa júnior) gerados através do SWP:  03 projetos. Outro indicador diz
respeito ao número de alunos integrantes da empresa que utilizaram o SWP para a
geração dos seus projetos: 22 alunos. Atualmente, a empresa conta com 12 alunos.
Com relação à aplicação do PDS e do seu ambiente em sala de aula, serão
relatados  os  principais  pontos  observados.  A  disciplina  de  engenharia  de  software
aplicada (chamada PDS, na IES considerada) é obrigatória e pertence ao 4º período (o
curso tem o total de seis períodos), sendo lecionada semestralmente. Nesta os alunos
podem ter a visão geral de todo o processo relacionado ao desenvolvimento de software,
sob a ótica de vários modelos propostos pela indústria. Considera-se que esta visão é
importante para que o aluno desenvolva sua visão crítica sobre a aplicação de PDS
diferentes (inclusive adaptados), em diversos cenários de produção de software.
Inicialmente, esta disciplina era lecionada apresentando processos como RUP e
XP, sendo escolhido o RUP para as aulas em oficina de projetos, uma vez que várias
práticas  do  XP  não  poderiam  ser  utilizadas,  especialmente  em  decorrência  da
dificuldade de os alunos trabalharem em duplas fora de sala de aula. Uma vez que o
RUP possui um grande número de papéis, atividades e artefatos gerados, alguns deles
eram  escolhidos  para  ser  executados  na  oficina.  Os  projetos  eram  fictícios  e
desenvolvidos em grupos de três ou quatro alunos. Com a definição do SWP e a criação
do seu ambiente, alguns aspectos metodológicos da disciplina sofreram mudanças. Os
alunos continuam tendo a visão inicial dos PDS da indústria, sendo somados ao RUP e
XP, o Scrum e o PMBok. Ainda são comentados alguns modelos acadêmicos, como o
YP e o XP1. Ao invés de os projetos da oficina instanciarem o RUP, eles fazem uso do
SWP e do seu ambiente. Uma vez que a professora de PDS é também consultora da
empresa, alguns projetos na disciplina são projetos ou subprojetos reais desta empresa.
Na execução dos projetos, os alunos que fazem parte da empresa júnior podem
usar o seu tempo na disciplina para desenvolver os projetos reais da empresa e assim
aplicar de fato os conceitos de engenharia de software na prática em projetos. Da turma
atual de PDS, 40% pertencem à empresa júnior. Os alunos que dela não fazem parte, por
sua vez, podem imergir temporariamente na mesma e sentir como é a rotina de trabalho
em uma empresa de desenvolvimento de software. Inclusive, alguns deles se sentem
motivados a participar do processo de seleção da empresa, depois de viverem essa
experiência  na  disciplina.  No  caso  de  serem  absorvidos  pela  empresa,  a  curva  de
aprendizado no SWP e no seu ambiente é mínima, uma vez que já foram “capacitados”
através da disciplina de engenharia de software aplicada. 33% dos integrantes atuais da
empresa  júnior  relataram  que  desejaram  participar  do  processo  seletivo  após  as
discussões sobre a empresa júnior nas aulas de engenharia de software.
A ideia associada à disciplina é que os alunos desenvolvam os projetos em
grupo, desde que seja respeitado o rodízio entre os papéis, atividades e artefatos do
SWP, para que cada um deles possa conhecer o processo como um todo e se familiarizar
com as diversas etapas da construção de um software. Um indicador do SWP referente à
731




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
disciplina engenharia de software aplicada é o número de alunos da disciplina PDS de
que utilizaram o SWP e o seu ambiente em sala de aula: 28 alunos.
Os alunos da disciplina Estágio Supervisionado também estão fazendo uso do
SWP e do seu ambiente. A idéia de aplicar o SWP e o seu ambiente no estágio surgiu
pelo fato de a professora de PDS ser a professora orientadora dos estágios, e pelo fato de
que, por interesse dos próprios alunos, todos os estágios estão sendo realizados na
empresa júnior. Uma vez que o SWP é guiado por requisitos e considerando que os
alunos no estágio supervisionado estão no último período do curso, durante o estágio,
esses alunos recebem parte do escopo de um projeto real  (que pode ser da empresa
júnior ou não) e devem passar por todas as disciplinas técnicas do SWP (Modelagem de
Negócio, Requisitos, Análise e Projeto, Implementação, Testes e Implantação). Ou seja,
durante o estágio, o aluno também tem a experiência de participar das diversas etapas da
construção de um software. Para as demais disciplinas do SWP, valem as seguintes
regras: a Gerência de Projetos deve ser executada, preferencialmente, por apenas um dos
estagiários do projeto, que por ter um grande esforço nas atividades de gerência, recebe
um menor número de requisitos do projeto (ou requisitos de menor complexidade) para
desenvolver no estágio; as demais disciplinas (Gerência de Mudanças e Ambiente), por
requererem  esforços  eventuais,  têm  esses  esforços  diluídos  entre  os  estagiários,  de
acordo com a necessidade. Toda a execução do estágio é supervisionada pela professora
orientadora de estágio. Um indicador do SWP  é o número de alunos que realizaram o
estágio e produziram projetos reais através do SWP: 08 alunos (alocados em 2 projetos).
Ao longo de sua utilização por diferentes alunos, o SWP e o ambiente vêm sendo
criticamente analisados, tendo sido criado um repositório de sugestões para melhoria de
ambos. Está prevista uma nova versão do SWP e do ambiente para abril de 2012.
6. Considerações Finais
Uma  proposta  para  ensino  e  aprendizagem  de  engenharia  de  software  aplicada  foi
apresentada neste trabalho. O objetivo é sugerir que sejam instanciados em sala de aula
modelos de PDS adaptados de acordo com as características de cada IES, e que sejam
criados ambientes que suportem esses processos, orientando os alunos na execução de
projetos. A idéia é tornar viável o desenvolvimento de projetos  (reais ou fictícios)
durante o tempo de execução das disciplinas relacionadas à engenharia de software, e
aproximar academia e indústria, trazendo aos alunos a oportunidade de desenvolver as
boas práticas desta área.
Uma vez que a IES tratada neste trabalho possui uma empresa júnior ligada ao
curso de Análise e Desenvolvimento de Sistemas, e considerando que o trabalho na
empresa respeita as restrições dos alunos em ambiente acadêmico para execução de
projetos de software, utilizou-se o PDS desta empresa, o SWP, e o seu ambiente, para a
prática de engenharia de software através das disciplinas Processos de Desenvolvimento
de Software e Estágio Supervisionado. A estrutura do SWP e a metodologia aplicada
nas disciplinas favorecem a prática da engenharia de software, a partir do momento em
que fazem com que os alunos executem o rodízio entre os papéis, atividades e artefatos
do SWP, e assim possam ter contado com os elementos imprescindíveis aos PDS.
A experiência de ensino e aprendizagem de engenharia de software através do
uso do SWP pode ser vista sob a ótica de seus benefícios multilaterais: os alunos se
732




VIII Simpósio Brasileiro de Sistemas de Informação (SBSI 2012)
Trilhas Técnicas
beneficiam através do contato com as rotinas de uma empresa de desenvolvimento de
sistemas, executando projetos de software de acordo com as boas práticas da indústria; a
empresa júnior se beneficia através do refinamento do SWP e do ambiente, a partir das
sugestões dos alunos que utilizam ambos, e através da capacitação de futuros membros
(oriundos da experiência nas disciplinas); pode-se chegar a pensar nos benefícios para a
indústria, que tem à sua disposição profissionais com bagagem teórica e prática, e
capacidade de fazer análises críticas sobre questões ligadas à construção de software.
Como  trabalho  futuro,  espera-se  executar  o  refinamento  do  SWP  e  do  seu
ambiente, através das diversas contribuições dadas como sugestões de melhoria, e da
implantação de novas versões destes ainda no primeiro semestre de  2012. Avalia-se
ainda a possibilidade de usar o SWP e seu ambiente em outras disciplinas do curso, de
forma  que  os  alunos  possam  entender  o  contexto  de  cada  disciplina,  e  dos  seus
respectivos relacionamentos, com o processo de construção de software. Para este fim,
espera-se contar com um grupo de professores e alunos que possam trabalhar de forma
integrada na idealização do uso do SWP, tanto no cenário academia, para aulas diversas,
como no cenário indústria, no dia a dia da empresa júnior.
7. Referências
AM (2011). Agile Modeling. http://www.agilemodeling.com. Janeiro.
Durscki, R. C. et al. (2004). “A Development Process to Technology Projects: An Academic
Approach”, The  2004 International Conference on Software Engineering Research and
Practice, Track on Team-based Software Engineering, USA.
Garcia, F. P. et al (2004). “easYProcess: Um Processo de Desenvolvimento para Uso no
Ambiente Acadêmico”. XII WEI - Workshop de Educação em Computação, XXIV
Congresso da Sociedade Brasileira de Computação.
Paiva, D. M. B et al (2004). “Definindo, Implantando e Melhorando Processos de Software em
Ambiente Acadêmico”. VI Simpósio Internacional de Melhoria de Processos de Software.
http://www.simpros.com.br/Apresentacoes_PDF/Artigos/Art_07_Simpros2004.pdf.
Paula Filho, W. P. (2002). “An Educational Software Development Process” Proceedings of
the  ACIS  International  Conference  on  Computer  Science,  Software  Engineering,
Information Technology, EBusiness and Applications (CSITeA'02), p.180-185.
PMBok (2004). PMBoK GUIDE - Project Management Body of Knowledge.
Pressmam, R. S. (2006). Engenharia de Software. 6 ed. São Paulo: McGraw-Hill.
RUP  (2011).  Rational  Unified  Process.  http://www.wthreex.com/rup/portugues/index.htm.
Janeiro.
Scrum (2011). Scrum Alliance. http://www.scrumalliance.org/. Janeiro.
Sommerville, Ian. (2007). Engenharia de Software. 8 ed. São Paulo: Pearson Addison-Wesley.
Teles,  V.  M.                                                                               (2006),  Extreme  Programming:  aprenda  como  encantar  seus  usuários
desenvolvendo software com alta qualidade. São Paulo: Novatec.
UPEDU (2011). Unified Process for EDUcation. http:// http://www.upedu.org/. Fevereiro.
XP (2011). eXtreme Programming. http://www.extremeprogramming.org. Janeiro.
XP1                                                                                          (2007).                                                                   “XP1:   Um   Processo   de   Desenvolvimento”.
http://dsc.ufcg.edu.br/~jacques/projetos/common/xp1/xp1.html. Março.
YP (2011).  easYProcess. http://www.dsc.ufcg.edu.br/~yp. Janeiro.
733





